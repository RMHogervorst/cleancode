<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Intermediate on Clean Code</title>
    <link>/cleancode/tags/intermediate/</link>
    <description>Recent content in Intermediate on Clean Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>hogervorst.rm@gmail.com (Roel M. Hogervorst)</managingEditor>
    <webMaster>hogervorst.rm@gmail.com (Roel M. Hogervorst)</webMaster>
    <lastBuildDate>Fri, 08 Dec 2017 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/cleancode/tags/intermediate/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Downloading files from a webserver, and failing.</title>
      <link>/cleancode/blog/2017/12/08/content/post/2017-12-08-downloading-multiple-files-and-failing/</link>
      <pubDate>Fri, 08 Dec 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2017/12/08/content/post/2017-12-08-downloading-multiple-files-and-failing/</guid>
      <description>

&lt;p&gt;Recently I wanted to download all the transcripts of a podcast (600+ episodes).
The transcripts are simple txt files so in a way
I am  not even &amp;lsquo;web&amp;rsquo;-scraping but just reading in 600 or so text files which is
not really a big deal. I thought.&lt;/p&gt;

&lt;p&gt;This post shows you where I went wrong&lt;/p&gt;

&lt;p&gt;Also here is a &lt;a href=&#34;https://www.flickr.com/photos/32123311@N00/502155430&#34; title=&#34;source: flickr, cc-by 2.0 jbloom&#34;&gt;picture&lt;/a&gt; I found of scraping.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/scraping_a_plate.jpg&#34; alt=&#34;Scraping a plate &#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;webscraping-general&#34;&gt;Webscraping general&lt;/h3&gt;

&lt;p&gt;For every download you ask the server for a file and it returns the file (this is also how you normally browse the web btw, your browser requests the pages).&lt;/p&gt;

&lt;p&gt;In general it is nice if you ask permission (I did, on twitter and the author was really nice! I recommend it!) and don&amp;rsquo;t
push the website to its limit. The  servers where these files are hosted are quite beefy and I will
probably not even make a dent in them, when I&amp;rsquo;m downloading these files. But still, be gentle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No really, be a responsible scraper and tell the website owners you are scraping (in person or by identifying in the header) and check if it is allowed&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I recently witnessed a demo where someone explained a lot of dirty tricks on how to get over those pesky servers denying them access and generally ignoring good practices and it made me sick&amp;hellip;&lt;/p&gt;

&lt;p&gt;Here are some general guides:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rud.is/b/2017/07/28/analyzing-wait-delay-settings-in-common-crawl-robots-txt-data-with-r/&#34;&gt;Bob Rudis (@hrbrmstr) about scraping and robots.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/httr/vignettes/api-packages.html&#34;&gt;excellent vignette of the httr package, read the part about user-agent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;downloading-non-html-files&#34;&gt;Downloading non-html files&lt;/h3&gt;

&lt;p&gt;There are multiple ways I could do this downloading:
if I had used rvest to scrape a website I would have set a user-agent
header&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a-piece-of-infor&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a-piece-of-infor&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
and I would have used incremental backoff: when the server refuses a connection
we would wait and retry again, if it still refuses we would wait twice as long
and retry again etc.&lt;/p&gt;

&lt;p&gt;However, since these are txt files I can just use read_lines&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:This-is-the-read&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:This-is-the-read&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;
to read the txt file of a transcript and apply further work downstream.&lt;/p&gt;

&lt;h4 id=&#34;a-first-failing-approach-tidy-but-wrong&#34;&gt;A first, failing approach, tidy but wrong&lt;/h4&gt;

&lt;p&gt;This was my first approach:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;all episodes are numbered and the transcript files are sequental too, so just a paste0 of &amp;ldquo;&lt;a href=&#34;https://first-part-of-link&amp;quot;&#34;&gt;https://first-part-of-link&amp;quot;&lt;/a&gt; number&amp;rdquo;.txt&amp;rdquo; would work.&lt;/li&gt;
&lt;li&gt;put all links as row into dataframe&lt;/li&gt;
&lt;li&gt;apply some purrr magic by mapping every link to a read_lines function (&lt;em&gt;what? use the read_lines() function on every link&lt;/em&gt; ).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;latest_episode &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;636&lt;/span&gt;
 

&lt;span class=&#34;kp&#34;&gt;system.time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 
    df_sn &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;link &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https:linktowebsite.com/firstpart-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 

                                      &lt;span class=&#34;kp&#34;&gt;formatC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;latest_episode&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; width &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;flag &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
 
        mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;transcript &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; map&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;link&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; read_lines2&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
 
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This failed.&lt;/p&gt;

&lt;p&gt;Some episodes don&amp;rsquo;t exists or have no transcript (I didn&amp;rsquo;t know). Sometimes the internet connection didn&amp;rsquo;t want to work and just threw me out. Sometimes the server stopped my requests.&lt;/p&gt;

&lt;p&gt;On every of those occasions the process would stop, give an informative error&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:really-it-did&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:really-it-did&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;. But the R-process would stop and I had no endresult.&lt;/p&gt;

&lt;h4 id=&#34;getting-more-information-to-my-eyeballs-and-pausing-in-between-requests&#34;&gt;Getting more information to my eyeballs and pausing in between requests&lt;/h4&gt;

&lt;p&gt;Also I didn&amp;rsquo;t know where it failed. So I created a new function that also sometimes waited (to not overwhelm the server)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## to see where we are this function wraps read_lines and prints the episodenumber&lt;/span&gt;
 

read_lines2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
 

    &lt;span class=&#34;kp&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;runif&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0.008&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;Sys.sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    read_lines&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This one also failed, but more informatively, I now knew if it failed on a certain episode.&lt;/p&gt;

&lt;p&gt;But ultimately, downloading files from the internet is a somewhat unpredictable process. And it is much easier to just first download all the files and read them in afterwards.&lt;/p&gt;

&lt;h4 id=&#34;a-two-step-approach-download-first-parse-later&#34;&gt;A two step approach, download first, parse later.&lt;/h4&gt;

&lt;p&gt;Also I wanted to let the logs show that I was the one doing the scraping and how to reach me if I was overwhelming the service.&lt;/p&gt;

&lt;p&gt;Enter curl.
Curl is a library that helps you download stuff, it is used by the httr package and is a wrapper around the c++ package with the same name, &lt;em&gt;wrapped by Jeroen &amp;lsquo;c-plus-plus&amp;rsquo; Ooms&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Since I ran this function a few times I downloaded some of the files, and didn&amp;rsquo;t really want to download every file again, so I also added a check to see if the file wasn&amp;rsquo;t already downloaded&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:I-thought-that-w&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:I-thought-that-w&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; . And I wanted it to print to the screen, because I like moving text over the screen when I&amp;rsquo;m debugging.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;download_file &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    filename &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;basename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file.exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;filename&lt;span class=&#34;p&#34;&gt;))){&lt;/span&gt;
        &lt;span class=&#34;kp&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;file exists: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;filename&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kp&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;downloading file:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
        h &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; new_handle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;failonerror &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;FALSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        h &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; handle_setheaders&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;h&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;scraper by RM Hogervorst, @rmhoge, gh: rmhogervorst&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        curl_download&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;url &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;destfile &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;filename&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;mode &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;wb&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; handle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; h&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;kp&#34;&gt;Sys.sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;sample&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# copied this from  Bob Rudis(@hrbrmstr)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I set the header (I think&amp;hellip;) and I tell &lt;code&gt;curl&lt;/code&gt; not to worry if it fails, &lt;em&gt;we all need reassurance sometimes&lt;/em&gt;, but just to continue.&lt;/p&gt;

&lt;p&gt;And the downloading begins:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# we choose walk here, because we don&amp;#39;t expect output (we do get prints)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# We specificaly do this for the side-effect: downloading to a folder.&lt;/span&gt;

latest_episode &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;636&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#downloading&lt;/span&gt;
walk&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://first-part-of-link.com/episodenr-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
           &lt;span class=&#34;kp&#34;&gt;formatC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;latest_episode&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; width &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;flag &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; download_file&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;So in general, don&amp;rsquo;t be a dick, ask permission and take it easy.&lt;/p&gt;

&lt;p&gt;The final download approach works great! And it doesn&amp;rsquo;t matter if you stop it halfway. In the future you can see why I wanted all of these files.&lt;/p&gt;

&lt;p&gt;I thought this would be the easy step, would the rest be even harder? Tune in next time!&lt;/p&gt;

&lt;h4 id=&#34;cool-things-that-i-could-have-done&#34;&gt;Cool things that I could have done:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;use purrr::safely ? I think it will continue to work after a fail then?&lt;/li&gt;
&lt;li&gt;use a trycatch in the download&lt;/li&gt;
&lt;li&gt;first check if the file exists&lt;/li&gt;
&lt;li&gt;Do something more with curl, honestly it has many many options that I just didn&amp;rsquo;t explore.&lt;/li&gt;
&lt;li&gt;use some CLI spinners for every download, way cooler&lt;/li&gt;
&lt;li&gt;write to a log, and not to the console.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a-piece-of-infor&#34;&gt;a piece of information we snd with every request that describes who we are &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a-piece-of-infor&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:This-is-the-read&#34;&gt;This is the readr variant of readLines from base-R, it is much faster then the original &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:This-is-the-read&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:really-it-did&#34;&gt;really, it did &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:really-it-did&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:I-thought-that-w&#34;&gt;I thought that was really clever, didn&amp;rsquo;t you? &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:I-thought-that-w&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Writing manuscripts in Rstudio, easy citations</title>
      <link>/cleancode/blog/2017/03/14/content/post/2017-03-14-writing-manuscripts-in-rstudio/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2017/03/14/content/post/2017-03-14-writing-manuscripts-in-rstudio/</guid>
      <description>

&lt;h2 id=&#34;intro-and-setup&#34;&gt;Intro and setup&lt;/h2&gt;

&lt;p&gt;This is a simple explanation of how to write a manuscript in RStudio. Writing a manuscript in RStudio is not ideal, but it has gotten better over time. It is now relatively easy to add citations to documents in RStudio.&lt;/p&gt;

&lt;p&gt;**The goal is not think about formatting, and citations, but to write the manuscript and add citations on the fly with a nice visual help. **&lt;/p&gt;

&lt;p&gt;This tutorial explains how to link Zotero (a reference manager) to your project folder and how to easily add citations.
In this tutorial I assume you have &lt;a href=&#34;www.zotero.org&#34;&gt;Zotero&lt;/a&gt; installed.
You will need to have the zotero extension &lt;a href=&#34;https://github.com/retorquere/zotero-better-bibtex/wiki&#34;&gt;betterBibtex&lt;/a&gt; installed and I will
use RStudio, with the packages knitr, shiny and other basic tooling in place.
To search and insert citations in a file you will need to install the package
&lt;code&gt;citr&lt;/code&gt;  install the latest &lt;a href=&#34;https://github.com/crsh/citr&#34;&gt;&lt;em&gt;dev-version from github&lt;/em&gt;&lt;/a&gt; or the stable version from &lt;a href=&#34;https://CRAN.R-project.org/package=citr&#34;&gt;cran&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;why-would-i-write-my-manuscript-in-rstudio&#34;&gt;Why would I write my manuscript in RStudio?&lt;/h2&gt;

&lt;p&gt;The main reasons to write in RStudio ( and not in f.i. Word ) are reproducibity, and version control. Writing in plain text as you do in RStudio makes it very easy to keep track of your work with version control and the plain files are easily shared. Working from RStudio also allows you to combine the code and text in one document. This is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Literate_programming&#34; title=&#34;wikipedia link&#34;&gt;literate programming&lt;/a&gt;. Literate programming makes it incredibly easy to share your code (it&amp;rsquo;s in the document) and compiling the document runs the code again, ensuring reproducibility.&lt;/p&gt;

&lt;p&gt;I use RStudio projects so everything
important to a project is in the same folder and the working directory is  automatically correct. I create a new RMarkdown document &lt;img src=&#34;{{ site.url }}/images/example_rstudio_manuscript.PNG&#34; alt=&#34;rmarkdown doc&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;earlier-workflows&#34;&gt;Earlier workflows&lt;/h4&gt;

&lt;p&gt;It was always possible to intersperse code and text in R, previously people used the &lt;code&gt;Sweave&lt;/code&gt; package to combine code and text. You had to write the text in Latex and markup the code. Latex prints very pretty, but in raw form it is horrible to read, as you can see in the example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\documentclass[12pt]{article}
\usepackage{lingmacros}
\usepackage{tree-dvips}
\begin{document}

\section*{Notes for My Paper}

Don&#39;t forget to include examples of topicalization.
They look like this:

{\small
\enumsentence{Topicalization from sentential subject:\\ 
\shortex{7}{a John$_i$ [a &amp;amp; kltukl &amp;amp; [el &amp;amp; 
  {\bf l-}oltoir &amp;amp; er &amp;amp; ngii$_i$ &amp;amp; a Mary]]}
{ &amp;amp; {\bf R-}clear &amp;amp; {\sc comp} &amp;amp; 
  {\bf IR}.{\sc 3s}-love   &amp;amp; P &amp;amp; him &amp;amp; }
{John, (it&#39;s) clear that Mary loves (him).}}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;I copied this from a example page.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:http-mally-stanf&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:http-mally-stanf&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The output looks beautiful, but it&amp;rsquo;s damn near unworkable in plain text. And even worse, mistakes are easily made and very hard to find (since you don&amp;rsquo;t know where the trouble started, and the error messages are quite cryptic).&lt;/p&gt;

&lt;h4 id=&#34;from-latex-sweave-to-rmarkdown&#34;&gt;From latex / Sweave to RMarkdown&lt;/h4&gt;

&lt;p&gt;Markdown is a very simple markup language that is readable for humans and can be translated into html / latex / word / etc by computers. In stead of \section{name fo the section} we can just use a pound symbol (a.k.a. hashtag: #) to mark a heading. One pound for a heading 1, 2 for heading 2 etc. The difference between markdown and RMarkdown is R-code in the text. There are plenty good tutorials out there so I will only give you one&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:http-rmarkdown-r&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:http-rmarkdown-r&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; and a search online will give you more.&lt;/p&gt;

&lt;h4 id=&#34;citations&#34;&gt;Citations&lt;/h4&gt;

&lt;p&gt;Citations connect your paper to the past, linking your research to earlier research. It is essential that people can find the correct paper or book you are referring to. For that reason (and vanity I think) there are many styles of citations. I&amp;rsquo;ve used the APA and Chicago style in the past and there are probably about 500. Every single one has different rules; cite inline by author name and year, or by number, etc.&lt;/p&gt;

&lt;p&gt;If you resubmit your paper to a journal with a different citation style you have to rewrite every citation in the manuscript. Because we have better things to do, there are reference managers that automatically use the correct styling. And that change all the references in the text. I have used this in Word and LibreOffice in the past. But changing styles works a bit different in plain text formats such as markdown and latex. In general you cite research by a &lt;strong&gt;key&lt;/strong&gt; that refers to a &lt;strong&gt;bibliography&lt;/strong&gt;. In the build process the keys are replaced with the citations in the style that you want, so that the endproduct has the correct citations.
This is also implemented in Latex and RStudio. In general the workflow is as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;add the citations in the correct &amp;lsquo;language&amp;rsquo; (bibtex) to your document or to a different document and provide a link to.&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;keys&lt;/strong&gt; that refer to the correct entry in the bibtex.&lt;/li&gt;
&lt;li&gt;The citation manager inserts the correctly styled reference in the correct location while it writes the final version.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You write and cite like this:&lt;/p&gt;

&lt;p&gt;&amp;ldquo;The ggplot2 package is used to plot images in layers [@wickham_ggplot2_2009].&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The key (a at-sign and name) refers to a bibtex entry. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@book{wickham_ggplot2_2009,
  address = {New York, NY},
  title = {Ggplot2},
  isbn = {978-0-387-98140-6 978-0-387-98141-3},
  language = {en},
  timestamp = {2017-02-19T10:19:27Z},
  urldate = {2015-11-09},
  url = {http://ggplot2.org},
  publisher = {{Springer New York}},
  author = {Wickham, Hadley},
  year = {2009},
  note = {04749},
  file = {ggplot2 - hadley wickham.pdf:C\:\\Users\\roel\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\aw40nx7l.default\\zotero\\storage\\AADU9XVP\\ggplot2 - hadley wickham.pdf:application/pdf}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which will resolve to (if you use APA formatting):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The ggplot2 package is used to plot images in layers (Wickham, 2009).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;bibtex-files-creation&#34;&gt;Bibtex files creation&lt;/h3&gt;

&lt;p&gt;Now, making your own bibtex files is a serious pain in the backside. So we don&amp;rsquo;t do that. We also don&amp;rsquo;t try to remember all the keys, but first about the creation of the bibtex file.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t want to keep track of the correct way to cite sources, that is just a waste of time. We have excellent reference managers for this goal. I use Zotero. I just throw the pdfs in the correct folder and Zotero finds the correct metadata using the pdfs DOI (digital object identifier).
This is how it looks on my computer
&lt;img src=&#34;{{ site.url }}/images/example_zotero_look.PNG&#34; alt=&#34;a snapshot of zotero on my pc&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I use the extension &lt;a href=&#34;link&#34;&gt;betterbibtex&lt;/a&gt;, that adds extra functionality to Zotero. In this case it also takes care of synchronizing the bibtext file that you export to the folder you&amp;rsquo;re working in and the corresponding collection in Zotero. (see further on).&lt;/p&gt;

&lt;p&gt;I export the collection from zotero into the rstudio folder. &lt;img src=&#34;{{ site.url }}/images/example_zotero_keep_updated.PNG&#34; alt=&#34;zotero keep updated image&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;the-rmarkdown-document&#34;&gt;The RMarkdown document&lt;/h4&gt;

&lt;p&gt;If you open a new rmarkdown document from the RStudio console a basic document with metadata is already opened.
The top of your manuscript should contain metadata such as the title output and in this case we also need to append it to show where to find the bibliography.:
For example we make a html document called sample_Document with a bibliography based on a document bibliography.bib found in the same folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Sample Document&amp;quot;
output: html_document
bibliography: bibliography.bib
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While writing the manuscript we cite like so &lt;img src=&#34;{{ site.url }}/images/example_adding_citations_rmarkdown.PNG&#34; alt=&#34;image of citing&#34; /&gt;&lt;/p&gt;

&lt;p&gt;For more information about citations and bibliographies look at the RStudio website&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:http-rmarkdown-r&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:http-rmarkdown-r&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h4 id=&#34;choosing-a-citation-style-in-the-manuscript&#34;&gt;Choosing a citation style in the manuscript&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;update 2017-03-15&lt;/em&gt; Michael Koontz &lt;a href=&#34;https://twitter.com/_mikoontz/status/838859261572591623&#34;&gt;explains how to add a citation style to your document&lt;/a&gt; in short:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;search for a citation style &lt;a href=&#34;https://github.com/citation-style-language/styles/find/master&#34;&gt;https://github.com/citation-style-language/styles/find/master&lt;/a&gt; (f.i. APA)&lt;/li&gt;
&lt;li&gt;find the correct file and click on raw&lt;/li&gt;
&lt;li&gt;copy the link to the citation style file in the yaml
&lt;code&gt;
---
title: &amp;quot;Sample Document&amp;quot;
output: html_document
bibliography: bibliography.bib
csl: https://raw.githubusercontent.com/citation-style-language/styles/master/apa.csl
---
&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;making-citing-easier-with-the-help-of-citr&#34;&gt;Making citing easier with the help of CITR&lt;/h4&gt;

&lt;p&gt;Then use the citr package &lt;a href=&#34;https://github.com/crsh/citr&#34;&gt;https://github.com/crsh/citr&lt;/a&gt;.
&lt;em&gt;Citr works quite nicely, but unfortunately it has recently acquired default behavior that is frankly annoying. If Zotero is active (open in a window on your computer), citr will ignore the bibliography you mentioned in the top of the document and just try to read in the entire zotero library. (which will fail on my computer) I had to change a setting to change this.&lt;/em&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:you-have-to-chan&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:you-have-to-chan&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Loading citations:
&lt;img src=&#34;{{ site.url }}/images/example_loading_citr.PNG&#34; alt=&#34;image of loading citr&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Adding a citation to a document:
&lt;img src=&#34;{{ site.url }}/images/example_adding_citation_with_citr.PNG&#34; alt=&#34;image of adding a citation&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This adds the correct citation as you can see&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;{{ site.url }}/images/example_citation_side_by_side.PNG&#34; alt=&#34;side by side comparison&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This piece became a bit longer then anticipated but I discovered new behavior of &lt;code&gt;citr&lt;/code&gt;, so there&amp;rsquo;s that.
All in all RStudio / R and related tools can become the complete workbench for reading in data, cleaning and analyzing, and also writing the manuscript.&lt;/p&gt;

&lt;p&gt;For practical examples of reproducible work see this book&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:https-www-practi&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:https-www-practi&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:http-mally-stanf&#34;&gt;&lt;a href=&#34;http://mally.stanford.edu/~sr/computing/latex-example.html&#34;&gt;http://mally.stanford.edu/~sr/computing/latex-example.html&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:http-mally-stanf&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:http-rmarkdown-r&#34;&gt;&lt;a href=&#34;http://rmarkdown.rstudio.com/lesson-1.html&#34;&gt;http://rmarkdown.rstudio.com/lesson-1.html&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:http-rmarkdown-r&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:http-rmarkdown-r&#34;&gt;&lt;a href=&#34;http://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html&#34;&gt;http://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:http-rmarkdown-r&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:you-have-to-chan&#34;&gt; you have to change &lt;code&gt;options(citr.use_betterbiblatex = FALSE)&lt;/code&gt; adding this to .Renviron works &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:you-have-to-chan&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:https-www-practi&#34;&gt;&lt;a href=&#34;https://www.practicereproducibleresearch.org/&#34;&gt;https://www.practicereproducibleresearch.org/&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:https-www-practi&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Plotting a map with ggplot2, color by tile</title>
      <link>/cleancode/blog/2017/01/06/content/post/2017-01-07-plotting-a-map-with-ggplot2/</link>
      <pubDate>Fri, 06 Jan 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2017/01/06/content/post/2017-01-07-plotting-a-map-with-ggplot2/</guid>
      <description>

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Last week I was playing with creating maps using R and GGPLOT2. As I was learning I realized information about creating maps in ggplot is scattered over the internet. So here I combine all that knowledge. So if something is absolutely wrong/ ridiculous / stupid / slightly off or not clear, contact me or &lt;a href=&#34;https://github.com/RMHogervorst/cleancode/issues&#34;&gt;open an issue on the github page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When you search for plotting examples you will often encounter the packages &lt;code&gt;maps&lt;/code&gt; and &lt;code&gt;mapdata&lt;/code&gt;. However most of the examples are based on the USA, which is conveniently already contained in those packages.&lt;/p&gt;

&lt;p&gt;But since I wanted to plot The Netherlands, I was out of luck, I couldn&amp;rsquo;t find a map of The Netherlands in those packages. But.. you can build those maps yourself!&lt;/p&gt;

&lt;p&gt;This tutorial consists of :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;downloading the shapefile of your country&lt;/li&gt;
&lt;li&gt;getting the file in your R session&lt;/li&gt;
&lt;li&gt;basis plotting with ggplot&lt;/li&gt;
&lt;li&gt;combining the shapefile with other information&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The end result is a map of a country with municipals colored by number of people in there.&lt;/p&gt;

&lt;h2 id=&#34;downloading-the-file-to-your-computer&#34;&gt;Downloading the file to your computer&lt;/h2&gt;

&lt;p&gt;Steps: download shape files for your country from &lt;a href=&#34;http://www.gadm.org/country&#34;&gt;http://www.gadm.org/country&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NOTE THAT YOU CAN NOT USE THESE CHARTS FOR COMMERCIAL APPLICATIONS. &lt;em&gt;You can however use charts created by the Kadaster or Netherlands Statistics Institute (CBS)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Choose a country and choose a file format. I chose &lt;code&gt;R (SpatialPolygonsDataFrame)&lt;/code&gt;. In the next page you can choose the level of detail in the map.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/gadm_levels.PNG&#34; alt=&#34;image of the Netherlands with different borders&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The picture above you can see what I saw. This type of picture is available for every country.&lt;/p&gt;

&lt;p&gt;If you download the shapefile on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;level 0 : you will get the outline of the country (everything yellow)&lt;/li&gt;
&lt;li&gt;level 1 : Major borders, that is every province in the Netherlands (everything red)&lt;/li&gt;
&lt;li&gt;level 2 : Boundaries of counties, districts &lt;em&gt;Dutch: gemeenten&lt;/em&gt; (blue lines)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you download on level 2 you will also get the information of level 1 en level 0. The file is thus larger and has a ridiculous amount of detail.&lt;/p&gt;

&lt;p&gt;Download the file to your computer in the folder data [link to best practices]&lt;/p&gt;

&lt;h2 id=&#34;getting-the-file-into-r&#34;&gt;Getting the file into R&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;sp&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# you need this library to work with SpatialPolygons&lt;/span&gt;
NLD &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;readRDS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;shapefiles/NLD_adm2.rds&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point you can already use this file with base plot try: &lt;code&gt;plot(NLD)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;However we want to manipulate this file and use it in ggplot. The following part is about the structure of the file, to see what happens next, skip it and go to the next.&lt;/p&gt;

&lt;h3 id=&#34;about-the-structure-of-this-file&#34;&gt;about the structure of this file&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Note: you don&amp;rsquo;t need to know this, you can just skip ahead to the next heading.&lt;/strong&gt; The file that you imported is a SpatialPolygonsDataFrame, which is a special object. This is a s4 object &lt;em&gt;try google for the difference between s3 and s4 objects and more in R&lt;/em&gt;. Whats important is that an S4 object has &amp;lsquo;slots&amp;rsquo; that are accessible through the &lt;code&gt;@&lt;/code&gt; symbol. try typing in the name of the object followed by a &lt;code&gt;$&lt;/code&gt; and with the &lt;code&gt;@&lt;/code&gt; sign. The object contains a slot for &lt;em&gt;data&lt;/em&gt;, &lt;em&gt;polygons&lt;/em&gt;, &lt;em&gt;plotorder&lt;/em&gt;, &lt;em&gt;bbox&lt;/em&gt; and &lt;em&gt;proj4strings.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;*I had great help inspecting this &lt;a href=&#34;https://gis.stackexchange.com/questions/87789/spatialpointsdataframe-properties-and-operators-in-r&#34;&gt;stackoverflow question&lt;/a&gt;. The point of this S4 object is that you almost never have to manipulate the deeper structure of the file. there are functions that do those steps for you.&lt;/p&gt;

&lt;p&gt;But I thought it would be interesting to understand this structure&lt;/p&gt;

&lt;p&gt;First we look at &lt;strong&gt;data&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;tibble&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# better printing&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# obviously&lt;/span&gt;
NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; as_tibble&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 491 × 15
##    OBJECTID  ID_0   ISO      NAME_0  ID_1  NAME_1  ID_2         NAME_2
##       &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;          &amp;lt;chr&amp;gt;
## 1         1   158   NLD Netherlands     1 Drenthe     1    Aa en Hunze
## 2         2   158   NLD Netherlands     1 Drenthe     2          Assen
## 3         3   158   NLD Netherlands     1 Drenthe     3  Borger-Odoorn
## 4         4   158   NLD Netherlands     1 Drenthe     4      Coevorden
## 5         5   158   NLD Netherlands     1 Drenthe     5      De Wolden
## 6         6   158   NLD Netherlands     1 Drenthe     6          Emmen
## 7         7   158   NLD Netherlands     1 Drenthe     7      Hoogeveen
## 8         8   158   NLD Netherlands     1 Drenthe     8         Meppel
## 9         9   158   NLD Netherlands     1 Drenthe     9 Midden-Drenthe
## 10       10   158   NLD Netherlands     1 Drenthe    10    Noordenveld
## # ... with 481 more rows, and 7 more variables: HASC_2 &amp;lt;chr&amp;gt;, CCN_2 &amp;lt;int&amp;gt;,
## #   CCA_2 &amp;lt;chr&amp;gt;, TYPE_2 &amp;lt;chr&amp;gt;, ENGTYPE_2 &amp;lt;chr&amp;gt;, NL_NAME_2 &amp;lt;chr&amp;gt;,
## #   VARNAME_2 &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;tail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;##     OBJECTID ID_0 ISO      NAME_0 ID_1       NAME_1 ID_2      NAME_2
## 490      490  158 NLD Netherlands   14 Zuid-Holland  490 Zoeterwoude
## 491      491  158 NLD Netherlands   14 Zuid-Holland  491 Zwijndrecht
##       HASC_2 CCN_2 CCA_2   TYPE_2    ENGTYPE_2 NL_NAME_2 VARNAME_2
## 490 NL.ZH.ZD    NA       Gemeente Municipality                    
## 491 NL.ZH.ZW    NA       Gemeente Municipality
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The slot data contains 491 rows with 15 variables. This data is hierarchical with level 1 nested under level 0 and level 2 nested under level 1. So this data contains information about municipalies (Dutch: gemeenten) that are part of a province (Dutch: provincie), that are part of a country: Nederland. On every level there is an &lt;code&gt;ID&lt;/code&gt; and a &lt;code&gt;NAME&lt;/code&gt;. There is a ID_0 and a corresponding NAME_0, and a ID_1 with a NAME_1 and finally a ID_2 and NAME_2.&lt;/p&gt;

&lt;p&gt;The structure:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ID_x: level identification ID_0 = country, ID_1 = province, ID_2 = Municipality&lt;/li&gt;
&lt;li&gt;NAME_x: the name of the level region&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;f.i. :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;OBJECTID  ID_0   ISO      NAME_0  ID_1  NAME_1  ID_2         NAME_2   
8         8   158   NLD Netherlands     1 Drenthe     8         Meppel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Meppel is Municipality in the Province Drenthe in the country Netherlands.&lt;/p&gt;

&lt;p&gt;other variables: - OBJECTID: link to polygons (and rownumber) - ISO: I think the International Standards Organisation code of the country - HASC_2 some sort of coding Country.province,area - CCN_2 don&amp;rsquo;t know - CCA_2 don&amp;rsquo;t know - TYPE_2 name of type 2 Gemeente in my case - ENGTYPE_2 English name for TYPE_2 (Municipality) - NL_NAME_2 don&amp;rsquo;t know - VARNAME_2 I think variants of the Municipality name&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s look at the &lt;strong&gt;Polygons&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not entirely sure about the relation between &lt;em&gt;data&lt;/em&gt; and &lt;em&gt;polygons&lt;/em&gt; but there seems to be a link where OBJECTID from data corresponds to the group ID of the polygons.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;polygons &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] 491
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;polygons&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# read the tenth object &lt;/span&gt;
  slotNames&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# and give me the slotnames&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Polygons&amp;quot;  &amp;quot;plotOrder&amp;quot; &amp;quot;labpt&amp;quot;     &amp;quot;ID&amp;quot;        &amp;quot;area&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Every polygon object of the 491 polygons has&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Polygons [1] : which make up the area of this part of the chart.&lt;/li&gt;
&lt;li&gt;plotOrder: This has something to do with which shapes are presented first. However all the objects in here have plotOrder 1. So I really don&amp;rsquo;t know what this is.&lt;/li&gt;
&lt;li&gt;labpt: this is the centroid of the polygon. The middle point as it were.&lt;/li&gt;
&lt;li&gt;ID: identical to rownumber/OBJECTID in &lt;code&gt;@data&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;area: I think the square kilometer area inside the polygon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I believe that there can be more Polygons inside the Polygons of an area. So if we look inside of one polygon in a polygon..&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;polygons&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;Polygons&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; slotNames&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;labpt&amp;quot;   &amp;quot;area&amp;quot;    &amp;quot;hole&amp;quot;    &amp;quot;ringDir&amp;quot; &amp;quot;coords&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We see that every part has a middle point, area size a hole a ringdir and a matrix of coordinates.&lt;/p&gt;

&lt;p&gt;Lets move back out to the top and look at plotorder: which is 1 again&amp;hellip; and the other two slots: bbox and proj4string.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;bbox&lt;/strong&gt; is the bounding box. the ultimate limits of the area described by this dataframe.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;bbox&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;##         min       max
## x  3.360782  7.227095
## y 50.723492 53.554585
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;proj4string&lt;/strong&gt; is a notation that tells graphical systems what coordinate system is used. Because there are a lot of coordinates!
in this case &lt;code&gt;+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0&lt;/code&gt; So a longitude lattitude projection, with datum wgs84 which is a &lt;a href=&#34;https://en.wikipedia.org/wiki/World_Geodetic_System&#34;&gt;worldwide used coordinate system&lt;/a&gt;. And I think the last part is an ofset if necessary.&lt;/p&gt;

&lt;p&gt;So concluding: This dataframe consists of general describing data in &lt;code&gt;@data&lt;/code&gt; coordinates for every row, with some coordinate referencing to help translating the coordinates into other projections.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Read on from here&lt;/em&gt; ## Basic plotting of the map with ggplot Why don&amp;rsquo;t we just plot the map?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# can&amp;#39;t work without it&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NLD&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Regions defined for each Polygons
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-5-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We got a message: Regions defined for each Polygons, this is ggplot telling us that some work was done on the background to reshape the data for plotting use.&lt;/p&gt;

&lt;p&gt;Also, the map looks really, really ugly. What&amp;rsquo;s the deal? Because ggplot doesn&amp;rsquo;t know what kind of data this is, it stretches the points untill the plotting region is filled.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s try something where all the steps in the x direction are identical to the y direction. Let&amp;rsquo;s fix the coordinates.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NLD&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
               aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  coord_fixed&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Regions defined for each Polygons
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-6-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This looks better, but for people from the Netherlands, this still doesn&amp;rsquo;t look quite right. The country is stretched in a weird way and the center, filled with a &lt;a href=&#34;https://en.wikipedia.org/wiki/IJsselmeer&#34; title=&#34;this lake used to be a sea, but we didn&#39;t want a sea anymore&#34;&gt;big ass man made lake&lt;/a&gt; should not by plotted.&lt;/p&gt;

&lt;p&gt;First the stretching. There is a special coordinate thingy in ggplot called coord_map(). I like the standard projection, but if you liek you can try any of the projections in &lt;code&gt;?mapproj::mapproject&lt;/code&gt; . Go crazy!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NLD&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Regions defined for each Polygons
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-7-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Lets first take out the lakes. This is where local knowledge comes to play. If we look at the level_1 names &lt;code&gt;NLD@data$NAME_1 %&amp;gt;% unique()&lt;/code&gt;, we see 14 different areas. However, there are only 12 provinces in the Netherlands. 2 of these areas are actually lakes: &amp;ldquo;IJsselmeer&amp;rdquo; and &amp;ldquo;Zeeuwse meren&amp;rdquo;. We can get those out by using subset.[2]. The command says: subset NLD where NLD$NAME_! is NOT the two lakes.&lt;/p&gt;

&lt;p&gt;I also want to lose the message. Use &lt;code&gt;fortify()&lt;/code&gt; to apply the polygons to region transformation.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD_fixed &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;subset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;NLD&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;NAME_1  &lt;span class=&#34;o&#34;&gt;%in%&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Zeeuwse meren&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;IJsselmeer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
NLD_fixed &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; fortify&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD_fixed&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Regions defined for each Polygons
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#NLD_fixed &amp;lt;- broom::tidy(NLD) # this would also work and is recommended by Hadley Wickham in the future.&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD_fixed&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-8-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s add some color!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD_fixed&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# no backgroundcolor&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# color is the lines of the region&lt;/span&gt;
                fill &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;#9C9797&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# fill is the fill of every polygon.&lt;/span&gt;
  coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-9-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;combine-the-map-with-another-dataset-and-color-the-tiles&#34;&gt;Combine the map with another dataset and color the tiles&lt;/h2&gt;

&lt;p&gt;From the open data portal of the Netherlands I downloaded the number of people every municipally. Yeah open data!&lt;/p&gt;

&lt;p&gt;loading the data. skipping the file information, selecting only the columns with a municipal name and number and throwing away empty columns. &lt;em&gt;note that there will be some discrepancies, the map information is a bit older and the municipallies are from 2016, so some names might not match. If I really care I could do some matching. But I don&amp;rsquo;t.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;gemeenten2016sept &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; readr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;read_csv2&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data/Bevolking__leeftijd,_050117111254.csv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;skip &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gemeente &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`Regio&amp;#39;s`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; number &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; aantal&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;is.na&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;number&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   `Regio&#39;s` = col_character(),
##   Perioden = col_integer(),
##   Leeftijd = col_character(),
##   aantal = col_integer()
## )

## Warning: 1 parsing failure.
## row col  expected    actual
## 391  -- 4 columns 1 columns
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Combining the map information, names of municipalies and number of people in one file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;combine IDs inside the map information, with names and numbers.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;names_and_numbers &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;rownames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;data&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                                gemeente&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;data&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;NAME_2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  left_join&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gemeenten2016sept&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; by &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;gemeente&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Combining the names and numbers with the map information.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;final_map &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; left_join&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD_fixed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; names_and_numbers&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; by &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;final_map&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; fill&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; number&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;grey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; alpha &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  scale_fill_distiller&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;name &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Number of people in gemeente&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# change titel legend&lt;/span&gt;
                       palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Spectral&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# change the color scheme&lt;/span&gt;
  theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# chagne the legend position&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-12-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;[1] I know! really confusing, polygons inside polygons!, crezy!&lt;/p&gt;

&lt;p&gt;[2] I haven&amp;rsquo;t found a tidy way to do this yet&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.milanor.net/blog/maps-in-r-introduction-drawing-the-map-of-europe/&#34;&gt;http://www.milanor.net/blog/maps-in-r-introduction-drawing-the-map-of-europe/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/9199727/themathic-map-choropleth-map-of-the-netherlands&#34;&gt;http://stackoverflow.com/questions/9199727/themathic-map-choropleth-map-of-the-netherlands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pdok.nl/nl/producten/pdok-downloads/basis-registratie-kadaster/bestuurlijke-grenzen-actueel&#34;&gt;https://www.pdok.nl/nl/producten/pdok-downloads/basis-registratie-kadaster/bestuurlijke-grenzen-actueel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eriqande.github.io/rep-res-web/lectures/making-maps-with-R.html&#34;&gt;http://eriqande.github.io/rep-res-web/lectures/making-maps-with-R.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;session-info&#34;&gt;Session info&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;devtools&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;session_info&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Session info --------------------------------------------------------------

##  setting  value                       
##  version  R version 3.3.2 (2016-10-31)
##  system   x86_64, mingw32             
##  ui       RTerm                       
##  language (EN)                        
##  collate  Dutch_Netherlands.1252      
##  tz       Europe/Berlin               
##  date     2017-01-07

## Packages ------------------------------------------------------------------

##  package      * version date       source        
##  assertthat     0.1     2013-12-06 CRAN (R 3.3.0)
##  backports      1.0.4   2016-10-24 CRAN (R 3.3.2)
##  colorspace     1.3-2   2016-12-14 CRAN (R 3.3.2)
##  DBI            0.5-1   2016-09-10 CRAN (R 3.3.1)
##  devtools       1.12.0  2016-06-24 CRAN (R 3.3.1)
##  digest         0.6.10  2016-08-02 CRAN (R 3.3.1)
##  dplyr        * 0.5.0   2016-06-24 CRAN (R 3.3.1)
##  evaluate       0.10    2016-10-11 CRAN (R 3.3.2)
##  ggplot2      * 2.2.1   2016-12-30 CRAN (R 3.3.2)
##  gtable         0.2.0   2016-02-26 CRAN (R 3.3.0)
##  htmltools      0.3.5   2016-03-21 CRAN (R 3.3.0)
##  knitr          1.15.1  2016-11-22 CRAN (R 3.3.2)
##  labeling       0.3     2014-08-23 CRAN (R 3.3.0)
##  lattice        0.20-34 2016-09-06 CRAN (R 3.3.2)
##  lazyeval       0.2.0   2016-06-12 CRAN (R 3.3.0)
##  magrittr       1.5     2014-11-22 CRAN (R 3.3.0)
##  mapproj        1.2-4   2015-08-03 CRAN (R 3.3.2)
##  maps           3.1.1   2016-07-27 CRAN (R 3.3.2)
##  memoise        1.0.0   2016-01-29 CRAN (R 3.3.0)
##  munsell        0.4.3   2016-02-13 CRAN (R 3.3.0)
##  plyr           1.8.4   2016-06-08 CRAN (R 3.3.0)
##  R6             2.2.0   2016-10-05 CRAN (R 3.3.1)
##  RColorBrewer   1.1-2   2014-12-07 CRAN (R 3.3.0)
##  Rcpp           0.12.8  2016-11-17 CRAN (R 3.3.2)
##  readr          1.0.0   2016-08-03 CRAN (R 3.3.1)
##  rmarkdown      1.3     2016-12-21 CRAN (R 3.3.2)
##  rprojroot      1.1     2016-10-29 CRAN (R 3.3.2)
##  scales         0.4.1   2016-11-09 CRAN (R 3.3.2)
##  sp           * 1.2-4   2016-12-22 CRAN (R 3.3.2)
##  stringi        1.1.2   2016-10-01 CRAN (R 3.3.1)
##  stringr        1.1.0   2016-08-19 CRAN (R 3.3.1)
##  tibble       * 1.2     2016-08-26 CRAN (R 3.3.1)
##  withr          1.0.2   2016-06-20 CRAN (R 3.3.1)
##  yaml           2.1.14  2016-11-12 CRAN (R 3.3.2)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Submitting your first package to CRAN, my experience</title>
      <link>/cleancode/blog/2016/07/09/content/post/2016-07-09-submtting-to-cran-first-experience/</link>
      <pubDate>Sat, 09 Jul 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/07/09/content/post/2016-07-09-submtting-to-cran-first-experience/</guid>
      <description>

&lt;p&gt;I recently published my first R package to  The Comprehensive R Archive Network  (CRAN). It was very exciting and also quite easy. Let me walk you through my process.&lt;/p&gt;

&lt;p&gt;First a description of my brand new package: badgecreatr, then a description of steps to take for submission.&lt;/p&gt;

&lt;h1 id=&#34;package-description&#34;&gt;Package description&lt;/h1&gt;

&lt;p&gt;When you go around github looking at projects you often see these interesting images in the readme
&lt;a href=&#34;https://travis-ci.org/hadley/ggplot2&#34;&gt;&lt;img src=&#34;https://travis-ci.org/hadley/ggplot2.svg?branch=master&#34; alt=&#34;Build Status&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;http://cran.r-project.org/package=ggplot2&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/ggplot2&#34; alt=&#34;CRAN_Status_Badge&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The ones you see above are from &lt;a href=&#34;https://github.com/hadley/ggplot2&#34;&gt;ggplot2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What are these? These are what we call badges or shields and they are often actively generated to indicate if software is actually working or not.&lt;/p&gt;

&lt;p&gt;Travis-ci, a continous integration service, creates the first one: the one that says build | passing. Everytime a new commit is pushed to Github a new version of the package will be build and tested. Of that test passes without problem the badge will remain green, but if the latest build fails, the green part will turn red like so &lt;a href=&#34;https://travis-ci.org/RMHogervorst/badgecreatr&#34;&gt;&lt;img src=&#34;https://travis-ci.org/RMHogervorst/badgecreatr.svg?branch=develop&#34; alt=&#34;Build Status&#34; /&gt;&lt;/a&gt; &amp;lt;- this is my develop branch of badgecreatr that fails while I write this. It could turn green if your read this later on.&lt;/p&gt;

&lt;p&gt;The point of these badges is that they quickly signal some quality aspects of your package to new users. I think these badges are incredibly useful, but I found it tedious to copy them to every new project I had, with some small tweaks for different packages &lt;em&gt;(I&amp;rsquo;m making this a big deal but I have only build 3 packages)&lt;/em&gt;. Since you will use almost the same badges for many projects  I thought it would be interesting to create a package that would copy them in your readme file with one command.
I was not the first one with this idea, someone created the briljant badgerbadgerbadger which does the same thing for ruby on rails projects.&lt;/p&gt;

&lt;p&gt;After some thoughts I decided to submit it to CRAN so that people can download it from within R without the use of devtools. So that was the why.&lt;/p&gt;

&lt;h1 id=&#34;why-would-you-submit-a-package-to-cran&#34;&gt;Why would you submit a package to CRAN?&lt;/h1&gt;

&lt;p&gt;The main advantage to getting your package on CRAN is that it will be easier for users to install (with install.packages). Your package will also be tested daily on multiple systems &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h1 id=&#34;how-do-you-submit-a-package-to-cran&#34;&gt;How do you submit a package to CRAN?&lt;/h1&gt;

&lt;p&gt;Well, the good people of CRAN have put it on the bottom of their &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;main page&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To “submit” a package to CRAN, check that your submission meets the CRAN Repository Policy and then use the web form.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Mainly you need to run r cmd-check on your package and make sure there are no warnings, and no notes. Or if there are notes, you have to explain them to the people of CRAN. So what does r-cmd-check actually do? It checks if your package can be build and installed and removed without problems, it checks for common problems in naming and if accurate documentation is provided. In other words, it checks if your package will play nice with R and possible other packages, and if people can actually read what you said about your functions in the package. r-cmd-check also checks if your DESCRIPTION and NAMESPACE files are correctly formatted.&lt;/p&gt;

&lt;p&gt;You also have to do some effort to check if your package will work on other systems (solaris,  FreeBSD, Linux, Windows, MacOS, more?). Since I work on a windows computer, I know it works on my computer. But since I push all my code to Github, and I use Travis-CI, after each commit the entire package is checked on linux (or more, I could even put several mac OS versions in the test I believe).&lt;/p&gt;

&lt;p&gt;Furthermore I checked the functionality of most of the code with unit tests. So I was pretty sure it worked on all systems, also because I haven&amp;rsquo;t used complicated programs that could differ in systems.&lt;/p&gt;

&lt;p&gt;The submission process is quite easy, you have to give your name, your email and then you can add your package (the tarball). It is a simple point and click form.&lt;/p&gt;

&lt;p&gt;The website reads a part of your package, you have to check if the information is correct. Then you have to promise that you read the information and you hit submit.&lt;/p&gt;

&lt;h1 id=&#34;what-happens-after-i-submit-a-package&#34;&gt;What happens after I submit a package?&lt;/h1&gt;

&lt;p&gt;You receive a confirmation mail with everything you typed in the website.
And someone looks over the submission to see if you missed something and if the package works.&lt;/p&gt;

&lt;p&gt;I recieved an e-mail back (really fast!), to tell me that I mistyped some things (too bad that devtools or R-cmd-check doesn&amp;rsquo;t check for these things).
I was very excited and quickly did a resubmission (which is identical to a first submission, but I explained what I changed according to their comments )&lt;/p&gt;

&lt;p&gt;Things that I should have done that I forgot or didn&amp;rsquo;t notice:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;single quote software names so &amp;lsquo;Windows 8.1&amp;rsquo;&lt;/li&gt;
&lt;li&gt;write R and CRAN with caps, not small letters&lt;/li&gt;
&lt;li&gt;I wrote github, projectstatus, travis, rmd etc which should have been:&lt;/li&gt;
&lt;li&gt;&amp;lsquo;Github&amp;rsquo;, Projectstatus, &amp;lsquo;Travis-CI&amp;rsquo; etc.&lt;/li&gt;
&lt;li&gt;linked to a URL that didn&amp;rsquo;t exist yet&lt;/li&gt;
&lt;li&gt;used a link with http, should have been https&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That was it, it took me 2 rounds but then it was finished, I received an email with: &amp;ldquo;on CRAN now.  Best (name of the reviewer)&amp;rdquo;. that&amp;rsquo;s it.&lt;/p&gt;

&lt;p&gt;And it&amp;rsquo;s on CRAN now: &lt;a href=&#34;https://cran.r-project.org/web/packages/badgecreatr/index.html&#34;&gt;https://cran.r-project.org/web/packages/badgecreatr/index.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;general-remarks&#34;&gt;General remarks&lt;/h2&gt;

&lt;p&gt;CRAN submission used to be really hard, you had to manually write all the documentation in a seperate file, had to hand check everything, you had to search for computers to test your package on, etc. But with devtools and the excellent manuals online, starting and building a package is really easy. The final step of submission takes almost no work if you followed best practices beforehand.&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References:&lt;/h2&gt;

&lt;p&gt;I had a lot of help from the following sources about writing r packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a very short but extremely useful example of writing packages by Hillary Parker &lt;a href=&#34;https://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/&#34;&gt;https://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hadley Wickham&amp;rsquo;s book about writing packages &lt;a href=&#34;http://r-pkgs.had.co.nz/&#34;&gt;http://r-pkgs.had.co.nz/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Karl Broman about writing packages &lt;a href=&#34;http://kbroman.org/pkg_primer/&#34;&gt;http://kbroman.org/pkg_primer/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You actually have to search for things in the policies, which is a bit dense, but quite ok. &lt;a href=&#34;https://cran.r-project.org/web/packages/policies.html&#34;&gt;https://cran.r-project.org/web/packages/policies.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the ropensci organisation has some excellent advise on writing packages &lt;a href=&#34;https://github.com/ropensci/packaging_guide&#34;&gt;https://github.com/ropensci/packaging_guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;This I outright copied from Karl Broman found here &lt;a href=&#34;http://kbroman.org/pkg_primer/pages/cran.html&#34;&gt;http://kbroman.org/pkg_primer/pages/cran.html&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Your most valuable collaborator, future-you</title>
      <link>/cleancode/blog/2016/05/26/content/post/2016-05-26-your-most-valuable-collaborator-future-you/</link>
      <pubDate>Thu, 26 May 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/05/26/content/post/2016-05-26-your-most-valuable-collaborator-future-you/</guid>
      <description>

&lt;p&gt;I was recently at a R users &lt;a href=&#34;http://www.meetup.com/amst-R-dam/&#34; title=&#34;amst-R-dam&#34;&gt;meetup&lt;/a&gt; where Hadley Wickham talked about data wrangling. He showed some interesting stuff! Did you know that you can put a data frame into a data frame? You can make a list of data frames and add that list to your data frame. Very cool,  and more useful then I thought, but that is not what I wanted to talk about.&lt;/p&gt;

&lt;p&gt;I would like to give you some tips about working with someone you will probably work with in the future. Hadley will introduce that person to you:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“In every project you have at least one other collaborator; future-you. You don&amp;rsquo;t want future-you to curse past-you”&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And future-you is an important collaborator. I have worked with R for a almost two years &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; and when I look back I actually see some progress in what I do with R. Most of the things I did in the past were poorly documented. I recently wanted to update my imdb search package but I decided not to touch it, because I don&amp;rsquo;t know what will break if I change some things. I have less worries for more recent packages, because I have tests for almost all the functions and I could just run the tests after every change to see if the functionality is still there.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;[update: I tried to find older creations in my github, but I was actually pretty impressed by how well documented it all was! So my example is not so good, or I just didn&amp;rsquo;t upload bad examples&amp;hellip;]&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What I did find was that hurry jobs take up the most time in the end. If I just coded something up fast and  then revisit that after a week it might still work and I might still know what I meant to do. But if the time delay gets longer future-you will need to spend more time figuring out what past-you was trying to achieve.&lt;/p&gt;

&lt;p&gt;So even if you are in a hurry now, you will  not remember the reasons for certain decisions in the future. Especially if your project gets bigger, you tend to forget things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The key thing is to be as explicit and clear as possible towards future-you&lt;/strong&gt;. So how do we help future-you (or other collaborators) understand past-you?&lt;/p&gt;

&lt;p&gt;Here are some suggestions based on lots of quotes and tidbits.&lt;/p&gt;

&lt;h2 id=&#34;readme-driven-development&#34;&gt;Readme driven development&lt;/h2&gt;

&lt;p&gt;Almost all of the github projects have a nicely formated readme. This is a very simple markdown document that describes the overal intent of the project and how to use and install it. The readme is a nice documentation of the software. So how do you make sure that the readme accurately describes the software?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You write the readme first.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tom Preson-Werner wrote a nice &lt;a href=&#34;http://tom.preston-werner.com/2010/08/23/readme-driven-development.html&#34; title=&#34; readme driven development 2010-08-23&#34;&gt;article&lt;/a&gt; about this. If you write the readme first then you can think through the project first and you already know what the end user (probably mostly future-you) will need. And you don&amp;rsquo;t need to write the documentation afterwards.  I have actually tried this in a few projects (f.i. &lt;a href=&#34;https://github.com/RMHogervorst/badgecreatr&#34;&gt;badgecreator&lt;/a&gt;), it helped me to think about the functions and the logical steps. And if you describe the next steps, other people can jump in more easily.&lt;/p&gt;

&lt;h2 id=&#34;write-the-test-first&#34;&gt;Write the test first&lt;/h2&gt;

&lt;p&gt;A way to understand past-you&amp;rsquo;s incoherent ramblings in the future (see what I did there?), is to write the tests before you write the part of the code that passes the test. I am talking about unit-tests, tests that check if your code is still working as you planned it out.&lt;/p&gt;

&lt;p&gt;So how would writing the tests first, help future-you and current(?)-you understand each other? If written correctly the unittest is a promise, an understanding if you like, about how pieces of code should function. For instance in one of my projects the unit-test expects an error under certain conditions. Thus the code is supposed to give an error when those conditions arise.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;test_that&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;rowsums larger or smaller than 1 are failing&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,{&lt;/span&gt;
        expect_error&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;CreateVertices&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;errorset&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;var1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;var2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;vartoomuch&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; verticeName &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;regexp &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;column means are not equal to 1&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        expect_error&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;CreateVertices&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;errorset&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;var1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;var2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;vartoolittle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; verticeName &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;regexp &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;column means are not equal to 1&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I really like the elegance of the testthat package, it &lt;strong&gt;literaly&lt;/strong&gt; says what it tests: &amp;ldquo; &lt;em&gt;test that&lt;/em&gt; rowsoms larger or smaller than 1 are failing&amp;rdquo;. And if the test fails it will tell you exactly &lt;strong&gt;where&lt;/strong&gt; it failed and &lt;strong&gt;what&lt;/strong&gt; it was trying to test (according to you).&lt;/p&gt;

&lt;p&gt;So how would you implement this? &lt;em&gt;I will make a seperate blogpost about this later, but for now look at r-pkg &lt;a href=&#34;http://r-pkgs.had.co.nz/tests.html&#34;&gt;chapter&lt;/a&gt; about testing&lt;/em&gt; Start with the thing you would like to create, for instance: Count all the people that are called Roel. That is nice small function. Give it a name: &lt;code&gt;roel_counter&lt;/code&gt;, for example.&lt;/p&gt;

&lt;p&gt;Create a seperate testscript &lt;code&gt;test_roel_counter.r&lt;/code&gt;. With the testthat framework you would put that file in &lt;code&gt;tests/testthat/&lt;/code&gt; so that it and all the other unit tests will be executed if you hit the shortkey.&lt;/p&gt;

&lt;p&gt;I usually write tests like this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;context&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;roel_counter&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
teststring &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Roel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Roel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hans&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
confusestring &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Roel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;roel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;rOel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;roef&amp;#34;&lt;/span&gt;
         
test_that&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;roel_counter finds accurate number of roel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,{&lt;/span&gt;
   expect_equal&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;roel_counter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; teststring&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
   expect_false&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;roel_counter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; teststring&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
   expect_equal&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;roel_counter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; confusestring&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
   expect_false&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;roel_counter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; confusestring&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first test will check if Roel counter finds 2 Roels and the second test will check if the string will not just return the total length of the string.&lt;/p&gt;

&lt;p&gt;I could add all sorts of variations of my name to the test to see if the function works. In fact most of the things you would try out in the console to see if the function works could be put into the testfile. But in test driven development you would first create the tests and then write the function. After you have written a part of the code that works you will test and see what passes and what fails. Then you add things to the code to pass more tests. Afte all the tests have passed, you write a new test for a new part of the code.&lt;/p&gt;

&lt;p&gt;If current-you is interupted and future-you finds itself back at the code, future-you can just press the hotkey for the tests and find out which are failing and continue on that part. So in a way, future-you can explicitly find out what past-you was trying to achieve.&lt;/p&gt;

&lt;h2 id=&#34;use-version-control&#34;&gt;use version control&lt;/h2&gt;

&lt;p&gt;Version control can help you stay sane. It saves your work if you try something new, it helps you to start again at any previously committed point in history and apart from the merge errors it works generally very well.&lt;/p&gt;

&lt;p&gt;Version control lets you record snapshots of previous code, but also lets you comment on what you solved or changed. When you save a new version of the code to version control you will have to be a bit explicit. Otherwise you will find yourself in this situation:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/wrong_commit.PNG&#34; alt=&#34;an example of a less helpful commit message&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Version control, if you use meaningful descriptions, can help you find out where you did some actions and what you were trying to do. Describe intent in the commit messages. A quote I really like is:&lt;br /&gt;
&amp;gt; &amp;ldquo;You mostly collaborate with yourself, and me-from-two-months-ago never responds to email.&amp;rdquo;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;My commits have become somewhat better:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/example_better_commit.PNG&#34; alt=&#34;somewhat better commit messages&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You could even use a github-issue-based-workflow where you write down the problems you want to solve in seperate issues and after you solved a particular issue, you push the code to github referencing the issue number.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&#34;functional-programming&#34;&gt;Functional programming&lt;/h2&gt;

&lt;p&gt;Hadley is really big on functional programming. That is, making clear what you want to achieve, and abstract away what happens in the computer itself.&lt;/p&gt;

&lt;p&gt;One example of this is the pipe operator. The pipe operator is in use in many programming languages (big thing in UNIX) but is not part of base r. Untill it was introduced in the magritr package&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5&#34;&gt;5&lt;/a&gt;&lt;/sup&gt; by Stefan Milton Bache. The pipe does nothing special except that it takes the thing to the left of it and places that in the first place of the thing to the right.
So for instance &lt;code&gt;dataset %&amp;gt;% filter(name==&amp;quot;Roel&amp;quot;)&lt;/code&gt; means that we start with dataset and then filter the rows that have &lt;code&gt;&amp;quot;Roel&amp;quot;&lt;/code&gt; in the name column.
In the background it does &lt;code&gt;filter(dataset, name == &amp;quot;Roel&amp;quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Which makes code much much easier to read.
compare:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;filter_by(select( filter(dataset, year == 2012), month, children, accidents ),accidents)&lt;/code&gt; with&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dataset %&amp;gt;% 
filter(year==2012) %&amp;gt;% 
select(month, children, accidents) %&amp;gt;%
group_by(accidents)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then there the  map functions from the purr package, which essentially replace loops. Not because loops are inherently bad, but the functions focus on the operation being performed instead of the details of the loop itself. I will write about these functions once I get used to them in the future.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:6&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:6&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&#34;comments&#34;&gt;comments&lt;/h2&gt;

&lt;p&gt;A final thought about comments in the code.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Do it often.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Describe in comments mostly what your intent was, or your reasons for a function. Don&amp;rsquo;t describe the &lt;strong&gt;what&lt;/strong&gt;, but describe the &lt;strong&gt;why&lt;/strong&gt;.
Do comment as often as you find necessary. More is better then less. However don&amp;rsquo;t put future plans or errors in the comments, you will not read them. An issue tracker is a great place for those.&lt;/p&gt;

&lt;h1 id=&#34;final-thoughts&#34;&gt;Final thoughts&lt;/h1&gt;

&lt;p&gt;Think about this quote:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But looking back at this whole post, &lt;strong&gt;you&lt;/strong&gt; will probably be the violent psychopath maintaining the code.&lt;/p&gt;

&lt;p&gt;So these are some ways to help yourself in the future, try some and tell me how it went.&lt;/p&gt;

&lt;h1 id=&#34;references&#34;&gt;references&lt;/h1&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Or close to these words, I wrote it down later. - Wickham amsterdam 18-5-16
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;I don&amp;rsquo;t know exactly, but if I use the time when I created a Github Account (november third 2014) it is almost 19 months at the moment of writing.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;a tweet of mtholder: &lt;a href=&#34;https://twitter.com/kcranstn/status/370914072511791104&#34;&gt;https://twitter.com/kcranstn/status/370914072511791104&lt;/a&gt; text tweet: @mtholder motivating git: You mostly collaborate with yourself, and me-from-two-months-ago never responds to email. @swcarpentry
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;That might be too much, but it&amp;rsquo;s quite nice. if you type &amp;lsquo;closes #10&amp;rsquo; or &amp;lsquo;fix #10&amp;rsquo; github will close issue 10 and refer to that commit. I have also heard of people using seperate branches for problemfixing and using pull requests to the main branch to solve the issues (works the same with fix or closes). I have tried this approach in some cases and it helps structuring your work.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;It took me forever to find out why it was called magritr. Because most R packages are named after their function or are a weird pun on something* I couldn&amp;rsquo;t place the name. But it is a pun on a famous painting by Magrit (La trahison des images, according to wikipedia) of a pipe with the text below &amp;ldquo;ceci n`est pa une pipe&amp;rdquo; &amp;lsquo;this is not a pipe&amp;rsquo;.&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Treachery_of_Images&#34;&gt;https://en.wikipedia.org/wiki/The_Treachery_of_Images&lt;/a&gt; and for the package &lt;a href=&#34;https://cran.r-project.org/web/packages/magrittr/index.html&#34;&gt;https://cran.r-project.org/web/packages/magrittr/index.html&lt;/a&gt;&lt;br /&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;See for more information about loops &lt;a href=&#34;http://r4ds.had.co.nz/iteration.html&#34;&gt;chapter 16 (iteration)&lt;/a&gt; of the &amp;ldquo;r for datascience&amp;rdquo; book by hadley wickham. The book is still under development but is a treasuretrove of information.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:6&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Creating a package for your data set</title>
      <link>/cleancode/blog/2016/03/07/content/post/2016-03-07-create-package-for-dataset/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/03/07/content/post/2016-03-07-create-package-for-dataset/</guid>
      <description>

&lt;p&gt;Turning your dataset into a package is very useful for reproducable research. This tutorial is for you, even if you&amp;rsquo;ve never created a package in r.&lt;/p&gt;

&lt;p&gt;Why would you turn your dataset into a package?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;very easy to share&lt;/li&gt;
&lt;li&gt;easy to load (library(name) is easier then &lt;code&gt;load(&amp;quot;path/to/file&amp;quot;)&lt;/code&gt; or &lt;code&gt;data&amp;lt;-read.csv(&amp;quot;path/to/file&amp;quot;)&lt;/code&gt; etc.)&lt;/li&gt;
&lt;li&gt;documentation is part of the package and will never separate from data&lt;/li&gt;
&lt;li&gt;attributes of file remain&lt;/li&gt;
&lt;li&gt;nice and easy introduction to package building&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What do you need to do to create a dataset package:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step 0: locate your dataset, both raw and clean&lt;/li&gt;
&lt;li&gt;step 1: create a new project with Rstudio&lt;/li&gt;
&lt;li&gt;step 2: save the clean file&lt;/li&gt;
&lt;li&gt;step 3: create a description file&lt;/li&gt;
&lt;li&gt;step 4: describe the package with a vignette.*&lt;/li&gt;
&lt;li&gt;step 5: test and build*&lt;/li&gt;
&lt;li&gt;step 6: maintain your dataset if it changes. *&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*: Steps 4-6 are optional, but will help you in practicing for other packages.&lt;/p&gt;

&lt;p&gt;What you need:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Rstudio&lt;/li&gt;
&lt;li&gt;devtools installed&lt;/li&gt;
&lt;li&gt;a dataset that you want to turn into a package&lt;/li&gt;
&lt;li&gt;You need to know how to load a file&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this example I will make a package from my all the times I drank coffee.
I started keeping score because I realized I drank more coffee since working full time.
This is just a file which contains time stamps whenever I drank coffee. I have some missing values, because I sometimes forget, but mostly it&amp;rsquo;s correct.&lt;/p&gt;

&lt;p&gt;This file is not really useful to anybody except maybe me, but a package is quite useful for a variety of analyses. Let&amp;rsquo;s walk through the steps, follow along with your dataset.&lt;/p&gt;

&lt;h1 id=&#34;step-0-locating-your-datasets&#34;&gt;Step 0: locating your datasets&lt;/h1&gt;

&lt;p&gt;You need a dataset on your harddisk&lt;/p&gt;

&lt;h1 id=&#34;step-1-create-a-new-project&#34;&gt;Step 1: Create a new project&lt;/h1&gt;

&lt;p&gt;Create a new project in Rstudio, choose new directory, R package:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/rstudio-project-package-new.PNG&#34; alt=&#34;image of starting a new project&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;naming-the-package&#34;&gt;Naming the package&lt;/h2&gt;

&lt;p&gt;Think about a simple descriptive name with the following tips:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;no spaces     Good: Coffeedata Bad: Coffee data&lt;/li&gt;
&lt;li&gt;no points     good: Coffeeproject Bad: Coffee.Project&lt;/li&gt;
&lt;li&gt;no dashes     Good: datasetCoffee. Bad:  dataset-Coffee&lt;/li&gt;
&lt;li&gt;use lowercase, CoffeeDataSet gets confusing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Naming packages is really hard, it needs to be descriptive and unique. But this is less important if you only share the package with yourself and friends.
think about the name, dataset21really is not descriptive nor helpful for you in the future.&lt;/p&gt;

&lt;h1 id=&#34;step-2-save-the-clean-file&#34;&gt;Step 2: save the clean file&lt;/h1&gt;

&lt;p&gt;Ideally you will want to save both the raw file and the cleaned dataset, with a script (or rmarkdown document) that describes the actions you took to clean the raw file.&lt;/p&gt;

&lt;p&gt;I assume that you are now in the rproject you have just started.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/rstudio-coffeedata-project-empty.PNG&#34; alt=&#34;images of empty project&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Locate the file you want to put in the package. And load it so that it&amp;rsquo;s active in the environment:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/rstudio-loaded-coffeedata.PNG&#34; alt=&#34;image of loaded coffeedata&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then do one of the following (replace coffeedata with your data set&amp;rsquo;s name).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;devtools&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
use_data&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;coffeedata&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use devtools directly&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;devtools&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;use_data&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;coffeedata&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command will create a data folder and put the file in there with the rda extension.&lt;/p&gt;

&lt;h1 id=&#34;step-3-create-a-description-file&#34;&gt;Step 3: create a description file&lt;/h1&gt;

&lt;p&gt;When you started the project a description file and an example function was created:
&lt;img src=&#34;/cleancode/img/rstudio-project-package-prepopulate.PNG&#34; alt=&#34;image of standard rstudio project&#34; /&gt;
Open the description file.&lt;/p&gt;

&lt;p&gt;I just copied this from the excellent package building book &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, please read his website:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every package must have a DESCRIPTION. In fact, it’s the defining feature of a package (RStudio and devtools consider any directory containing DESCRIPTION to be a package). To get you started, devtools::create(&amp;ldquo;mypackage&amp;rdquo;) automatically adds a bare-bones description file. This will allow you to start writing the package without having to worry about the metadata until you need to.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The minimal description will vary a bit depending on your settings, but should look something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/package-description.PNG&#34; alt=&#34;image of package description&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Fill in the meta-data of your package.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Package: name of package
Title: Use Title Case in One Line.
Version: 0.1.0 
Author: who you are
Maintainer: Who to bother when it breaks
Description: What the package does (one paragraph)
Licence: see below
LazyData: TRUE
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;a-license&#34;&gt;a license?&lt;/h3&gt;

&lt;p&gt;You might think that the license is a bit too much for a package you build. But it it&amp;rsquo;s really hard. If you don&amp;rsquo;t give a licence your data is under your copyright and no one can use it.
For datasets a &lt;a href=&#34;https://creativecommons.org/about/cc0/&#34;&gt;CC0 licence&lt;/a&gt; puts the data in the public domain and makes it free to  build upon, enhance and reuse the works for any purposes without restriction under copyright or database law.&lt;/p&gt;

&lt;p&gt;For packages that contain code (most of the packages) other licenses are better: &lt;a href=&#34;http://choosealicense.com/&#34;&gt;http://choosealicense.com/&lt;/a&gt; .&lt;/p&gt;

&lt;h2 id=&#34;a-description-of-the-file&#34;&gt;A description of the file&lt;/h2&gt;

&lt;p&gt;If you look at &lt;code&gt;?mtcars&lt;/code&gt; there is a description of the file. You want to avoid this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/failure-to-describe-package.PNG&#34; alt=&#34;image of r can&#39;t find help file&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The help file is created with&lt;/p&gt;

&lt;p&gt;&lt;code&gt;devtools::use_package_doc()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;this creates a file in the folder &lt;code&gt;R/&lt;/code&gt; . Click on the file and add stuff.
&lt;img src=&#34;/cleancode/img/coffeedata-package-r.PNG&#34; alt=&#34;image of r can&#39;t find help file&#34; /&gt;&lt;/p&gt;

&lt;p&gt;See also this example in &lt;a href=&#34;https://github.com/hadley/babynames/blob/master/R/data.R&#34;&gt;hadley&amp;rsquo;s babyname package&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;step-4-describe-the-package-with-a-vignette&#34;&gt;Step 4: describe the package with a vignette.&lt;/h1&gt;

&lt;p&gt;Use the template from rstudio:
&lt;img src=&#34;/cleancode/img/rstudio-document-dataset.PNG&#34; alt=&#34;rstudio rdocument window&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Give it the name of your dataset&lt;/p&gt;

&lt;p&gt;This is the endresult&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/rstudio-document-dataset2.PNG&#34; alt=&#34;example rstudio rdocument with coffee filled in&#34; /&gt;&lt;/p&gt;

&lt;p&gt;after you changed the files use &lt;code&gt;devtools::document()&lt;/code&gt; to create documents.&lt;/p&gt;

&lt;h1 id=&#34;step-5-test-and-build&#34;&gt;step 5: test and build&lt;/h1&gt;

&lt;p&gt;Then check your package with the check button or &lt;code&gt;devtools::check()&lt;/code&gt;. You will probably need to change some stuff based on the check. The check tries to build your package and checks for common problems. The endresult is in: /packagename.Rcheck/&lt;/p&gt;

&lt;p&gt;If your package is very simple, consisting of only documentation and a datafile, your build will be completed and works.&lt;/p&gt;

&lt;p&gt;Click on build &amp;amp; Reload and try out your new package.&lt;/p&gt;

&lt;h3 id=&#34;how-do-i-share-this-package&#34;&gt;How do I share this package?&lt;/h3&gt;

&lt;p&gt;Once installed you can use the package anytime you like with &lt;code&gt;library(package)&lt;/code&gt; But you might want to share your package with colleagues.&lt;/p&gt;

&lt;p&gt;Build a source or binary version:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.rstudio.com/images/docs/build_pane_build.png&#34; alt=&#34;rstudiowebsite image of sharing &#34; /&gt;&lt;/p&gt;

&lt;p&gt;After you build the source package, a file is created, in my case:
&amp;ldquo;coffeedata_0.1.0.tar&amp;rdquo;. That file is shareble and can be installed on someones computer. They will need to build from source.&lt;/p&gt;

&lt;p&gt;Online: upload your project using git to either Github &lt;a href=&#34;https://github.com/&#34;&gt;https://github.com/&lt;/a&gt; (many people use it, but can&amp;rsquo;t restrict access in free version) or Bitbucket &lt;a href=&#34;https://bitbucket.org/&#34;&gt;https://bitbucket.org/&lt;/a&gt; (close off your project). Or any other sharing service.&lt;/p&gt;

&lt;p&gt;If it&amp;rsquo;s on github everyone can install the file using devtools, in my case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;devtools&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;install_github&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;rmhogervorst/coffeedata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This also works on bitbucket :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;devtools&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;install_bitbucket&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;rmhogervorst/coffeedata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you download the &lt;a href=&#34;https://github.com/RMHogervorst/cleancode/raw/gh-pages/datasets/coffeedata_0.1.0.tar.gz&#34;&gt;source&lt;/a&gt; file from the website and install it manually&lt;/p&gt;

&lt;p&gt;Yes I have created the file for you. Now you all know how many coffee I drank. Even worse, you can do what you like with that information, because it&amp;rsquo;s in the public domain.&lt;/p&gt;

&lt;p&gt;See Further reading to find out more about other ways to share your package.&lt;/p&gt;

&lt;h1 id=&#34;step-6-maintain-your-dataset-if-it-changes&#34;&gt;step 6: maintain your dataset if it changes&lt;/h1&gt;

&lt;p&gt;If your dataset changes, you should update the package.&lt;/p&gt;

&lt;h3 id=&#34;problems&#34;&gt;Problems&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;I don&amp;rsquo;t have a description file or any of the other folders&amp;hellip; or devtools gives me errors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Check if your project has forbidden characters: dots, dashes or spaces.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Rcheck fails!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Check the log. The log is in the folder next to your package &lt;code&gt;/packagename.Rcheck/00check.txt&lt;/code&gt;
in my case my project is in: &lt;code&gt;Projecten\coffeedata&lt;/code&gt; and the logs are in:
 &lt;code&gt;Projecten\coffeedata.Rcheck\00check.txt&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;the folder disappears! I cant check the log.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a good thing, it means your settings are so that non failing builds are removed. Change this in Rstudio Global Options, go to packages, and uncheck the option: &lt;em&gt;clean up output after succesful R CMD check&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://r-pkgs.had.co.nz/package.html&#34;&gt;Hadley Wickham about naming and starting with a package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://r-pkgs.had.co.nz/description.html&#34;&gt;R packages book: What to put in your description file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/200486508-Building-Testing-and-Distributing-Packages&#34;&gt;Rstudio: Building checking and distributing packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Wickham, Hadley. R Packages. First edition. Sebastopol, CA: O’Reilly Media, 2015. &lt;a href=&#34;http://r-pkgs.had.co.nz/&#34;&gt;http://r-pkgs.had.co.nz/&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Portioning projects</title>
      <link>/cleancode/blog/2016/02/14/content/post/2016-02-14-portioning-projects/</link>
      <pubDate>Sun, 14 Feb 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/02/14/content/post/2016-02-14-portioning-projects/</guid>
      <description>

&lt;p&gt;Often we write programs to automate things. The programs range from simple to complex. But in essence, you always do the same thing:&lt;/p&gt;

&lt;p&gt;You are trying to solve a problem.&lt;/p&gt;

&lt;p&gt;A common pitfall, &lt;em&gt;at least for me&lt;/em&gt;, is that you start out to big. What you need to do is start simple and small, and only if your simple thing works, increase the complexity. Separate parts of the program need to be separate functions.&lt;/p&gt;

&lt;h2 id=&#34;code-to-solve-a-problem&#34;&gt;Code to solve a Problem&lt;/h2&gt;

&lt;p&gt;Your higher aim is for your code to  solve a large and important Problem. For instance, taking many values and compute other values on the way.&lt;/p&gt;

&lt;p&gt;But to get to the solving of the big Problem (with a capital P), you need to overcome small problems (small p). One way to solve your Problem is to put everything into one script,  or one function. But I would like to argue for the use of modules. Make one project for your big and important Problem in Rstudio. Make small functions or modules for the little problems. Make one or two functions that combine the small parts. Create small scripts for every function or combine multiple functions in one script. But keep it small.&lt;/p&gt;

&lt;p&gt;In other words: create simple functions that are really good at one thing. Then combine them into a larger whole.
This is called modular programming.&lt;/p&gt;

&lt;h3 id=&#34;why-is-this-better&#34;&gt;Why is this better?&lt;/h3&gt;

&lt;p&gt;Small modules can be optimized to perform one thing really well.&lt;/p&gt;

&lt;p&gt;Small modules are more readable for you in the future and for others if they want to contribute.&lt;/p&gt;

&lt;p&gt;Small modules are much easier to test. Make a test that inputs the right sort of input and see if it creates the output you want. Make a test imputing the wrong sort of input, and see that it throws an error.&lt;/p&gt;

&lt;p&gt;Modular programming also makes it easier to add new functions. You can reuse modules (refactoring) or simply add a new module that extends your program.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/project_philosophy.png&#34; alt=&#34;distinction one script approach and modular approach&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;planning-your-project&#34;&gt;Planning your project&lt;/h1&gt;

&lt;p&gt;How do you start?&lt;/p&gt;

&lt;h3 id=&#34;imagine-the-way-your-code-should-work-when-finished&#34;&gt;Imagine the way your code should work when finished&lt;/h3&gt;

&lt;p&gt;This is a perfect moment to start your documentation. How will someone use this code? What are the options? What type of data are allowed? &lt;em&gt;Don&amp;rsquo;t think that no one will read it, you will be one of the people who need to understand your past you.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;All these questions lead to logical submodules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;check the options that a user imputed.&lt;/li&gt;
&lt;li&gt;What are sensible default options.&lt;/li&gt;
&lt;li&gt;Check for datatype (do you allow numeric, factors, etc ), create errors.&lt;/li&gt;
&lt;li&gt;Describe what the user does in the documentation.&lt;/li&gt;
&lt;li&gt;Then write out how your code performs those actions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The endresult will be a list of submodules and their description.&lt;/p&gt;

&lt;h2 id=&#34;start-as-small-as-possible&#34;&gt;Start as small as possible&lt;/h2&gt;

&lt;p&gt;You have thought of all the ways your code should work. But you need to start simple. Think of the minimal viable product, a function that is so basic that it should work. It should be a small step into solving your big Problem. For instance, transform the variable. Or check that the input is a data.frame or whatever.&lt;/p&gt;

&lt;p&gt;Test your small problem. Fix your code.&lt;/p&gt;

&lt;h3 id=&#34;start-on-one-of-the-other-submodules&#34;&gt;Start on one of the other submodules&lt;/h3&gt;

&lt;p&gt;Make small modules that do one thing and one thing only. Make automated tests that will inform you if the module doesn&amp;rsquo;t work anymore.  When your submodule works, start a new one, repeat until your Problem is solved.
Start small and make incremental changes.&lt;/p&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Modular_programming&#34;&gt;Modular Programming, wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>