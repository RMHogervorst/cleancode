<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on Clean Code (and R-fun)</title>
    <link>/cleancode/tags/tutorial/</link>
    <description>Recent content in Tutorial on Clean Code (and R-fun)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>hogervorst.rm@gmail.com (Roel M. Hogervorst)</managingEditor>
    <webMaster>hogervorst.rm@gmail.com (Roel M. Hogervorst)</webMaster>
    <lastBuildDate>Tue, 29 May 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/cleancode/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sentiment of Security Now! over time</title>
      <link>/cleancode/blog/2018/05/29/sentiment-of-security-now-over-time/</link>
      <pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2018/05/29/sentiment-of-security-now-over-time/</guid>
      <description>&lt;p&gt;If you believe some people, everything is getting worse&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. More so in infosec. For the past few years I listened to many many hours of podcasts, many hours where spent on the weekly show &lt;a href=&#34;https://twit.tv/shows/security-now&#34;&gt;Security Now!&lt;/a&gt;. The hosts Steven Gibson and Leo Laporte have been talking about security related news every week over 13 years. Although the content has changed over time, there used to be more explanations but the majority of time is now filled with news, we could use the sentiment in the episodes to see if ‘everything is getting worse’. Has the sentiment of the security now! podcast changed over time? It helps that every episode is transcribed into text so we can use natural language processing tools to work through this problem.&lt;/p&gt;
&lt;div id=&#34;extracting-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Extracting the data&lt;/h2&gt;
&lt;p&gt;To gather and extract the relevant information from the transcripts I point you kindly to a seperate github page where I explain how I downloaded every episode and extracted the structure. &lt;a href=&#34;https://github.com/RMHogervorst/NLP_SN&#34; class=&#34;uri&#34;&gt;https://github.com/RMHogervorst/NLP_SN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I asked permission to scrape all the transcripts but I’m not entirely sure if I can share the content. In any case I’d guide you to the links at the bottom of this page with all the archive. I might share the rda file with the episode information and transcripts into 1 dataframe.&lt;/p&gt;
&lt;p&gt;What I ended up with is a dataframe with 664 rows (the number of episodes today) and 9 columns.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidytext)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ───────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ──&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✔ ggplot2 2.2.1.9000     ✔ purrr   0.2.5     
## ✔ tibble  1.4.2          ✔ dplyr   0.7.5     
## ✔ tidyr   0.8.1          ✔ stringr 1.3.1     
## ✔ readr   1.1.1          ✔ forcats 0.3.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Conflicts ──────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(widyr) 
if(!file.exists(&amp;quot;df_sn.RDS&amp;quot;)){
    download.file(
        url = &amp;quot;https://github.com/RMHogervorst/NLP_SN/raw/master/df_sn.RDS&amp;quot;,
        destfile =  &amp;quot;df_sn.RDS&amp;quot;,cacheOK = TRUE)    
}

df_sn &amp;lt;- read_rds(&amp;quot;df_sn.RDS&amp;quot;)  
#df_sn &amp;lt;- read_rds(&amp;quot;../NLP_SN/df_sn.RDS&amp;quot;) # when working locally
# 
# Every week / or once a month at least I will update the file with new transcript(s) so your data could be newer than this post.
#dim_desc(df_sn)
tail(df_sn,2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 9
##   path             source date  description ep_nr hosts teaser title text 
##   &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;lis&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;lis&amp;gt;
## 1 data//sn-663.txt https… May … This week …   663 &amp;lt;lis… It&amp;#39;s … Ultr… &amp;lt;tib…
## 2 data//sn-664.txt https… May … This week …   664 &amp;lt;lis… It&amp;#39;s … Spec… &amp;lt;tib…&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The text column contains a tibble with a row for everytime anyone speaks untill the other takes over. The length&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_sn[664,9][[1]][[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 139 x 3
##    linenr text                                                     speaker
##     &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;                                                    &amp;lt;chr&amp;gt;  
##  1      1 This is Security Now! with Steve Gibson, Episode 664, r… LEO    
##  2      2 Yay, Leo, great to be with you again, as always.         STEVE  
##  3      3 Always a pleasure.                                       LEO    
##  4      4 Yeah, we scrambled here a little bit at the end because… STEVE  
##  5      5 [Crosstalk] half an hour ago.  No, but I also figured y… LEO    
##  6      6 &amp;quot;Well, yeah.  Two weeks ago the news leaked through Hei… STEVE  
##  7      7 They were presumably waiting to disclose until companie… LEO    
##  8      8 Yes.  And even so, I mean, this is - what we heard was … STEVE  
##  9      9 Right.                                                   LEO    
## 10     10 I can&amp;#39;t square that with the news of two because all we… STEVE  
## # ... with 129 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Steve talks a lot more then Leo, and we see that in the number of words per line of a single episode:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_sn[664,9][[1]][[1]] %&amp;gt;% 
    mutate(
        nr_char = str_length(text),
        N_words = str_count(text, &amp;quot;\\w+&amp;quot;)
        ) %&amp;gt;% 
    ggplot(aes(linenr, N_words, fill = speaker))+
    geom_col()+
    labs(
        title = &amp;quot;Number of words in every line in episode 664&amp;quot;,
        subtitle = &amp;quot;Steve talks a lot more than Leo (not surprising)&amp;quot;,
        x = &amp;quot;line number&amp;quot;, y = &amp;quot;Number of words (log2 scale)&amp;quot;,
        caption = &amp;quot;Transcripts Security Now! - 664&amp;quot;
    )+
    scale_y_continuous(trans = &amp;quot;log2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/cleancode/cleancode/post/2018-05-29-sentiment-of-security-now-over-time_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Interestingly my scraper seems to not have detected who said the words on line 45. It was Steve.&lt;/p&gt;
&lt;p&gt;It might be better to use an average over the episode&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_sn[664,9][[1]][[1]] %&amp;gt;% 
    mutate(
        N_words = str_count(text, &amp;quot;\\w+&amp;quot;),
        speaker = ifelse(is.na(speaker), &amp;quot;STEVE&amp;quot;, speaker)
        ) %&amp;gt;% 
    ggplot(aes(speaker, N_words, fill = speaker))+
    geom_violin()+
    geom_jitter(height = 0,width = .2, alpha  = 2/3)+
    scale_y_continuous(trans = &amp;quot;log2&amp;quot;)+
    labs(
        title = &amp;quot;Number of words in every line in episode 664&amp;quot;,
        subtitle = &amp;quot;Steve has a few more long pieces&amp;quot;,
        x = &amp;quot;&amp;quot;, y = &amp;quot;Number of words (log2 scale)&amp;quot;,
        caption = &amp;quot;Transcripts Security Now! - 664&amp;quot;
    )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/cleancode/cleancode/post/2018-05-29-sentiment-of-security-now-over-time_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;links&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.grc.com/securitynow.htm&#34;&gt;Archive of transcripts and audio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;state-of-the-machine&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;State of the machine&lt;/h5&gt;
&lt;p&gt;&lt;details&gt; &lt;summary&gt; At the moment of creation (when I knitted this document ) this was the state of my machine: &lt;click&gt; &lt;/summary&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessioninfo::session_info()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ─ Session info ──────────────────────────────────────────────────────────
##  setting  value                       
##  version  R version 3.4.4 (2018-03-15)
##  os       Ubuntu 18.04 LTS            
##  system   x86_64, linux-gnu           
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       Europe/Amsterdam            
##  date     2018-06-01                  
## 
## ─ Packages ──────────────────────────────────────────────────────────────
##  package     * version    date       source                            
##  assertthat    0.2.0      2017-04-11 CRAN (R 3.4.3)                    
##  backports     1.1.2      2017-12-13 CRAN (R 3.4.3)                    
##  bindr         0.1.1      2018-03-13 CRAN (R 3.4.4)                    
##  bindrcpp    * 0.2.2      2018-03-29 CRAN (R 3.4.4)                    
##  blogdown      0.6        2018-04-18 CRAN (R 3.4.4)                    
##  bookdown      0.7        2018-02-18 CRAN (R 3.4.3)                    
##  broom         0.4.4      2018-03-29 CRAN (R 3.4.4)                    
##  cellranger    1.1.0      2016-07-27 CRAN (R 3.4.3)                    
##  cli           1.0.0      2017-11-05 CRAN (R 3.4.3)                    
##  clisymbols    1.2.0      2017-05-21 cran (@1.2.0)                     
##  colorspace    1.3-2      2016-12-14 CRAN (R 3.4.3)                    
##  crayon        1.3.4      2017-09-16 CRAN (R 3.4.3)                    
##  digest        0.6.15     2018-01-28 CRAN (R 3.4.3)                    
##  dplyr       * 0.7.5      2018-05-19 cran (@0.7.5)                     
##  evaluate      0.10.1     2017-06-24 CRAN (R 3.4.3)                    
##  forcats     * 0.3.0      2018-02-19 CRAN (R 3.4.3)                    
##  foreign       0.8-69     2017-06-21 CRAN (R 3.4.2)                    
##  ggplot2     * 2.2.1.9000 2018-02-22 Github (tidyverse/ggplot2@39e4a3b)
##  glue          1.2.0.9000 2018-05-21 Github (tidyverse/glue@7230ed2)   
##  gtable        0.2.0      2016-02-26 CRAN (R 3.4.3)                    
##  haven         1.1.1      2018-01-18 CRAN (R 3.4.3)                    
##  hms           0.4.2      2018-03-10 CRAN (R 3.4.4)                    
##  htmltools     0.3.6      2017-04-28 CRAN (R 3.4.3)                    
##  httr          1.3.1      2017-08-20 CRAN (R 3.4.3)                    
##  janeaustenr   0.1.5      2017-06-10 CRAN (R 3.4.3)                    
##  jsonlite      1.5        2017-06-01 CRAN (R 3.4.3)                    
##  knitr         1.20       2018-02-20 CRAN (R 3.4.3)                    
##  labeling      0.3        2014-08-23 CRAN (R 3.4.3)                    
##  lattice       0.20-35    2017-03-25 CRAN (R 3.4.2)                    
##  lazyeval      0.2.1      2017-10-29 CRAN (R 3.4.3)                    
##  lubridate     1.7.4      2018-04-11 CRAN (R 3.4.4)                    
##  magrittr      1.5        2014-11-22 CRAN (R 3.4.3)                    
##  Matrix        1.2-14     2018-04-09 CRAN (R 3.4.4)                    
##  mnormt        1.5-5      2016-10-15 CRAN (R 3.4.3)                    
##  modelr        0.1.2      2018-05-11 CRAN (R 3.4.4)                    
##  munsell       0.4.3      2016-02-13 CRAN (R 3.4.3)                    
##  nlme          3.1-137    2018-04-07 CRAN (R 3.4.4)                    
##  pillar        1.2.2      2018-04-26 CRAN (R 3.4.4)                    
##  pkgconfig     2.0.1      2017-03-21 CRAN (R 3.4.3)                    
##  plyr          1.8.4      2016-06-08 CRAN (R 3.4.3)                    
##  psych         1.8.4      2018-05-06 CRAN (R 3.4.4)                    
##  purrr       * 0.2.5      2018-05-29 cran (@0.2.5)                     
##  R6            2.2.2      2017-06-17 CRAN (R 3.4.3)                    
##  Rcpp          0.12.17    2018-05-18 cran (@0.12.17)                   
##  readr       * 1.1.1      2017-05-16 CRAN (R 3.4.3)                    
##  readxl        1.1.0      2018-04-20 CRAN (R 3.4.4)                    
##  reshape2      1.4.3      2017-12-11 CRAN (R 3.4.3)                    
##  rlang         0.2.0.9001 2018-05-31 Github (tidyverse/rlang@4e7e8f7)  
##  rmarkdown     1.9        2018-03-01 CRAN (R 3.4.3)                    
##  rprojroot     1.3-2      2018-01-03 CRAN (R 3.4.3)                    
##  rstudioapi    0.7        2017-09-07 CRAN (R 3.4.3)                    
##  rvest         0.3.2      2016-06-17 CRAN (R 3.4.3)                    
##  scales        0.5.0.9000 2018-05-03 Github (hadley/scales@d767915)    
##  sessioninfo   1.0.0      2017-06-21 cran (@1.0.0)                     
##  SnowballC     0.5.1      2014-08-09 CRAN (R 3.4.3)                    
##  stringi       1.2.2      2018-05-02 CRAN (R 3.4.4)                    
##  stringr     * 1.3.1      2018-05-10 CRAN (R 3.4.4)                    
##  tibble      * 1.4.2      2018-01-22 CRAN (R 3.4.3)                    
##  tidyr       * 0.8.1      2018-05-18 CRAN (R 3.4.4)                    
##  tidyselect    0.2.4      2018-02-26 CRAN (R 3.4.3)                    
##  tidytext    * 0.1.8      2018-03-21 CRAN (R 3.4.4)                    
##  tidyverse   * 1.2.1      2017-11-14 CRAN (R 3.4.3)                    
##  tokenizers    0.2.1      2018-03-29 CRAN (R 3.4.4)                    
##  utf8          1.1.4      2018-05-24 CRAN (R 3.4.4)                    
##  widyr       * 0.1.1      2018-03-11 CRAN (R 3.4.4)                    
##  withr         2.1.2      2018-03-15 CRAN (R 3.4.4)                    
##  xfun          0.1        2018-01-22 CRAN (R 3.4.3)                    
##  xml2          1.2.0      2018-01-24 CRAN (R 3.4.3)                    
##  yaml          2.1.19     2018-05-01 cran (@2.1.19)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/details&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Not if we learn from Hans Rosling but that is a story for an other time&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Turning kindle notes into a tidy data</title>
      <link>/cleancode/blog/2017/05/08/content/post/2017-05-08-making-kindle-highlights-tidy/</link>
      <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2017/05/08/content/post/2017-05-08-making-kindle-highlights-tidy/</guid>
      <description>

&lt;p&gt;It is my dream to do everything with R. And we aRe almost there. We can write blogs in blogdown or bookdown, write reports in RMarkdown (thank you &lt;a href=&#34;https://twitter.com/xieyihui&#34;&gt;Yihui Xie!&lt;/a&gt;) create interactive webpages with Shiny (thank you &lt;a href=&#34;https://twitter.com/winston_chang&#34;&gt;Winston Chang&lt;/a&gt;). Control our lifx lights with &lt;a href=&#34;https://github.com/cboettig/lifxr&#34;&gt;lifxr&lt;/a&gt; (great work &lt;a href=&#34;http://carlboettiger.info/&#34;&gt;Carl!&lt;/a&gt;) and use emoticons everywhere with the emo package.&lt;/p&gt;

&lt;p&gt;There is even a novel of my vision! I recently found chapter 40 of &lt;a href=&#34;http://www.psi-chology.com/the-day-the-priming-stopped/&#34;&gt;A Dr. Primestein Adventure™ The Day the Priming Stopped&lt;/a&gt;. There is a scene in there which says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“This Fortress is a monumental technological achievement,” explained Professor Power. “Every aspect of the Fortress’s security is run by R.” As they arrived at the metal doors, the Professor pressed a small button on the wall to the right. “This is an elevatoR, run by its own R package.” They waited for the doors to open, but nothing happened. After a few minutes of alternately waiting and then mashing the elevatoR button, Professor Power called someone on his mobile phone. “The elevatoR is not working&amp;hellip;what? Why would they do that?&amp;hellip;call Hadley Wickham!&amp;hellip;doesn’t anyone around here check packages against the development version of R before upgrading?&amp;hellip;yes, we’ll wait.” “Someone upgraded R without permission. Should be fixed soon,” Professor Power explained.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But enough about jokeRs and jesteRs. As it is my life long mission to do everything in R and preferably in the &lt;a href=&#34;http://tidyverse.org/&#34;&gt;tidyverse&lt;/a&gt;, I found something that wasn&amp;rsquo;t tidy 😞 !!! Kindle notes!&lt;/p&gt;

&lt;h1 id=&#34;kindle-notes-and-highlights&#34;&gt;kindle notes and highlights.&lt;/h1&gt;

&lt;p&gt;I have a 2010 kindle to read E-books on and once in a while I write a note or highlight some text in the book. If you connect your kindle to the computer you can extract the highlights by copying the file `My Clippings.txt&amp;rsquo; to your computer.&lt;/p&gt;

&lt;p&gt;This is great, it&amp;rsquo;s a text file which means you can open it on every computer and search throug the contents. However&amp;hellip;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s not tidy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let&amp;rsquo;s change that. The general procedure is thus:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a new project in Rstudio&lt;/li&gt;
&lt;li&gt;Create a new folder called &lt;code&gt;data&lt;/code&gt; (or don&amp;rsquo;t but really this is neat isn&amp;rsquo;t it?)&lt;/li&gt;
&lt;li&gt;Copy the &lt;code&gt;My Clippings.txt&lt;/code&gt; file to that &lt;code&gt;data&lt;/code&gt;-folder&lt;/li&gt;
&lt;li&gt;Load the tidyverse `library(tidyverse)&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Hammer away untill the txt file is a data frame.&lt;/li&gt;
&lt;li&gt;profit?&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;what-is-in-this-text-file&#34;&gt;What is in this text file?&lt;/h3&gt;

&lt;p&gt;First we do some exploratory work on the file. I&amp;rsquo;ve found that the text file is structured in a particular way:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;title  (author)
- Highlight on Page 128 | Loc. 1962-68  | Added on Sunday, December 27, 2015, 03:09 PM
&amp;lt;empty line&amp;gt;
highlighted text
==========
title of the next highlighted book (author)
etc.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;So how do we force this into a data frame?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Recognize the structure ( we will create functions for that)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chunks end with the ten ===== signs, we can split on that&lt;/li&gt;
&lt;li&gt;first line is the title and (author)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;we can seperate the author and the title&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;next line of information is devided by &amp;lsquo;|&amp;rsquo; signs.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;type, page, location, added date and time (in american time of course&amp;hellip;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;highlighted text (or if it is a bookmark, nothing)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;tidyverse&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Loading tidyverse: ggplot2
## Loading tidyverse: tibble
## Loading tidyverse: tidyr
## Loading tidyverse: readr
## Loading tidyverse: purrr
## Loading tidyverse: dplyr

## Conflicts with tidy packages ----------------------------------------------

## filter(): dplyr, stats
## lag():    dplyr, stats
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;raw_text &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; read_file&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data/My Clippings.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# read in the text file&lt;/span&gt;
per_chunk &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;unlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;strsplit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;raw_text&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;==========&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# seperate into chunks&lt;/span&gt;
per_chunk&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;\r\nThe Clean Coder_ A Code of Conduct For Professional Programmers - Robert C. Martin (Robert C. Martin)\r\n- Highlight on Page 90 | Added on Monday, January 25, 2016, 04:06 PM\r\n\r\nK ATA In martial arts, a kata is a precise set of choreographed movements that simulates one side of a combat. The goal, which is asymptotically approached, is perfection. The artist strives to teach his body to make each movement perfectly and to assemble those movements into fluid enactment. Well-executed kata are beautiful to watch. Beautiful though they are, the purpose of learning a kata is not to perform it on stage. The purpose is to train your mind and body how to react in a particular combat situation. The goal is to make the perfected movements automatic and instinctive so that they are there when you need them. A programming kata is a precise set of choreographed keystrokes and mouse movements that simulates the solving of some programming problem. You arent actually solving the problem because you already know the solution. Rather, you are practicing the movements and decisions involved in solving the problem.\r\n&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above I have created seperate chunks that represent seperate highlights. And a example so you can see what I see.&lt;/p&gt;

&lt;p&gt;Now for extracting the seperate elements. I create functions that do one thing.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# This function takes a chunk of character information&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# and seperates it into lines. &lt;/span&gt;
seperate_into_lines &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chunk&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    result &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_split&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chunk&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\r\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;unlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# result &amp;lt;- seperate_into_lines(per_chunk[100])  # testing if this works &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## you should put this into formal test frameworks such as testhat if you&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## build a package. &lt;/span&gt;



&lt;span class=&#34;c1&#34;&gt;# Extract title sentance and remove author&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# This function presumes that you already extracted the raw data into&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# character chunks.&lt;/span&gt;
extract_title &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;linechunk&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# search for second line&lt;/span&gt;
    titleline &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; linechunk&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;gsub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\\(.*\\)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; titleline&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# it took me some &lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;#time to work this regular expression out.&lt;/span&gt;
    stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;both&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# remove whitespace at ends&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#extract_title(result) # testcase to see if it works for me.&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# Extract the author from chunk, this function looks &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# very much like the one above, it uses the same logic.&lt;/span&gt;
extract_author &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;linechunk&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# search for second line&lt;/span&gt;
    titleline &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; linechunk&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# identical&lt;/span&gt;
    author &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_extract&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;titleline&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\\(.*\\)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# extract piece&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;gsub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\\(|\\)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; author&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# &lt;/span&gt;
    stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;both&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# extract_author(result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&amp;rsquo;s see if this works on a subset of the data. I usually take multiple notes in one book before I open another, so in this case the first 20 notes are really boring and all from the same book. To spice this up I take a random subset of rows. I will use a simple for-loop here, but I will use functional programming in the end-result. It works kind of the same, but is more explicit.&lt;/p&gt;

&lt;p&gt;Some people will tell you that for-loops are slow in R, or that &amp;lsquo;loops are bad&amp;rsquo; but they don&amp;rsquo;t know what they are talking about.[1]&lt;/p&gt;

&lt;p&gt;I first create a data_frame [2] and pre-populate it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# testset &amp;lt;- per_chunk[1:20]  # You would use this if you want the first 20 pieces.&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;set.seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4579&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# if you do random stuff, it is wise to &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# set the seed so that others can reproduce your work.&lt;/span&gt;
testset &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; per_chunk&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;base&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;sample&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;per_chunk&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; 
&lt;span class=&#34;c1&#34;&gt;# unfortunately dplyr also has a function called sample. to specify that&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# we want the &amp;#39;normal&amp;#39; one I specify the name of the package followed by&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# two &amp;#39;:&amp;#39;. &lt;/span&gt;
testingframe &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    author &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;length &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    title &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; i &lt;span class=&#34;kr&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;seq_along&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)){&lt;/span&gt;
    hold &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; testset&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; seperate_into_lines&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    testingframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;author&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_author&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    testingframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;title &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_title&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
testingframe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 20 × 2
##                                     author
##                                      &amp;lt;chr&amp;gt;
## 1             Andrew Hunt and David Thomas
## 2             Andrew Hunt and David Thomas
## 3                            Alex Reinhart
## 4                              David Price
## 5            City Watch #1 Terry Pratchett
## 6            City Watch #1 Terry Pratchett
## 7                              Mark Manson
## 8                     Kim Stanley Robinson
## 9                     Kim Stanley Robinson
## 10                    Kim Stanley Robinson
## 11         Douglas DeCarlo, James P. Lewis
## 12                             David Price
## 13           City Watch #2 Terry Pratchett
## 14 Kenneth Knoblauch &amp;amp; Laurence T. Maloney
## 15                           Alex Reinhart
## 16            Andrew Hunt and David Thomas
## 17                        Robert C. Martin
## 18            Andrew Hunt and David Thomas
## 19            Andrew Hunt and David Thomas
## 20                             David Price
## # ... with 1 more variables: title &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The author and title functions seem to work, let&amp;rsquo;s extract some more information. The third row contained multiple pieces of information&lt;/p&gt;

&lt;p&gt;example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- Highlight on Page 132 | Loc. 2017-20  | Added on Saturday, August 20, 2016, 09:37 AM
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Like the first functions we first select the correct row [3] and than apply some magic.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# this function extracts all the pieces&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# and subsequent functions will deal with the seperate stuff.&lt;/span&gt;
extract_type_location_date &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;linechunk&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    meta_row &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; linechunk&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    pieces &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_split&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;meta_row&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\\|&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# the literal character, &lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# the &amp;#39;|&amp;#39; has a special meaning in regexp.&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;unlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;pieces&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# extract_type_location_date(result) # test function&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# extract type from combined result.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Here the use of the pipe `%&amp;gt;%` operator &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# makes the steps clear.&lt;/span&gt;
extract_type &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;pieces&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    pieces&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# select the first row&lt;/span&gt;
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_extract&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;- [[:alnum:]]{1,} &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# extract at least one character.&lt;/span&gt;
        &lt;span class=&#34;kp&#34;&gt;gsub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# replace - with nothing, removing it&lt;/span&gt;
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;both&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# remove whitespace at both sides&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# extract_type_location_date(result) %&amp;gt;% &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#     extract_type()&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# extract page number by selecting first piece,&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# trimming off of whitespace&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# selecting a number, at least 1 times, followed by end of line.&lt;/span&gt;
extract_pagenumber &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;pieces&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    pieces&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;right&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# remove right end&lt;/span&gt;
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_extract&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[0-9]{1,}$&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        &lt;span class=&#34;kp&#34;&gt;as.numeric&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# extract_type_location_date(result) %&amp;gt;%&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#     extract_pagenumber()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Extract locations. Just like above.&lt;/span&gt;
extract_locations &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;pieces&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    pieces&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;both&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_extract&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[0-9]{1,}-[0-9]{1,}$&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# extract_type_location_date(result) %&amp;gt;% &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#     extract_locations()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Extract date and convert to standard time, not US centric.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# I use the strptime from the base package here. The time is &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# US-centric, but structured, so we can use the formatting from strptime.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# For example: %B is Full month name in the current locale&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# and %I:%M %p means hours, minutes, am/pm. &lt;/span&gt;
extract_date &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;pieces&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    pieces&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;both&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_extract&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[A-z]{3,} [0-9]{1,2}, [0-9]{4}, [0-9]{2}:[0-9]{2} [A-Z]{2}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        &lt;span class=&#34;kp&#34;&gt;strptime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;format &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;%B %e, %Y, %I:%M %p&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Extract the highlight part.&lt;/span&gt;
extract_highlights &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;linechunk&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    linechunk&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# extract_highlights(result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In general:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Split into chunks (already did that: per_chunk)&lt;/li&gt;
&lt;li&gt;Create a data frame&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Apply extractors per chunk into data_frame&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I would really love it if someone showed me how to do this with purrr&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;finalframe &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    author &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;length &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    title &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    location &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    pagenr &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    type &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    highlight &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# loop through all values &lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; i &lt;span class=&#34;kr&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;seq_along&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)){&lt;/span&gt;
    hold &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; testset&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; seperate_into_lines&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    finalframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;author&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_author&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    finalframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;title&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_title&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    finalframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;location&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_type_location_date&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_locations&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    finalframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;pagenr&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_type_location_date&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_pagenumber&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    finalframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;type&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_type_location_date&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_type&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    finalframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;highlight&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_highlights&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
finalframe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 20 × 6
##                                     author
##                                      &amp;lt;chr&amp;gt;
## 1             Andrew Hunt and David Thomas
## 2             Andrew Hunt and David Thomas
## 3                            Alex Reinhart
## 4                              David Price
## 5            City Watch #1 Terry Pratchett
## 6            City Watch #1 Terry Pratchett
## 7                              Mark Manson
## 8                     Kim Stanley Robinson
## 9                     Kim Stanley Robinson
## 10                    Kim Stanley Robinson
## 11         Douglas DeCarlo, James P. Lewis
## 12                             David Price
## 13           City Watch #2 Terry Pratchett
## 14 Kenneth Knoblauch &amp;amp; Laurence T. Maloney
## 15                           Alex Reinhart
## 16            Andrew Hunt and David Thomas
## 17                        Robert C. Martin
## 18            Andrew Hunt and David Thomas
## 19            Andrew Hunt and David Thomas
## 20                             David Price
## # ... with 5 more variables: title &amp;lt;chr&amp;gt;, location &amp;lt;chr&amp;gt;, pagenr &amp;lt;dbl&amp;gt;,
## #   type &amp;lt;chr&amp;gt;, highlight &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cool right?  Find this specific project on my &lt;a href=&#34;https://github.com/RMHogervorst/kindle_notes&#34;&gt;github page&lt;/a&gt;. (I will also add a script only version shortly)&lt;/p&gt;

&lt;h3 id=&#34;state-of-machine&#34;&gt;state of machine&lt;/h3&gt;

&lt;p&gt;&lt;details&gt; &lt;summary&gt; click to expand to see machine info&lt;/summary&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;sessioninfo&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;session_info&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## - Session info ----------------------------------------------------------
##  setting  value                       
##  version  R version 3.3.3 (2017-03-06)
##  os       Windows 10 x64              
##  system   x86_64, mingw32             
##  ui       RTerm                       
##  language (EN)                        
##  collate  Dutch_Netherlands.1252      
##  tz       Europe/Berlin               
##  date     2017-05-08                  
## 
## - Packages --------------------------------------------------------------
##  package     * version    date       source                             
##  assertthat    0.1        2013-12-06 CRAN (R 3.3.0)                     
##  backports     1.0.5      2017-01-18 CRAN (R 3.3.2)                     
##  broom         0.4.2      2017-02-13 CRAN (R 3.3.2)                     
##  clisymbols    1.1.0      2017-01-27 CRAN (R 3.3.3)                     
##  colorspace    1.3-2      2016-12-14 CRAN (R 3.3.2)                     
##  DBI           0.6-1      2017-04-01 CRAN (R 3.3.3)                     
##  digest        0.6.12     2017-01-27 CRAN (R 3.3.3)                     
##  dplyr       * 0.5.0      2016-06-24 CRAN (R 3.3.1)                     
##  emo           0.0.0.9000 2017-04-27 Github (hadley/emo@97754fd)        
##  evaluate      0.10       2016-10-11 CRAN (R 3.3.3)                     
##  forcats       0.2.0      2017-01-23 CRAN (R 3.3.2)                     
##  foreign       0.8-67     2016-09-13 CRAN (R 3.3.3)                     
##  ggplot2     * 2.2.1      2016-12-30 CRAN (R 3.3.2)                     
##  gtable        0.2.0      2016-02-26 CRAN (R 3.3.0)                     
##  haven         1.0.0      2016-09-23 CRAN (R 3.3.1)                     
##  hms           0.3        2016-11-22 CRAN (R 3.3.2)                     
##  htmltools     0.3.5      2016-03-21 CRAN (R 3.3.0)                     
##  httr          1.2.1      2016-07-03 CRAN (R 3.3.1)                     
##  jsonlite      1.3        2017-02-28 CRAN (R 3.3.3)                     
##  knitr         1.15.1     2016-11-22 CRAN (R 3.3.2)                     
##  lattice       0.20-35    2017-03-25 CRAN (R 3.3.3)                     
##  lazyeval      0.2.0      2016-06-12 CRAN (R 3.3.0)                     
##  lubridate     1.6.0      2016-09-13 CRAN (R 3.3.1)                     
##  magrittr      1.5        2014-11-22 CRAN (R 3.3.0)                     
##  mnormt        1.5-5      2016-10-15 CRAN (R 3.3.2)                     
##  modelr        0.1.0      2016-08-31 CRAN (R 3.3.2)                     
##  munsell       0.4.3      2016-02-13 CRAN (R 3.3.0)                     
##  nlme          3.1-131    2017-02-06 CRAN (R 3.3.3)                     
##  plyr          1.8.4      2016-06-08 CRAN (R 3.3.0)                     
##  psych         1.7.3.21   2017-03-22 CRAN (R 3.3.3)                     
##  purrr       * 0.2.2      2016-06-18 CRAN (R 3.3.1)                     
##  R6            2.2.0      2016-10-05 CRAN (R 3.3.1)                     
##  Rcpp          0.12.10    2017-03-19 CRAN (R 3.3.3)                     
##  readr       * 1.1.0      2017-03-22 CRAN (R 3.3.3)                     
##  readxl        0.1.1      2016-03-28 CRAN (R 3.3.0)                     
##  reshape2      1.4.2      2016-10-22 CRAN (R 3.3.2)                     
##  rmarkdown     1.4        2017-03-24 CRAN (R 3.3.3)                     
##  rprojroot     1.2        2017-01-16 CRAN (R 3.3.2)                     
##  rvest         0.3.2      2016-06-17 CRAN (R 3.3.1)                     
##  scales        0.4.1      2016-11-09 CRAN (R 3.3.2)                     
##  sessioninfo   0.0.0.9000 2017-04-25 Github (r-pkgs/sessioninfo@0a5b58f)
##  stringi       1.1.5      2017-04-07 CRAN (R 3.3.3)                     
##  stringr       1.2.0      2017-02-18 CRAN (R 3.3.3)                     
##  tibble      * 1.3.0      2017-04-01 CRAN (R 3.3.3)                     
##  tidyr       * 0.6.1      2017-01-10 CRAN (R 3.3.2)                     
##  tidyverse   * 1.1.1      2017-01-27 CRAN (R 3.3.2)                     
##  withr         1.0.2      2016-06-20 CRAN (R 3.3.1)                     
##  xml2          1.1.1      2017-01-24 CRAN (R 3.3.2)                     
##  yaml          2.1.14     2016-11-12 CRAN (R 3.3.2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;

&lt;p&gt;[1] ^1&lt;/p&gt;

&lt;p&gt;[2] I use the tidyverse form of a data.frame called tibble or data_frame, it is like a data.frame but it never converts character to factor and never adds rownames . See more at &lt;code&gt;?tibble::tibble&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;[3] This is absolutely not a robust way of programming, if the format ever changes, all my functions are screwed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing manuscripts in Rstudio, easy citations</title>
      <link>/cleancode/blog/2017/03/14/content/post/2017-03-14-writing-manuscripts-in-rstudio/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2017/03/14/content/post/2017-03-14-writing-manuscripts-in-rstudio/</guid>
      <description>

&lt;h2 id=&#34;intro-and-setup&#34;&gt;Intro and setup&lt;/h2&gt;

&lt;p&gt;This is a simple explanation of how to write a manuscript in RStudio. Writing a manuscript in RStudio is not ideal, but it has gotten better over time. It is now relatively easy to add citations to documents in RStudio.&lt;/p&gt;

&lt;p&gt;**The goal is not think about formatting, and citations, but to write the manuscript and add citations on the fly with a nice visual help. **&lt;/p&gt;

&lt;p&gt;This tutorial explains how to link Zotero (a reference manager) to your project folder and how to easily add citations.
In this tutorial I assume you have &lt;a href=&#34;www.zotero.org&#34;&gt;Zotero&lt;/a&gt; installed.
You will need to have the zotero extension &lt;a href=&#34;https://github.com/retorquere/zotero-better-bibtex/wiki&#34;&gt;betterBibtex&lt;/a&gt; installed and I will
use RStudio, with the packages knitr, shiny and other basic tooling in place.
To search and insert citations in a file you will need to install the package
&lt;code&gt;citr&lt;/code&gt;  install the latest &lt;a href=&#34;https://github.com/crsh/citr&#34;&gt;&lt;em&gt;dev-version from github&lt;/em&gt;&lt;/a&gt; or the stable version from &lt;a href=&#34;https://CRAN.R-project.org/package=citr&#34;&gt;cran&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;why-would-i-write-my-manuscript-in-rstudio&#34;&gt;Why would I write my manuscript in RStudio?&lt;/h2&gt;

&lt;p&gt;The main reasons to write in RStudio ( and not in f.i. Word ) are reproducibity, and version control. Writing in plain text as you do in RStudio makes it very easy to keep track of your work with version control and the plain files are easily shared. Working from RStudio also allows you to combine the code and text in one document. This is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Literate_programming&#34; title=&#34;wikipedia link&#34;&gt;literate programming&lt;/a&gt;. Literate programming makes it incredibly easy to share your code (it&amp;rsquo;s in the document) and compiling the document runs the code again, ensuring reproducibility.&lt;/p&gt;

&lt;p&gt;I use RStudio projects so everything
important to a project is in the same folder and the working directory is  automatically correct. I create a new RMarkdown document &lt;img src=&#34;{{ site.url }}/images/example_rstudio_manuscript.PNG&#34; alt=&#34;rmarkdown doc&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;earlier-workflows&#34;&gt;Earlier workflows&lt;/h4&gt;

&lt;p&gt;It was always possible to intersperse code and text in R, previously people used the &lt;code&gt;Sweave&lt;/code&gt; package to combine code and text. You had to write the text in Latex and markup the code. Latex prints very pretty, but in raw form it is horrible to read, as you can see in the example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\documentclass[12pt]{article}
\usepackage{lingmacros}
\usepackage{tree-dvips}
\begin{document}

\section*{Notes for My Paper}

Don&#39;t forget to include examples of topicalization.
They look like this:

{\small
\enumsentence{Topicalization from sentential subject:\\ 
\shortex{7}{a John$_i$ [a &amp;amp; kltukl &amp;amp; [el &amp;amp; 
  {\bf l-}oltoir &amp;amp; er &amp;amp; ngii$_i$ &amp;amp; a Mary]]}
{ &amp;amp; {\bf R-}clear &amp;amp; {\sc comp} &amp;amp; 
  {\bf IR}.{\sc 3s}-love   &amp;amp; P &amp;amp; him &amp;amp; }
{John, (it&#39;s) clear that Mary loves (him).}}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;I copied this from a example page.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:http-mally-stanf&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:http-mally-stanf&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The output looks beautiful, but it&amp;rsquo;s damn near unworkable in plain text. And even worse, mistakes are easily made and very hard to find (since you don&amp;rsquo;t know where the trouble started, and the error messages are quite cryptic).&lt;/p&gt;

&lt;h4 id=&#34;from-latex-sweave-to-rmarkdown&#34;&gt;From latex / Sweave to RMarkdown&lt;/h4&gt;

&lt;p&gt;Markdown is a very simple markup language that is readable for humans and can be translated into html / latex / word / etc by computers. In stead of \section{name fo the section} we can just use a pound symbol (a.k.a. hashtag: #) to mark a heading. One pound for a heading 1, 2 for heading 2 etc. The difference between markdown and RMarkdown is R-code in the text. There are plenty good tutorials out there so I will only give you one&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:http-rmarkdown-r&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:http-rmarkdown-r&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; and a search online will give you more.&lt;/p&gt;

&lt;h4 id=&#34;citations&#34;&gt;Citations&lt;/h4&gt;

&lt;p&gt;Citations connect your paper to the past, linking your research to earlier research. It is essential that people can find the correct paper or book you are referring to. For that reason (and vanity I think) there are many styles of citations. I&amp;rsquo;ve used the APA and Chicago style in the past and there are probably about 500. Every single one has different rules; cite inline by author name and year, or by number, etc.&lt;/p&gt;

&lt;p&gt;If you resubmit your paper to a journal with a different citation style you have to rewrite every citation in the manuscript. Because we have better things to do, there are reference managers that automatically use the correct styling. And that change all the references in the text. I have used this in Word and LibreOffice in the past. But changing styles works a bit different in plain text formats such as markdown and latex. In general you cite research by a &lt;strong&gt;key&lt;/strong&gt; that refers to a &lt;strong&gt;bibliography&lt;/strong&gt;. In the build process the keys are replaced with the citations in the style that you want, so that the endproduct has the correct citations.
This is also implemented in Latex and RStudio. In general the workflow is as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;add the citations in the correct &amp;lsquo;language&amp;rsquo; (bibtex) to your document or to a different document and provide a link to.&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;keys&lt;/strong&gt; that refer to the correct entry in the bibtex.&lt;/li&gt;
&lt;li&gt;The citation manager inserts the correctly styled reference in the correct location while it writes the final version.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You write and cite like this:&lt;/p&gt;

&lt;p&gt;&amp;ldquo;The ggplot2 package is used to plot images in layers [@wickham_ggplot2_2009].&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The key (a at-sign and name) refers to a bibtex entry. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@book{wickham_ggplot2_2009,
  address = {New York, NY},
  title = {Ggplot2},
  isbn = {978-0-387-98140-6 978-0-387-98141-3},
  language = {en},
  timestamp = {2017-02-19T10:19:27Z},
  urldate = {2015-11-09},
  url = {http://ggplot2.org},
  publisher = {{Springer New York}},
  author = {Wickham, Hadley},
  year = {2009},
  note = {04749},
  file = {ggplot2 - hadley wickham.pdf:C\:\\Users\\roel\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\aw40nx7l.default\\zotero\\storage\\AADU9XVP\\ggplot2 - hadley wickham.pdf:application/pdf}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which will resolve to (if you use APA formatting):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The ggplot2 package is used to plot images in layers (Wickham, 2009).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;bibtex-files-creation&#34;&gt;Bibtex files creation&lt;/h3&gt;

&lt;p&gt;Now, making your own bibtex files is a serious pain in the backside. So we don&amp;rsquo;t do that. We also don&amp;rsquo;t try to remember all the keys, but first about the creation of the bibtex file.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t want to keep track of the correct way to cite sources, that is just a waste of time. We have excellent reference managers for this goal. I use Zotero. I just throw the pdfs in the correct folder and Zotero finds the correct metadata using the pdfs DOI (digital object identifier).
This is how it looks on my computer
&lt;img src=&#34;{{ site.url }}/images/example_zotero_look.PNG&#34; alt=&#34;a snapshot of zotero on my pc&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I use the extension &lt;a href=&#34;link&#34;&gt;betterbibtex&lt;/a&gt;, that adds extra functionality to Zotero. In this case it also takes care of synchronizing the bibtext file that you export to the folder you&amp;rsquo;re working in and the corresponding collection in Zotero. (see further on).&lt;/p&gt;

&lt;p&gt;I export the collection from zotero into the rstudio folder. &lt;img src=&#34;{{ site.url }}/images/example_zotero_keep_updated.PNG&#34; alt=&#34;zotero keep updated image&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;the-rmarkdown-document&#34;&gt;The RMarkdown document&lt;/h4&gt;

&lt;p&gt;If you open a new rmarkdown document from the RStudio console a basic document with metadata is already opened.
The top of your manuscript should contain metadata such as the title output and in this case we also need to append it to show where to find the bibliography.:
For example we make a html document called sample_Document with a bibliography based on a document bibliography.bib found in the same folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Sample Document&amp;quot;
output: html_document
bibliography: bibliography.bib
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While writing the manuscript we cite like so &lt;img src=&#34;{{ site.url }}/images/example_adding_citations_rmarkdown.PNG&#34; alt=&#34;image of citing&#34; /&gt;&lt;/p&gt;

&lt;p&gt;For more information about citations and bibliographies look at the RStudio website&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:http-rmarkdown-r&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:http-rmarkdown-r&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h4 id=&#34;choosing-a-citation-style-in-the-manuscript&#34;&gt;Choosing a citation style in the manuscript&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;update 2017-03-15&lt;/em&gt; Michael Koontz &lt;a href=&#34;https://twitter.com/_mikoontz/status/838859261572591623&#34;&gt;explains how to add a citation style to your document&lt;/a&gt; in short:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;search for a citation style &lt;a href=&#34;https://github.com/citation-style-language/styles/find/master&#34;&gt;https://github.com/citation-style-language/styles/find/master&lt;/a&gt; (f.i. APA)&lt;/li&gt;
&lt;li&gt;find the correct file and click on raw&lt;/li&gt;
&lt;li&gt;copy the link to the citation style file in the yaml
&lt;code&gt;
---
title: &amp;quot;Sample Document&amp;quot;
output: html_document
bibliography: bibliography.bib
csl: https://raw.githubusercontent.com/citation-style-language/styles/master/apa.csl
---
&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;making-citing-easier-with-the-help-of-citr&#34;&gt;Making citing easier with the help of CITR&lt;/h4&gt;

&lt;p&gt;Then use the citr package &lt;a href=&#34;https://github.com/crsh/citr&#34;&gt;https://github.com/crsh/citr&lt;/a&gt;.
&lt;em&gt;Citr works quite nicely, but unfortunately it has recently acquired default behavior that is frankly annoying. If Zotero is active (open in a window on your computer), citr will ignore the bibliography you mentioned in the top of the document and just try to read in the entire zotero library. (which will fail on my computer) I had to change a setting to change this.&lt;/em&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:you-have-to-chan&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:you-have-to-chan&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Loading citations:
&lt;img src=&#34;{{ site.url }}/images/example_loading_citr.PNG&#34; alt=&#34;image of loading citr&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Adding a citation to a document:
&lt;img src=&#34;{{ site.url }}/images/example_adding_citation_with_citr.PNG&#34; alt=&#34;image of adding a citation&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This adds the correct citation as you can see&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;{{ site.url }}/images/example_citation_side_by_side.PNG&#34; alt=&#34;side by side comparison&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This piece became a bit longer then anticipated but I discovered new behavior of &lt;code&gt;citr&lt;/code&gt;, so there&amp;rsquo;s that.
All in all RStudio / R and related tools can become the complete workbench for reading in data, cleaning and analyzing, and also writing the manuscript.&lt;/p&gt;

&lt;p&gt;For practical examples of reproducible work see this book&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:https-www-practi&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:https-www-practi&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:http-mally-stanf&#34;&gt;&lt;a href=&#34;http://mally.stanford.edu/~sr/computing/latex-example.html&#34;&gt;http://mally.stanford.edu/~sr/computing/latex-example.html&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:http-mally-stanf&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:http-rmarkdown-r&#34;&gt;&lt;a href=&#34;http://rmarkdown.rstudio.com/lesson-1.html&#34;&gt;http://rmarkdown.rstudio.com/lesson-1.html&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:http-rmarkdown-r&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:http-rmarkdown-r&#34;&gt;&lt;a href=&#34;http://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html&#34;&gt;http://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:http-rmarkdown-r&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:you-have-to-chan&#34;&gt; you have to change &lt;code&gt;options(citr.use_betterbiblatex = FALSE)&lt;/code&gt; adding this to .Renviron works &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:you-have-to-chan&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:https-www-practi&#34;&gt;&lt;a href=&#34;https://www.practicereproducibleresearch.org/&#34;&gt;https://www.practicereproducibleresearch.org/&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:https-www-practi&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Plotting a map with ggplot2, color by tile</title>
      <link>/cleancode/blog/2017/01/06/content/post/2017-01-07-plotting-a-map-with-ggplot2/</link>
      <pubDate>Fri, 06 Jan 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2017/01/06/content/post/2017-01-07-plotting-a-map-with-ggplot2/</guid>
      <description>

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Last week I was playing with creating maps using R and GGPLOT2. As I was learning I realized information about creating maps in ggplot is scattered over the internet. So here I combine all that knowledge. So if something is absolutely wrong/ ridiculous / stupid / slightly off or not clear, contact me or &lt;a href=&#34;https://github.com/RMHogervorst/cleancode/issues&#34;&gt;open an issue on the github page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When you search for plotting examples you will often encounter the packages &lt;code&gt;maps&lt;/code&gt; and &lt;code&gt;mapdata&lt;/code&gt;. However most of the examples are based on the USA, which is conveniently already contained in those packages.&lt;/p&gt;

&lt;p&gt;But since I wanted to plot The Netherlands, I was out of luck, I couldn&amp;rsquo;t find a map of The Netherlands in those packages. But.. you can build those maps yourself!&lt;/p&gt;

&lt;p&gt;This tutorial consists of :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;downloading the shapefile of your country&lt;/li&gt;
&lt;li&gt;getting the file in your R session&lt;/li&gt;
&lt;li&gt;basis plotting with ggplot&lt;/li&gt;
&lt;li&gt;combining the shapefile with other information&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The end result is a map of a country with municipals colored by number of people in there.&lt;/p&gt;

&lt;h2 id=&#34;downloading-the-file-to-your-computer&#34;&gt;Downloading the file to your computer&lt;/h2&gt;

&lt;p&gt;Steps: download shape files for your country from &lt;a href=&#34;http://www.gadm.org/country&#34;&gt;http://www.gadm.org/country&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NOTE THAT YOU CAN NOT USE THESE CHARTS FOR COMMERCIAL APPLICATIONS. &lt;em&gt;You can however use charts created by the Kadaster or Netherlands Statistics Institute (CBS)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Choose a country and choose a file format. I chose &lt;code&gt;R (SpatialPolygonsDataFrame)&lt;/code&gt;. In the next page you can choose the level of detail in the map.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/gadm_levels.PNG&#34; alt=&#34;image of the Netherlands with different borders&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The picture above you can see what I saw. This type of picture is available for every country.&lt;/p&gt;

&lt;p&gt;If you download the shapefile on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;level 0 : you will get the outline of the country (everything yellow)&lt;/li&gt;
&lt;li&gt;level 1 : Major borders, that is every province in the Netherlands (everything red)&lt;/li&gt;
&lt;li&gt;level 2 : Boundaries of counties, districts &lt;em&gt;Dutch: gemeenten&lt;/em&gt; (blue lines)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you download on level 2 you will also get the information of level 1 en level 0. The file is thus larger and has a ridiculous amount of detail.&lt;/p&gt;

&lt;p&gt;Download the file to your computer in the folder data [link to best practices]&lt;/p&gt;

&lt;h2 id=&#34;getting-the-file-into-r&#34;&gt;Getting the file into R&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;sp&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# you need this library to work with SpatialPolygons&lt;/span&gt;
NLD &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;readRDS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;shapefiles/NLD_adm2.rds&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point you can already use this file with base plot try: &lt;code&gt;plot(NLD)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;However we want to manipulate this file and use it in ggplot. The following part is about the structure of the file, to see what happens next, skip it and go to the next.&lt;/p&gt;

&lt;h3 id=&#34;about-the-structure-of-this-file&#34;&gt;about the structure of this file&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Note: you don&amp;rsquo;t need to know this, you can just skip ahead to the next heading.&lt;/strong&gt; The file that you imported is a SpatialPolygonsDataFrame, which is a special object. This is a s4 object &lt;em&gt;try google for the difference between s3 and s4 objects and more in R&lt;/em&gt;. Whats important is that an S4 object has &amp;lsquo;slots&amp;rsquo; that are accessible through the &lt;code&gt;@&lt;/code&gt; symbol. try typing in the name of the object followed by a &lt;code&gt;$&lt;/code&gt; and with the &lt;code&gt;@&lt;/code&gt; sign. The object contains a slot for &lt;em&gt;data&lt;/em&gt;, &lt;em&gt;polygons&lt;/em&gt;, &lt;em&gt;plotorder&lt;/em&gt;, &lt;em&gt;bbox&lt;/em&gt; and &lt;em&gt;proj4strings.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;*I had great help inspecting this &lt;a href=&#34;https://gis.stackexchange.com/questions/87789/spatialpointsdataframe-properties-and-operators-in-r&#34;&gt;stackoverflow question&lt;/a&gt;. The point of this S4 object is that you almost never have to manipulate the deeper structure of the file. there are functions that do those steps for you.&lt;/p&gt;

&lt;p&gt;But I thought it would be interesting to understand this structure&lt;/p&gt;

&lt;p&gt;First we look at &lt;strong&gt;data&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;tibble&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# better printing&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# obviously&lt;/span&gt;
NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; as_tibble&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 491 × 15
##    OBJECTID  ID_0   ISO      NAME_0  ID_1  NAME_1  ID_2         NAME_2
##       &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;          &amp;lt;chr&amp;gt;
## 1         1   158   NLD Netherlands     1 Drenthe     1    Aa en Hunze
## 2         2   158   NLD Netherlands     1 Drenthe     2          Assen
## 3         3   158   NLD Netherlands     1 Drenthe     3  Borger-Odoorn
## 4         4   158   NLD Netherlands     1 Drenthe     4      Coevorden
## 5         5   158   NLD Netherlands     1 Drenthe     5      De Wolden
## 6         6   158   NLD Netherlands     1 Drenthe     6          Emmen
## 7         7   158   NLD Netherlands     1 Drenthe     7      Hoogeveen
## 8         8   158   NLD Netherlands     1 Drenthe     8         Meppel
## 9         9   158   NLD Netherlands     1 Drenthe     9 Midden-Drenthe
## 10       10   158   NLD Netherlands     1 Drenthe    10    Noordenveld
## # ... with 481 more rows, and 7 more variables: HASC_2 &amp;lt;chr&amp;gt;, CCN_2 &amp;lt;int&amp;gt;,
## #   CCA_2 &amp;lt;chr&amp;gt;, TYPE_2 &amp;lt;chr&amp;gt;, ENGTYPE_2 &amp;lt;chr&amp;gt;, NL_NAME_2 &amp;lt;chr&amp;gt;,
## #   VARNAME_2 &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;tail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;##     OBJECTID ID_0 ISO      NAME_0 ID_1       NAME_1 ID_2      NAME_2
## 490      490  158 NLD Netherlands   14 Zuid-Holland  490 Zoeterwoude
## 491      491  158 NLD Netherlands   14 Zuid-Holland  491 Zwijndrecht
##       HASC_2 CCN_2 CCA_2   TYPE_2    ENGTYPE_2 NL_NAME_2 VARNAME_2
## 490 NL.ZH.ZD    NA       Gemeente Municipality                    
## 491 NL.ZH.ZW    NA       Gemeente Municipality
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The slot data contains 491 rows with 15 variables. This data is hierarchical with level 1 nested under level 0 and level 2 nested under level 1. So this data contains information about municipalies (Dutch: gemeenten) that are part of a province (Dutch: provincie), that are part of a country: Nederland. On every level there is an &lt;code&gt;ID&lt;/code&gt; and a &lt;code&gt;NAME&lt;/code&gt;. There is a ID_0 and a corresponding NAME_0, and a ID_1 with a NAME_1 and finally a ID_2 and NAME_2.&lt;/p&gt;

&lt;p&gt;The structure:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ID_x: level identification ID_0 = country, ID_1 = province, ID_2 = Municipality&lt;/li&gt;
&lt;li&gt;NAME_x: the name of the level region&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;f.i. :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;OBJECTID  ID_0   ISO      NAME_0  ID_1  NAME_1  ID_2         NAME_2   
8         8   158   NLD Netherlands     1 Drenthe     8         Meppel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Meppel is Municipality in the Province Drenthe in the country Netherlands.&lt;/p&gt;

&lt;p&gt;other variables: - OBJECTID: link to polygons (and rownumber) - ISO: I think the International Standards Organisation code of the country - HASC_2 some sort of coding Country.province,area - CCN_2 don&amp;rsquo;t know - CCA_2 don&amp;rsquo;t know - TYPE_2 name of type 2 Gemeente in my case - ENGTYPE_2 English name for TYPE_2 (Municipality) - NL_NAME_2 don&amp;rsquo;t know - VARNAME_2 I think variants of the Municipality name&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s look at the &lt;strong&gt;Polygons&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not entirely sure about the relation between &lt;em&gt;data&lt;/em&gt; and &lt;em&gt;polygons&lt;/em&gt; but there seems to be a link where OBJECTID from data corresponds to the group ID of the polygons.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;polygons &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] 491
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;polygons&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# read the tenth object &lt;/span&gt;
  slotNames&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# and give me the slotnames&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Polygons&amp;quot;  &amp;quot;plotOrder&amp;quot; &amp;quot;labpt&amp;quot;     &amp;quot;ID&amp;quot;        &amp;quot;area&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Every polygon object of the 491 polygons has&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Polygons [1] : which make up the area of this part of the chart.&lt;/li&gt;
&lt;li&gt;plotOrder: This has something to do with which shapes are presented first. However all the objects in here have plotOrder 1. So I really don&amp;rsquo;t know what this is.&lt;/li&gt;
&lt;li&gt;labpt: this is the centroid of the polygon. The middle point as it were.&lt;/li&gt;
&lt;li&gt;ID: identical to rownumber/OBJECTID in &lt;code&gt;@data&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;area: I think the square kilometer area inside the polygon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I believe that there can be more Polygons inside the Polygons of an area. So if we look inside of one polygon in a polygon..&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;polygons&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;Polygons&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; slotNames&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;labpt&amp;quot;   &amp;quot;area&amp;quot;    &amp;quot;hole&amp;quot;    &amp;quot;ringDir&amp;quot; &amp;quot;coords&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We see that every part has a middle point, area size a hole a ringdir and a matrix of coordinates.&lt;/p&gt;

&lt;p&gt;Lets move back out to the top and look at plotorder: which is 1 again&amp;hellip; and the other two slots: bbox and proj4string.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;bbox&lt;/strong&gt; is the bounding box. the ultimate limits of the area described by this dataframe.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;bbox&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;##         min       max
## x  3.360782  7.227095
## y 50.723492 53.554585
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;proj4string&lt;/strong&gt; is a notation that tells graphical systems what coordinate system is used. Because there are a lot of coordinates!
in this case &lt;code&gt;+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0&lt;/code&gt; So a longitude lattitude projection, with datum wgs84 which is a &lt;a href=&#34;https://en.wikipedia.org/wiki/World_Geodetic_System&#34;&gt;worldwide used coordinate system&lt;/a&gt;. And I think the last part is an ofset if necessary.&lt;/p&gt;

&lt;p&gt;So concluding: This dataframe consists of general describing data in &lt;code&gt;@data&lt;/code&gt; coordinates for every row, with some coordinate referencing to help translating the coordinates into other projections.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Read on from here&lt;/em&gt; ## Basic plotting of the map with ggplot Why don&amp;rsquo;t we just plot the map?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# can&amp;#39;t work without it&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NLD&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Regions defined for each Polygons
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-5-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We got a message: Regions defined for each Polygons, this is ggplot telling us that some work was done on the background to reshape the data for plotting use.&lt;/p&gt;

&lt;p&gt;Also, the map looks really, really ugly. What&amp;rsquo;s the deal? Because ggplot doesn&amp;rsquo;t know what kind of data this is, it stretches the points untill the plotting region is filled.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s try something where all the steps in the x direction are identical to the y direction. Let&amp;rsquo;s fix the coordinates.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NLD&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
               aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  coord_fixed&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Regions defined for each Polygons
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-6-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This looks better, but for people from the Netherlands, this still doesn&amp;rsquo;t look quite right. The country is stretched in a weird way and the center, filled with a &lt;a href=&#34;https://en.wikipedia.org/wiki/IJsselmeer&#34; title=&#34;this lake used to be a sea, but we didn&#39;t want a sea anymore&#34;&gt;big ass man made lake&lt;/a&gt; should not by plotted.&lt;/p&gt;

&lt;p&gt;First the stretching. There is a special coordinate thingy in ggplot called coord_map(). I like the standard projection, but if you liek you can try any of the projections in &lt;code&gt;?mapproj::mapproject&lt;/code&gt; . Go crazy!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NLD&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Regions defined for each Polygons
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-7-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Lets first take out the lakes. This is where local knowledge comes to play. If we look at the level_1 names &lt;code&gt;NLD@data$NAME_1 %&amp;gt;% unique()&lt;/code&gt;, we see 14 different areas. However, there are only 12 provinces in the Netherlands. 2 of these areas are actually lakes: &amp;ldquo;IJsselmeer&amp;rdquo; and &amp;ldquo;Zeeuwse meren&amp;rdquo;. We can get those out by using subset.[2]. The command says: subset NLD where NLD$NAME_! is NOT the two lakes.&lt;/p&gt;

&lt;p&gt;I also want to lose the message. Use &lt;code&gt;fortify()&lt;/code&gt; to apply the polygons to region transformation.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD_fixed &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;subset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;NLD&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;NAME_1  &lt;span class=&#34;o&#34;&gt;%in%&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Zeeuwse meren&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;IJsselmeer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
NLD_fixed &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; fortify&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD_fixed&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Regions defined for each Polygons
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#NLD_fixed &amp;lt;- broom::tidy(NLD) # this would also work and is recommended by Hadley Wickham in the future.&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD_fixed&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-8-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s add some color!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD_fixed&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# no backgroundcolor&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# color is the lines of the region&lt;/span&gt;
                fill &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;#9C9797&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# fill is the fill of every polygon.&lt;/span&gt;
  coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-9-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;combine-the-map-with-another-dataset-and-color-the-tiles&#34;&gt;Combine the map with another dataset and color the tiles&lt;/h2&gt;

&lt;p&gt;From the open data portal of the Netherlands I downloaded the number of people every municipally. Yeah open data!&lt;/p&gt;

&lt;p&gt;loading the data. skipping the file information, selecting only the columns with a municipal name and number and throwing away empty columns. &lt;em&gt;note that there will be some discrepancies, the map information is a bit older and the municipallies are from 2016, so some names might not match. If I really care I could do some matching. But I don&amp;rsquo;t.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;gemeenten2016sept &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; readr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;read_csv2&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data/Bevolking__leeftijd,_050117111254.csv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;skip &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gemeente &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`Regio&amp;#39;s`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; number &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; aantal&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;is.na&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;number&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   `Regio&#39;s` = col_character(),
##   Perioden = col_integer(),
##   Leeftijd = col_character(),
##   aantal = col_integer()
## )

## Warning: 1 parsing failure.
## row col  expected    actual
## 391  -- 4 columns 1 columns
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Combining the map information, names of municipalies and number of people in one file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;combine IDs inside the map information, with names and numbers.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;names_and_numbers &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;rownames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;data&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                                gemeente&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;data&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;NAME_2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  left_join&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gemeenten2016sept&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; by &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;gemeente&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Combining the names and numbers with the map information.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;final_map &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; left_join&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD_fixed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; names_and_numbers&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; by &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;final_map&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; fill&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; number&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;grey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; alpha &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  scale_fill_distiller&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;name &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Number of people in gemeente&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# change titel legend&lt;/span&gt;
                       palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Spectral&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# change the color scheme&lt;/span&gt;
  theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# chagne the legend position&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-12-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;[1] I know! really confusing, polygons inside polygons!, crezy!&lt;/p&gt;

&lt;p&gt;[2] I haven&amp;rsquo;t found a tidy way to do this yet&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.milanor.net/blog/maps-in-r-introduction-drawing-the-map-of-europe/&#34;&gt;http://www.milanor.net/blog/maps-in-r-introduction-drawing-the-map-of-europe/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/9199727/themathic-map-choropleth-map-of-the-netherlands&#34;&gt;http://stackoverflow.com/questions/9199727/themathic-map-choropleth-map-of-the-netherlands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pdok.nl/nl/producten/pdok-downloads/basis-registratie-kadaster/bestuurlijke-grenzen-actueel&#34;&gt;https://www.pdok.nl/nl/producten/pdok-downloads/basis-registratie-kadaster/bestuurlijke-grenzen-actueel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eriqande.github.io/rep-res-web/lectures/making-maps-with-R.html&#34;&gt;http://eriqande.github.io/rep-res-web/lectures/making-maps-with-R.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;session-info&#34;&gt;Session info&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;devtools&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;session_info&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Session info --------------------------------------------------------------

##  setting  value                       
##  version  R version 3.3.2 (2016-10-31)
##  system   x86_64, mingw32             
##  ui       RTerm                       
##  language (EN)                        
##  collate  Dutch_Netherlands.1252      
##  tz       Europe/Berlin               
##  date     2017-01-07

## Packages ------------------------------------------------------------------

##  package      * version date       source        
##  assertthat     0.1     2013-12-06 CRAN (R 3.3.0)
##  backports      1.0.4   2016-10-24 CRAN (R 3.3.2)
##  colorspace     1.3-2   2016-12-14 CRAN (R 3.3.2)
##  DBI            0.5-1   2016-09-10 CRAN (R 3.3.1)
##  devtools       1.12.0  2016-06-24 CRAN (R 3.3.1)
##  digest         0.6.10  2016-08-02 CRAN (R 3.3.1)
##  dplyr        * 0.5.0   2016-06-24 CRAN (R 3.3.1)
##  evaluate       0.10    2016-10-11 CRAN (R 3.3.2)
##  ggplot2      * 2.2.1   2016-12-30 CRAN (R 3.3.2)
##  gtable         0.2.0   2016-02-26 CRAN (R 3.3.0)
##  htmltools      0.3.5   2016-03-21 CRAN (R 3.3.0)
##  knitr          1.15.1  2016-11-22 CRAN (R 3.3.2)
##  labeling       0.3     2014-08-23 CRAN (R 3.3.0)
##  lattice        0.20-34 2016-09-06 CRAN (R 3.3.2)
##  lazyeval       0.2.0   2016-06-12 CRAN (R 3.3.0)
##  magrittr       1.5     2014-11-22 CRAN (R 3.3.0)
##  mapproj        1.2-4   2015-08-03 CRAN (R 3.3.2)
##  maps           3.1.1   2016-07-27 CRAN (R 3.3.2)
##  memoise        1.0.0   2016-01-29 CRAN (R 3.3.0)
##  munsell        0.4.3   2016-02-13 CRAN (R 3.3.0)
##  plyr           1.8.4   2016-06-08 CRAN (R 3.3.0)
##  R6             2.2.0   2016-10-05 CRAN (R 3.3.1)
##  RColorBrewer   1.1-2   2014-12-07 CRAN (R 3.3.0)
##  Rcpp           0.12.8  2016-11-17 CRAN (R 3.3.2)
##  readr          1.0.0   2016-08-03 CRAN (R 3.3.1)
##  rmarkdown      1.3     2016-12-21 CRAN (R 3.3.2)
##  rprojroot      1.1     2016-10-29 CRAN (R 3.3.2)
##  scales         0.4.1   2016-11-09 CRAN (R 3.3.2)
##  sp           * 1.2-4   2016-12-22 CRAN (R 3.3.2)
##  stringi        1.1.2   2016-10-01 CRAN (R 3.3.1)
##  stringr        1.1.0   2016-08-19 CRAN (R 3.3.1)
##  tibble       * 1.2     2016-08-26 CRAN (R 3.3.1)
##  withr          1.0.2   2016-06-20 CRAN (R 3.3.1)
##  yaml           2.1.14  2016-11-12 CRAN (R 3.3.2)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>From spss to R, part 4</title>
      <link>/cleancode/blog/2016/04/04/content/post/2016-04-04--from-spss-to-r-part4/</link>
      <pubDate>Mon, 04 Apr 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/04/04/content/post/2016-04-04--from-spss-to-r-part4/</guid>
      <description>

&lt;p&gt;This is the second part of working with ggplot. We will combine the
packages dplyr and ggplot to improve our workflow.
When you make a visualisation you often experiment with different versions of your plot. Our workflow will be dynamic, in stead of saving every version of the plot you created, we will recreate the plot untill  it looks the way you want it.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/blog/2016/03/02/from-spss-to-r-part3.html&#34; title=&#34;a full link to the previous lesson&#34;&gt;the previous lesson&lt;/a&gt; we worked with some build in datasets. But there is often more fun in public real world datasets.&lt;/p&gt;

&lt;p&gt;We will work with the Dutch government data about higher education more info at &lt;https://www.duo.nl/open_onderwijsdata/databestanden/ho/ingeschreven/wo-ingeschr/ingeschrevenen-wo1.jsp &#34;UPDATE 2017, NEW LOCATION, THANKS GOVERNMENT...&#34;&gt;. To help you along I have already transformed the data into a more tidy format &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. The data can be found at my github repository at this link: &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/files&#34;&gt;https://github.com/RMHogervorst/cleancodeexamples/blob/master/files&lt;/a&gt;. UPDATE 2017-08-23, SPSS FORMAT HAS CHANGED IN HAVEN, SO NEW DATA (2016) WITH FILES BOTH IN SPSS AND CSV FORMAT.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Everything else is the same, but the data is newer (2016, you can still work with the 2015 data in csv format, that will never break)&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;getting-started&#34;&gt;Getting started&lt;/h1&gt;

&lt;p&gt;You will need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Internet access&lt;/li&gt;
&lt;li&gt;Rstudio&lt;/li&gt;
&lt;li&gt;a recent version of R&lt;/li&gt;
&lt;li&gt;the packages: dplyr, ggplot2, readr.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You need to understand / apply&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;chaining commands using the pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) operator&lt;/li&gt;
&lt;li&gt;opening and closing of Rstudio, the assign (&lt;code&gt;&amp;lt;-&lt;/code&gt;)  operator&lt;/li&gt;
&lt;li&gt;recently used the dplyr commands (did you do the &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/blog/2016/02/22/from-spss-to-r-part2.html&#34;&gt;second&lt;/a&gt; lesson? you&amp;rsquo;re good then)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;starting-loading-the-file-and-a-first-look&#34;&gt;Starting loading the file and a first look&lt;/h2&gt;

&lt;p&gt;Start a new project in Rstudio or open a project you created in a previous session &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.
Copy the steps in your script or the console or follow the &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/scripts/introduction-to-ggplot2-part2.R&#34;&gt;script&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#location of files: &amp;#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/files&amp;#34;&lt;/span&gt;

link&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://raw.githubusercontent.com/RMHogervorst/cleancodeexamples/master/files/duo2016_tidy.csv&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Libraries to use&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# yes I use it almost daily&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;readr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# for the use of read_csv &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# (there is also a read.csv function in base r, but it has some undesirable properties)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# load the data&lt;/span&gt;
duo2015_tidy&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; read_csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;link&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# This is the same file we used in: &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# https://rmhogervorst.github.io/cleancode/blog/2016/02/24/creating-tidy-data.html&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# look at the data with View(duo2015_tidy) or&lt;/span&gt;
glimpse&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# often more meaningful&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The file contains the number of students per year per gender per program in Dutch Universities between 2011 and 2015.
Look around the dataset and get a sense of what it contains. Unfortunately for non-Dutch speakers, the set is entirely in Dutch&amp;hellip;  But I will explain the variables for you so far as I know.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PROVINCIE     province, which of the twelve &lt;a href=&#34;https://en.wikipedia.org/wiki/Provinces_of_the_Netherlands&#34;&gt;provinces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GEMEENTENUMMER    municipal number    No idea what basis this has&lt;/li&gt;
&lt;li&gt;GEMEENTENAAM      municipal name  (some municipals have changed names)&lt;/li&gt;
&lt;li&gt;SOORT INSTELLING  type of university regular or small&lt;/li&gt;
&lt;li&gt;BRIN.NUMMER.ACTUEEL no idea some sort of govermental number per university&lt;/li&gt;
&lt;li&gt;INSTELLINGSNAAM.ACTUEEL   University name at this moment (some have changed over time)&lt;/li&gt;
&lt;li&gt;CROHO.ONDERDEEL       CROHO stands for Central Registry Programs Higher Education&lt;/li&gt;
&lt;li&gt;CROHO.SUBONDERDEEL    ONDERDEEL means part, and subonderdeel subpart (every program in the Netherlands has a unique number&lt;/li&gt;
&lt;li&gt;OPLEIDINGSCODE.ACTUEEL    code of the program&lt;/li&gt;
&lt;li&gt;OPLEIDINGSNAAM.ACTUEEL    Name of the program (can change of course&amp;hellip;)&lt;/li&gt;
&lt;li&gt;OPLEIDINGSVORM    type of education, voltijd means fulltime, deeltijd means part time and duaal means dual, or a mix of working and studying&lt;/li&gt;
&lt;li&gt;OPLEIDINGSFASE.ACTUEEL might be recognizable; bachelor, master or bachelor propedeuse (first year of bachelor)&lt;/li&gt;
&lt;li&gt;YEAR      Yeah, I translated that one already&lt;/li&gt;
&lt;li&gt;GENDER    is actually also a dutch word meaning the same thing&lt;/li&gt;
&lt;li&gt;FREQUENCY how many students in this particalar group&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we know the structure of the dataset we can look at parts of it.&lt;/p&gt;

&lt;h2 id=&#34;slicing-and-dicing-your-set-while-exploring&#34;&gt;Slicing and dicing your set while exploring&lt;/h2&gt;

&lt;p&gt;The most important lesson of today is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;don&amp;rsquo;t save intermediate results / datasets / images&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In SPSS if you want to look at a subset of your data you would either create a selection group or save some results to a different file. While we can do that in R, it&amp;rsquo;s better to create a pipeline of data and change some of the steps. IT saves memory (mostly not important) but even better it keeps your dataset intact and prevents a filelist of over 200 files with uninspiring and meaningless names such as: &lt;code&gt;dataset1, dataset2AFTERSAVING, dataset456&lt;/code&gt; etc. This will keep your work, your workspace and your code &lt;strong&gt;clean&lt;/strong&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;We will first look at some details in the dataset. Follow along if you like but even better would be if you try to vary some steps. Instead of  &lt;code&gt;YEAR ==2016&lt;/code&gt; take &lt;code&gt;2011&lt;/code&gt; or only take master students. Learn by making mistakes and by following up on interesting side stories.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# First filter on 2015, full time and bachelor.&lt;/span&gt;
duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; View&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will display a subsample of your data. But for every unique program there are two rows. One for males (MAN) and one for females (VROUW).
You might not care for the seperate groups and want to combine them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; 
                                OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;combinedMF &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        View&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This might seem like a lot of typing, but you can just modify the last part of the commands by adding the group_by and summarize commands.&lt;/p&gt;

&lt;p&gt;An other thing you might have noticed, is that the previous data frame result is now gone and replaced by this result. That is fine, it was temporary anyways.&lt;/p&gt;

&lt;p&gt;An other question could be if the numbers per program changed over time?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2014&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; 
                                OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;combinedMF &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        View&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However there is just to much information to compare. Let&amp;rsquo;s see if we can visualize these numbers.
Now this might look a bit odd because we will combine a chain of commands with the pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) operator and then we add layers of the plot with the plus sign (&lt;code&gt;+&lt;/code&gt;)&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; YEAR&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;combinedMF &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; combinedMF&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I agree that this endresult is less then useful. But look at the code it&amp;rsquo;s really interesting.
This is a great time to take a little excursion&lt;/p&gt;

&lt;h3 id=&#34;a-small-excursion-into-chaining&#34;&gt;a small excursion into chaining&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Think back to part 2 of this course about chaining and dplyr&lt;/em&gt;
We started with the same chain that created a the summarized data frame. That data frame can be imported by ggplot. Remember that the pipe operator puts the end result as first argument in the command after it. &lt;em&gt;dplyr = layered grammar of data manipulation&lt;/em&gt; and &lt;em&gt;ggplot2 = layered grammar of graphics&lt;/em&gt; . So we have two sets of grammar here.&lt;/p&gt;

&lt;p&gt;The code above is just a simplified, much easier to read, notation of the following code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;TEMP1 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;   summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; YEAR&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;combinedMF &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# do you still see where the arguments of every command are?&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; TEMP1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; combinedMF&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see it&amp;rsquo;s hard to read what happened, or when things break, what arguments belong to which function. further more for every plot call you need to create a temporary dataset. One you will probably forget to remove afterwards.&lt;/p&gt;

&lt;p&gt;The pipe operator works with every command that starts with a data argument and there are ways to make it work with other commands. It really makes your life easier.&lt;/p&gt;

&lt;p&gt;End of excursion, why don&amp;rsquo;t we make some useful plots.&lt;/p&gt;

&lt;h2 id=&#34;making-plots-that-look-better&#34;&gt;Making plots that look better&lt;/h2&gt;

&lt;p&gt;There is a lot of information in this dataset. We will need to be more specific in our questions.
How many programs are there actually?&lt;/p&gt;

&lt;p&gt;There are 666 unique program names.&lt;/p&gt;

&lt;p&gt;What code would you use to find this out? &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Since every bachelor and masters program has a unique name and since bachelors generally give access to multiple masters, there are many many program names. But how many programs are there in the bachelor propedeuse phase?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        distinct&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The end result is a data frame with 141 cases/ rows. Look at the data frame.&lt;/p&gt;

&lt;p&gt;Is this a combination of males and females? Or are these really all the programs?&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:6&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:6&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;So there are 141 programs and many universities. Let&amp;rsquo;s first focus on one program in different universities. Two very popular programs in the Netherlands are Psychology&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:7&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:7&#34;&gt;7&lt;/a&gt;&lt;/sup&gt; and Law.
What happens here:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Rechtsgeleerdheid&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; 
		facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Take dataset&lt;/li&gt;
&lt;li&gt;only rows with  fulltime AND first year bachelor&lt;/li&gt;
&lt;li&gt;only rows with B psychology OR B law&lt;/li&gt;
&lt;li&gt;set up ggplot with year at the x axis, frequency at y axis and group by GENDER *&lt;/li&gt;
&lt;li&gt;make a line plot, colour by GENDER, and&lt;/li&gt;
&lt;li&gt;facet (make subplots) by municipal and program&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;*&lt;/code&gt; The setting up part &lt;code&gt;ggplot()&lt;/code&gt; doesn&amp;rsquo;t draw anything yet.&lt;/p&gt;

&lt;p&gt;Look at the plot. (I have recreated it here using &lt;code&gt;ggsave(&amp;quot;plot-psylawcities.png&amp;quot;)&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;{{ site.github.url}} /images/plot-psylawcities.png&#34; alt=&#34;first plot of Psychology and Law in different cities by gender over time&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is just a first plot, it&amp;rsquo;s far from pretty. It has no title, the years at the borders of psychology and law overlap, the name of the municipal/ city is not readable, and the colors of the gender are counter intuitive. If I had used these colors, blue for males and red for females would be more in line with western culture&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:8&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:8&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Another problem is that the Amsterdam numbers for Law are much lower then for Psychology, they don&amp;rsquo;t display so well on this scale. A separate plot for Psychology and Law would be better.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_colour_manual&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;values&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;lightblue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;pink&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&amp;rsquo;s address both color (going stereotype blue and pink) and program.
After my first plot, I found the lines a bit thin, so I set the size. I also used a manual color scale.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/plot-psypinkblue.png&#34; alt=&#34;plot with different colors only psychology&#34; /&gt;&lt;/p&gt;

&lt;p&gt;One of the odd things about rstudio is that if you click on the zoom button the plot looks good, but if you use ggsave it takes the uglier version in the side viewer. I guess I could change the settings in  the ggsave command&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:9&#34;&gt;9&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&#34;advanced-ggplot&#34;&gt;Advanced ggplot&lt;/h2&gt;

&lt;p&gt;The colors in the plot are not so bright. Which is actually a good thing for printing. But in this plot it can make it hard to read.&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s use some other custom colors.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_colour_manual&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;values&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;#3399ff&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;#ff00ff&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The colors are a number, how does that work?
Colors in R, or in all sorts of programs really, can be specified with their name: &amp;ldquo;red, magenta&amp;rdquo;, &amp;ldquo;cyan&amp;rdquo;, &amp;ldquo;black&amp;rdquo; etc. Or with their html code &amp;ldquo;#000fff&amp;rdquo; pick it with this &lt;a href=&#34;http://www.w3schools.com/colors/colors_picker.asp&#34;&gt;site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Take for instance the very ugly color &amp;ldquo;Aqua&amp;rdquo;, it has the name aqua, the html code #00ffff, rgb(0,255,255) and hsl(180,100%, 50%). Using a site such as the one above can help you in picking colours. to use in your plots. Try to plot the plot above with aqua or #00ffff as one of the values.&lt;/p&gt;

&lt;p&gt;An other way to change the colors is by using a color package.
One great package is the &lt;a href=&#34;http://www.r-bloggers.com/r-using-rcolorbrewer-to-colour-your-figures-in-r/&#34;&gt;color brewer package&lt;/a&gt;. Install the package and try &lt;code&gt;RColorBrewer::display.brewer.all(n=8, exact.n=FALSE)&lt;/code&gt; to see the different colors.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This looks somewhat better.
More information about colors and creating your own colors can be found at:
&lt;a href=&#34;http://www.cookbook-r.com/Graphs/Colors_%28ggplot2%29/&#34;&gt;http://www.cookbook-r.com/Graphs/Colors_%28ggplot2%29/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the previous lesson we used different themes to customize the plots.
We can change features of the plot like the title, axis labels, axis details and many more aspects.&lt;/p&gt;

&lt;p&gt;To add a title to a plot use the ggtitle command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
		ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So this works, but with the title the axis labels for years and frequency are redundant.
To remove parts of a plot we need to modify the theme settings. A theme is used for all aspects of the plot. where the axis are, what the labels are and so forth. To modify these parts of the plot you need the &lt;code&gt;theme()&lt;/code&gt; command. Inside the theme command you give the arguments &lt;code&gt;axis.title.x= element_blank()&lt;/code&gt; to remove the x axis or &lt;code&gt;legend.position= &amp;quot;bottom&amp;quot;&lt;/code&gt; to put the legend at the bottom of the plot.&lt;/p&gt;

&lt;p&gt;You don&amp;rsquo;t need to remember them all. Use the cookbook for r or search for what you want to change online.&lt;/p&gt;

&lt;p&gt;for example the following code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;axis.title.x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# changing multiple theme settings&lt;/span&gt;
              axis.title.y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# on a temporary basis, only for this plot&lt;/span&gt;
              legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
              strip.text.y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;angle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; vjust &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# make readable&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Produces the following plot (with &lt;code&gt;ggsave(&amp;quot;psychologystudentscities.png&amp;quot;, scale = 1.5)&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/psychologystudentscities.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If you find yourself repeating the same theme changes in multiple plots, you are violating the DRY principle (Do not repeat yourself). ggplot changes are just lists in R, so you can save all the changes to a list and apply that list to your plots. for example:&lt;/p&gt;

&lt;p&gt;This is your plot&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first part is identical as before, but I&amp;rsquo;m a big fan of the minimal theme. It removes all sorts of chart junk.  However, you don&amp;rsquo;t like the way the cities are placed. You want it horizontal.
And you don&amp;rsquo;t like the labels on the axes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;axis.title.x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# changing multiple theme settings&lt;/span&gt;
              axis.title.y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# on a temporary basis, only for this plot&lt;/span&gt;
              legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
              strip.text.y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;angle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; vjust &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# make readable&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is nice, but you want to recreate the same style for many programs and like any person you hate to copy paste everything. It is time for your own theme.&lt;/p&gt;

&lt;p&gt;A ggtheme has every option that you could set defined. So it is possible to create that from scratch, I do not recommend it. The best option is to use a predefined theme and overlay your changes, like you already did above, you first called the theme_minimal() layer and than changed some theme elements.&lt;/p&gt;

&lt;p&gt;In practice:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# This is the theme, it is simply the minimal theme with the &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# modifications added. &lt;/span&gt;
studytheme &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; 
        theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;axis.title.x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# changing multiple theme settings&lt;/span&gt;
              axis.title.y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# on a temporary basis, only for this plot&lt;/span&gt;
              legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
              strip.text.y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;angle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; vjust &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# make readable&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        studytheme&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now with the Law program.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Rechtsgeleerdheid&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Law students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        studytheme&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure class=&#34;half&#34;&gt;
    &lt;img src=&#34;/cleancode/img/lawstudents-clean.png&#34; alt=&#34;image&#34;&gt;
    &lt;img src=&#34;/cleancode/img/psystudents-clean.png&#34; alt=&#34;image&#34;&gt;
    &lt;figcaption&gt;law and psychology students plots&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;summary-and-wrapping-it-up&#34;&gt;Summary and wrapping it up&lt;/h1&gt;

&lt;p&gt;In the previous lessons you learned how to make basic plots, how to select, filter and combine the dplyr verbs. This lesson you combined these skills. Furthermore you can now customize your plots, create a style/theme and apply that theme to your plots. Making it very consistent.&lt;/p&gt;

&lt;p&gt;This was the final introduction to R from SPSS. From now on, you are a R user. You know the basic commands, you can find what you are looking for online or in the help function,  and you are able to generate advanced plots.&lt;/p&gt;

&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;

&lt;p&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:http-www-r-bloggers-com-the-easiest-way-to-learn-ggplot2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:http-www-r-bloggers-com-the-easiest-way-to-learn-ggplot2&#34;&gt;0&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cookbook-r.com/Graphs/&#34;&gt;http://www.cookbook-r.com/Graphs/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;more information about themes &lt;a href=&#34;http://docs.ggplot2.org/dev/vignettes/themes.html&#34;&gt;http://docs.ggplot2.org/dev/vignettes/themes.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;use-examples-ggplot2&#34;&gt;Use examples ggplot2&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;examples of graphics. &lt;a href=&#34;http://r4stats.com/examples/graphics-ggplot2/&#34;&gt;http://r4stats.com/examples/graphics-ggplot2/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Color palettes in R. &lt;http://vis.supstat.com/2013/04/plotting-symbols-and-color-palettes/ &gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;notes&#34;&gt;NOTES&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Tidying was done in a different blog post: &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/blog/2016/02/24/creating-tidy-data.html&#34;&gt;https://rmhogervorst.github.io/cleancode/blog/2016/02/24/creating-tidy-data.html&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;R projects keep you code and workspace setting contained. So you can work with wildly different settings without resetting them between sessions.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;I mean, I had to refer to the name of this blog at least once. But I think it&amp;rsquo;s really important. I always lose track of all the subfiles, so this is much better. and faster.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;It is odd, and hadley wickham, the creator of ggplot and dplyr (which imported the pipe operator) , agrees. But this is the way it is and changing it will break the code of millions of users&amp;hellip;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;There are multiple ways to do this but I would use this &lt;code&gt;length(unique(duo2015_tidy$OPLEIDINGSNAAM.ACTUEEL))&lt;/code&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;No these are the programs in total, because of the &lt;code&gt;distinct()&lt;/code&gt; command. That is the dplyr way of selecting unique cases.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:6&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:7&#34;&gt;Psychology is arguably a study often chosen for lack of ideas: &amp;ldquo; I didn&amp;rsquo;t really know what to choose so I chose something social&amp;hellip;&amp;rdquo;. I&amp;rsquo;m not sure how many students have this attitude.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:7&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:8&#34;&gt;Or at least in the Netherlands babyblue is a common color for males. Red not so much specific for females, but pink would be.&lt;br /&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:8&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:9&#34;&gt;I actually found &lt;code&gt;ggsave(&amp;quot;nameofplot.png&amp;quot;,scale = 1.5)&lt;/code&gt; to work nicely.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Creating a package for your data set</title>
      <link>/cleancode/blog/2016/03/07/content/post/2016-03-07-create-package-for-dataset/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/03/07/content/post/2016-03-07-create-package-for-dataset/</guid>
      <description>

&lt;p&gt;Turning your dataset into a package is very useful for reproducable research. This tutorial is for you, even if you&amp;rsquo;ve never created a package in r.&lt;/p&gt;

&lt;p&gt;Why would you turn your dataset into a package?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;very easy to share&lt;/li&gt;
&lt;li&gt;easy to load (library(name) is easier then &lt;code&gt;load(&amp;quot;path/to/file&amp;quot;)&lt;/code&gt; or &lt;code&gt;data&amp;lt;-read.csv(&amp;quot;path/to/file&amp;quot;)&lt;/code&gt; etc.)&lt;/li&gt;
&lt;li&gt;documentation is part of the package and will never separate from data&lt;/li&gt;
&lt;li&gt;attributes of file remain&lt;/li&gt;
&lt;li&gt;nice and easy introduction to package building&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What do you need to do to create a dataset package:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step 0: locate your dataset, both raw and clean&lt;/li&gt;
&lt;li&gt;step 1: create a new project with Rstudio&lt;/li&gt;
&lt;li&gt;step 2: save the clean file&lt;/li&gt;
&lt;li&gt;step 3: create a description file&lt;/li&gt;
&lt;li&gt;step 4: describe the package with a vignette.*&lt;/li&gt;
&lt;li&gt;step 5: test and build*&lt;/li&gt;
&lt;li&gt;step 6: maintain your dataset if it changes. *&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*: Steps 4-6 are optional, but will help you in practicing for other packages.&lt;/p&gt;

&lt;p&gt;What you need:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Rstudio&lt;/li&gt;
&lt;li&gt;devtools installed&lt;/li&gt;
&lt;li&gt;a dataset that you want to turn into a package&lt;/li&gt;
&lt;li&gt;You need to know how to load a file&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this example I will make a package from my all the times I drank coffee.
I started keeping score because I realized I drank more coffee since working full time.
This is just a file which contains time stamps whenever I drank coffee. I have some missing values, because I sometimes forget, but mostly it&amp;rsquo;s correct.&lt;/p&gt;

&lt;p&gt;This file is not really useful to anybody except maybe me, but a package is quite useful for a variety of analyses. Let&amp;rsquo;s walk through the steps, follow along with your dataset.&lt;/p&gt;

&lt;h1 id=&#34;step-0-locating-your-datasets&#34;&gt;Step 0: locating your datasets&lt;/h1&gt;

&lt;p&gt;You need a dataset on your harddisk&lt;/p&gt;

&lt;h1 id=&#34;step-1-create-a-new-project&#34;&gt;Step 1: Create a new project&lt;/h1&gt;

&lt;p&gt;Create a new project in Rstudio, choose new directory, R package:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/rstudio-project-package-new.PNG&#34; alt=&#34;image of starting a new project&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;naming-the-package&#34;&gt;Naming the package&lt;/h2&gt;

&lt;p&gt;Think about a simple descriptive name with the following tips:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;no spaces     Good: Coffeedata Bad: Coffee data&lt;/li&gt;
&lt;li&gt;no points     good: Coffeeproject Bad: Coffee.Project&lt;/li&gt;
&lt;li&gt;no dashes     Good: datasetCoffee. Bad:  dataset-Coffee&lt;/li&gt;
&lt;li&gt;use lowercase, CoffeeDataSet gets confusing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Naming packages is really hard, it needs to be descriptive and unique. But this is less important if you only share the package with yourself and friends.
think about the name, dataset21really is not descriptive nor helpful for you in the future.&lt;/p&gt;

&lt;h1 id=&#34;step-2-save-the-clean-file&#34;&gt;Step 2: save the clean file&lt;/h1&gt;

&lt;p&gt;Ideally you will want to save both the raw file and the cleaned dataset, with a script (or rmarkdown document) that describes the actions you took to clean the raw file.&lt;/p&gt;

&lt;p&gt;I assume that you are now in the rproject you have just started.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/rstudio-coffeedata-project-empty.PNG&#34; alt=&#34;images of empty project&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Locate the file you want to put in the package. And load it so that it&amp;rsquo;s active in the environment:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/rstudio-loaded-coffeedata.PNG&#34; alt=&#34;image of loaded coffeedata&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then do one of the following (replace coffeedata with your data set&amp;rsquo;s name).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;devtools&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
use_data&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;coffeedata&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use devtools directly&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;devtools&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;use_data&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;coffeedata&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command will create a data folder and put the file in there with the rda extension.&lt;/p&gt;

&lt;h1 id=&#34;step-3-create-a-description-file&#34;&gt;Step 3: create a description file&lt;/h1&gt;

&lt;p&gt;When you started the project a description file and an example function was created:
&lt;img src=&#34;/cleancode/img/rstudio-project-package-prepopulate.PNG&#34; alt=&#34;image of standard rstudio project&#34; /&gt;
Open the description file.&lt;/p&gt;

&lt;p&gt;I just copied this from the excellent package building book &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, please read his website:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every package must have a DESCRIPTION. In fact, it’s the defining feature of a package (RStudio and devtools consider any directory containing DESCRIPTION to be a package). To get you started, devtools::create(&amp;ldquo;mypackage&amp;rdquo;) automatically adds a bare-bones description file. This will allow you to start writing the package without having to worry about the metadata until you need to.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The minimal description will vary a bit depending on your settings, but should look something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/package-description.PNG&#34; alt=&#34;image of package description&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Fill in the meta-data of your package.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Package: name of package
Title: Use Title Case in One Line.
Version: 0.1.0 
Author: who you are
Maintainer: Who to bother when it breaks
Description: What the package does (one paragraph)
Licence: see below
LazyData: TRUE
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;a-license&#34;&gt;a license?&lt;/h3&gt;

&lt;p&gt;You might think that the license is a bit too much for a package you build. But it it&amp;rsquo;s really hard. If you don&amp;rsquo;t give a licence your data is under your copyright and no one can use it.
For datasets a &lt;a href=&#34;https://creativecommons.org/about/cc0/&#34;&gt;CC0 licence&lt;/a&gt; puts the data in the public domain and makes it free to  build upon, enhance and reuse the works for any purposes without restriction under copyright or database law.&lt;/p&gt;

&lt;p&gt;For packages that contain code (most of the packages) other licenses are better: &lt;a href=&#34;http://choosealicense.com/&#34;&gt;http://choosealicense.com/&lt;/a&gt; .&lt;/p&gt;

&lt;h2 id=&#34;a-description-of-the-file&#34;&gt;A description of the file&lt;/h2&gt;

&lt;p&gt;If you look at &lt;code&gt;?mtcars&lt;/code&gt; there is a description of the file. You want to avoid this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/failure-to-describe-package.PNG&#34; alt=&#34;image of r can&#39;t find help file&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The help file is created with&lt;/p&gt;

&lt;p&gt;&lt;code&gt;devtools::use_package_doc()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;this creates a file in the folder &lt;code&gt;R/&lt;/code&gt; . Click on the file and add stuff.
&lt;img src=&#34;/cleancode/img/coffeedata-package-r.PNG&#34; alt=&#34;image of r can&#39;t find help file&#34; /&gt;&lt;/p&gt;

&lt;p&gt;See also this example in &lt;a href=&#34;https://github.com/hadley/babynames/blob/master/R/data.R&#34;&gt;hadley&amp;rsquo;s babyname package&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;step-4-describe-the-package-with-a-vignette&#34;&gt;Step 4: describe the package with a vignette.&lt;/h1&gt;

&lt;p&gt;Use the template from rstudio:
&lt;img src=&#34;/cleancode/img/rstudio-document-dataset.PNG&#34; alt=&#34;rstudio rdocument window&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Give it the name of your dataset&lt;/p&gt;

&lt;p&gt;This is the endresult&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/rstudio-document-dataset2.PNG&#34; alt=&#34;example rstudio rdocument with coffee filled in&#34; /&gt;&lt;/p&gt;

&lt;p&gt;after you changed the files use &lt;code&gt;devtools::document()&lt;/code&gt; to create documents.&lt;/p&gt;

&lt;h1 id=&#34;step-5-test-and-build&#34;&gt;step 5: test and build&lt;/h1&gt;

&lt;p&gt;Then check your package with the check button or &lt;code&gt;devtools::check()&lt;/code&gt;. You will probably need to change some stuff based on the check. The check tries to build your package and checks for common problems. The endresult is in: /packagename.Rcheck/&lt;/p&gt;

&lt;p&gt;If your package is very simple, consisting of only documentation and a datafile, your build will be completed and works.&lt;/p&gt;

&lt;p&gt;Click on build &amp;amp; Reload and try out your new package.&lt;/p&gt;

&lt;h3 id=&#34;how-do-i-share-this-package&#34;&gt;How do I share this package?&lt;/h3&gt;

&lt;p&gt;Once installed you can use the package anytime you like with &lt;code&gt;library(package)&lt;/code&gt; But you might want to share your package with colleagues.&lt;/p&gt;

&lt;p&gt;Build a source or binary version:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.rstudio.com/images/docs/build_pane_build.png&#34; alt=&#34;rstudiowebsite image of sharing &#34; /&gt;&lt;/p&gt;

&lt;p&gt;After you build the source package, a file is created, in my case:
&amp;ldquo;coffeedata_0.1.0.tar&amp;rdquo;. That file is shareble and can be installed on someones computer. They will need to build from source.&lt;/p&gt;

&lt;p&gt;Online: upload your project using git to either Github &lt;a href=&#34;https://github.com/&#34;&gt;https://github.com/&lt;/a&gt; (many people use it, but can&amp;rsquo;t restrict access in free version) or Bitbucket &lt;a href=&#34;https://bitbucket.org/&#34;&gt;https://bitbucket.org/&lt;/a&gt; (close off your project). Or any other sharing service.&lt;/p&gt;

&lt;p&gt;If it&amp;rsquo;s on github everyone can install the file using devtools, in my case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;devtools&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;install_github&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;rmhogervorst/coffeedata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This also works on bitbucket :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;devtools&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;install_bitbucket&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;rmhogervorst/coffeedata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you download the &lt;a href=&#34;https://github.com/RMHogervorst/cleancode/raw/gh-pages/datasets/coffeedata_0.1.0.tar.gz&#34;&gt;source&lt;/a&gt; file from the website and install it manually&lt;/p&gt;

&lt;p&gt;Yes I have created the file for you. Now you all know how many coffee I drank. Even worse, you can do what you like with that information, because it&amp;rsquo;s in the public domain.&lt;/p&gt;

&lt;p&gt;See Further reading to find out more about other ways to share your package.&lt;/p&gt;

&lt;h1 id=&#34;step-6-maintain-your-dataset-if-it-changes&#34;&gt;step 6: maintain your dataset if it changes&lt;/h1&gt;

&lt;p&gt;If your dataset changes, you should update the package.&lt;/p&gt;

&lt;h3 id=&#34;problems&#34;&gt;Problems&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;I don&amp;rsquo;t have a description file or any of the other folders&amp;hellip; or devtools gives me errors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Check if your project has forbidden characters: dots, dashes or spaces.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Rcheck fails!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Check the log. The log is in the folder next to your package &lt;code&gt;/packagename.Rcheck/00check.txt&lt;/code&gt;
in my case my project is in: &lt;code&gt;Projecten\coffeedata&lt;/code&gt; and the logs are in:
 &lt;code&gt;Projecten\coffeedata.Rcheck\00check.txt&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;the folder disappears! I cant check the log.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a good thing, it means your settings are so that non failing builds are removed. Change this in Rstudio Global Options, go to packages, and uncheck the option: &lt;em&gt;clean up output after succesful R CMD check&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://r-pkgs.had.co.nz/package.html&#34;&gt;Hadley Wickham about naming and starting with a package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://r-pkgs.had.co.nz/description.html&#34;&gt;R packages book: What to put in your description file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/200486508-Building-Testing-and-Distributing-Packages&#34;&gt;Rstudio: Building checking and distributing packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Wickham, Hadley. R Packages. First edition. Sebastopol, CA: O’Reilly Media, 2015. &lt;a href=&#34;http://r-pkgs.had.co.nz/&#34;&gt;http://r-pkgs.had.co.nz/&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>From spss to R, part 3</title>
      <link>/cleancode/blog/2016/03/02/content/post/2016-03-02-from-spss-to-r-part3/</link>
      <pubDate>Wed, 02 Mar 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/03/02/content/post/2016-03-02-from-spss-to-r-part3/</guid>
      <description>

&lt;p&gt;In this post we will start with a build-in dataset and some basic ggplot graphics. In the next post we will combine dplyr and ggplot to do awesome stuff with the Dutch University student counts from the previous lessons.&lt;/p&gt;

&lt;p&gt;We will work with the build-in dataset mtcars.&lt;/p&gt;

&lt;p&gt;There are many datasets in r &lt;code&gt;library(help = &amp;quot;datasets&amp;quot;)&lt;/code&gt; but in many examples online you will see the iris and mtcars examples. Find more information about the dataset with &lt;code&gt;?iris&lt;/code&gt;. As you can see it&amp;rsquo;s possible to include metadata about datasets in a package, so in the future you might want to share your data in the form of a package with all your code included.&lt;/p&gt;

&lt;p&gt;But first back to the mtcars dataset and then to graphing &lt;em&gt;(is that a word?)&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;the-mtcars-dataset&#34;&gt;The mtcars dataset&lt;/h2&gt;

&lt;p&gt;According to &lt;code&gt;?mtcars&lt;/code&gt;: &amp;ldquo;The data was extracted from the 1974
Motor Trend US magazine, and comprises fuel consumption and 10 aspects of
automobile design and performance for 32 automobiles (1973–74 models).&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The mtcars documentation gives us an example of displaying the mtcars information:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;pairs&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; main &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;mtcars data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# this is one plot next is an other&lt;/span&gt;
coplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mpg &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; disp &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;cyl&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       panel &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; panel.smooth&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; rows &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;plotting-graphs-in-r&#34;&gt;Plotting graphs in R&lt;/h2&gt;

&lt;p&gt;R has three plotting systems, each based on different ideas. The base plot system is very fast and is very useful for quick views of your data. But you need to tinker a lot to make plots nicer.  Then there is the lattice system &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. Which is probably very useful, but I mostly use ggplot. For you ggplot might be THE reason to come to R.&lt;/p&gt;

&lt;p&gt;To make the most of ggplot, &lt;em&gt;and not go insane&lt;/em&gt;, you will need to understand the underlying principles. the gg in ggplot stand for the grammar of graphics. A concept based on the work of Wilkinson and Wills &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, and put into a graphics package by Hadley Wickham &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:this-is-quite-a-good-read&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:this-is-quite-a-good-read&#34;&gt;0&lt;/a&gt;&lt;/sup&gt;.
The most important thing to realize is this:
&lt;img src=&#34;/cleancode/img/graphs-have-layers.png&#34; alt=&#34;ogres have layers image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Every graph consists of the basic data, some transformations to axes, title information and the representation of the data. In ggplot you have to specify the data, and the aesthetics (some mapping of the position of x, and y, colours and shapes). Furthermore you have to tell ggplot what type of chart you want. Bars, lines, and points are all examples of geometric objects or geoms for short.&lt;/p&gt;

&lt;h2 id=&#34;example-a-basic-scatter-plot-in-ggplot&#34;&gt;Example: a basic scatter plot in ggplot&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
str&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mtcars&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# just to show you the variables in mtcars.&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wt&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_point&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which will look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;{{ site.github.url}} /images/ggplot2-simple-scatterplot.png&#34; alt=&#34;ggplot(data = mtcars, aes(x= mpg, y= wt) ) + geom_point()&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We called a ggplot element, specified the data, then the aesthetics so that miles per gallon (mpg) is on the x axis and weight (wt) on the Y axis.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;select the first part ggplot(data = mtcars, aes(x= mpg, y= wt) ) and execute ctrl/cmd-r&lt;/li&gt;
&lt;li&gt;what happens?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We need to tell ggplot what kind of layer to put on top. In this case we&amp;rsquo;ve added points. Also note the + sign. In dplyr we used a pipe (%&amp;gt;%) operator to link stuff together, within ggplot we literally add layers together with the + sign.&lt;/p&gt;

&lt;p&gt;Now we add some color&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wt &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We&amp;rsquo;ve specified a color in the point layer. But much more effective is to use color as an extra dimension in your plots.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  wt &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gear&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; 
&lt;span class=&#34;c1&#34;&gt;# note that we don&amp;#39;t have to tell arguments in functions what they are.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# according to ?ggplot    :&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ggplot(data = NULL, mapping = aes(), ..., environment = parent.frame())&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# the first argument is data, then follows the mapping with aes&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ?aes&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# aes(x, y, ...)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# and the first argument of aes is always x and the second is y.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# you CAN change the order of arguments, but then you WILL need to&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# explicitly call the arguments:&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;wt&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;mpg &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gear&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/cleancode/img/ggplot2-simple-scatterplot-with-factor.png&#34; alt=&#34;ggplot(data = mtcars, aes(mpg,  wt )) + geom_point(aes(color = as.factor(gear))) &#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Did you check that lines 1 and 11 had the same output?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now I told ggplot that gear was a factor. If your dataset is clean and nicely formatted you don&amp;rsquo;t have to do this. However this dataset has only numeric values, while some columns  are actually factors.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;repeat the call from line 1 but change the geom_point with: geom_point(aes(color = gear))&lt;/li&gt;
&lt;li&gt;What did just happen?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For numeric variables, ggplot takes one color and changes the gradient from lowest to highest level of that variable. The colors for factor variables are maximaly distinct so you can identify groups easier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Try the following code
&lt;code&gt;ggplot(data = mtcars, aes(mpg,  wt )) + geom_point(color = gear)&lt;/code&gt;
and compare with:
&lt;code&gt;ggplot(data = mtcars, aes(mpg,  wt )) + geom_point(aes(color = gear))&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;What happened? Why didn&amp;rsquo;t the first work?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;but this one does:&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;ggplot(data = mtcars, aes(x= mpg, y= wt )) + geom_point( color = &amp;quot;red&amp;quot; )&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will have to think about the aes() command as something that depends on you data. A way to transform the variables from your data into graphic elements. But if you want to add a color or change the size of things that do not depend on your data, you must tell it seperately to the geom.&lt;/p&gt;

&lt;p&gt;So I said layers. let&amp;rsquo;s add layers.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wt&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; 
        geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gear&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_smooth&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;method &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lm&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# a linear model Y ~ x smoothing&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example there are three layers, a base layer, points and a smoothing
on top of the points.
As you add layers, each layer has their elements specified by you
or inherits them from the base element &lt;code&gt;ggplot()&lt;/code&gt;.
In the above example &lt;code&gt;geom_smooth()&lt;/code&gt; inherits the part [ aes(x, y) ] from
 &lt;code&gt;ggplot(data = mtcars, aes(x= mpg, y= wt))&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&#34;half&#34;&gt;
    &lt;img src=&#34;/cleancode/img/ggplot2-simple-scatterplot-with-factor-andsmoothing.png&#34; alt=&#34;ggplot geom_point and geom smooth method=lm&#34;&gt;
    &lt;img src=&#34;/cleancode/img/ggplot2-simple-scatterplot-with-factor-andsmoothing-geargroups.png&#34; alt=&#34;ggplot with group= as.factor gear geom_point geom smooth&#34;&gt;
    &lt;figcaption&gt;adding:  &#39;group = as.factor(gear)&#39; to aes() of ggplot leads to seperate smoothings per gear&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wt&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_smooth&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;method &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lm&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This doesn&amp;rsquo;t work, because the smoothing geom doesn&amp;rsquo;t know what data or aes to use. But if we specify them, it will work.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wt&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_smooth&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wt&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; method &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lm&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will work through a few more examples, but see Further reading for more examples of graph types and resources with lists and lists of plots and how to make them.&lt;/p&gt;

&lt;h2 id=&#34;example-2-a-bargraph&#34;&gt;Example 2: a bargraph&lt;/h2&gt;

&lt;p&gt;A bargraph has only one aesthetic mapping:
&lt;code&gt;ggplot(data = mtcars, aes(as.factor(cyl))) + geom_bar(stat =&amp;quot;count&amp;quot;)&lt;/code&gt;
&lt;img src=&#34;/cleancode/img/ggplot2-simplebargraph.png&#34; alt=&#34;bargraph mtcars&#34; /&gt;&lt;/p&gt;

&lt;p&gt;only the x aesthetic is specified, the geom is a bar (see &lt;code&gt;?geom_bar&lt;/code&gt;) and we specified that it should perform a statistic on the data. In this case it just counts the number of occurrences. But if your data is already in frequency you could use `geom_bar(stat = &amp;ldquo;identity&amp;rdquo;). For example&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dat&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        Name &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hork&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;dork&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bork&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
        Frequency &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# a very silly dataframe&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;Name&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; Frequency&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_bar&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;stat &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;identity&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/cleancode/img/ggplot2-simplebargraph-fictionaldata.png&#34; alt=&#34;ggplot(dat, aes(Name, Frequency)) + geom_bar(stat =&amp;quot;identity&amp;quot;)&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;example-3-boxplots-violingplots-with-points-behind&#34;&gt;Example 3: boxplots, violingplots with points behind&lt;/h2&gt;

&lt;p&gt;Now a violinplot. The chickwts dataset is a small dataset of weights of chicks (baby chickens, not human ladies), with the diet they received.&lt;br /&gt;
By now you now the drill: the data is chickwts, the aes are feed and weight. Then we add a boxplot geom. See &lt;code&gt;?geom_boxplot&lt;/code&gt; for more info about changing parameters. I have displayed a violin plot, which displays more information about the underlying distribution.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;str&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chickwts&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chickwts&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;feed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_boxplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chickwts&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;feed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_violin&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/cleancode/img/ggplot2-chickwts-violin.png&#34; alt=&#34;ggplot violinplot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Boxplots are nice, but you lose information about the middle of the distribution. So let&amp;rsquo;s plot the real distribution. &lt;code&gt;ggplot(chickwts, aes(feed, weight)) + geom_point()&lt;/code&gt; This doesn&amp;rsquo;t really help us, what about all the chicks with the same weight and same feed? The jitter geom helps you out.
&lt;code&gt;ggplot(chickwts, aes(feed, weight)) + geom_jitter()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The jitter function adds some noise to points to separate the individual points.
let&amp;rsquo;s combine and see what looks best&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chickwts&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;feed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_boxplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_jitter&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chickwts&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;feed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_boxplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_point&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chickwts&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;feed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_violin&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_jitter&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/cleancode/img/ggplot2-chickwts-violin-points.png&#34; alt=&#34;chickwts violin and points on top&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I like the last one best, but for different data different visualizations are better.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;cyl&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_boxplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_point&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;cyl&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_violin&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_jitter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;am&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;customization&#34;&gt;Customization&lt;/h2&gt;

&lt;p&gt;Most simple plots in ggplot2 look quite good from the start, it&amp;rsquo;s a credit to Hadley Wickham that he chose ggplot2&amp;rsquo;s defaults so well. However, there are many ways to custimize your plots. Every element can change colour&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, shape, etc. But if you like to change things in multiple plots you should try to change the theme. Themes change multiple things at once. For instance:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;g &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;cyl&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_violin&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_jitter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;am&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; 
&lt;span class=&#34;c1&#34;&gt;# I saved the entire thing to a variable.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# if you select the g and press ctrl/cmd r it will display the plot again.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# even better the saved object behaves just as before. We can add things to it.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# try the following things&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_bw&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_dark&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# the addition doesn&amp;#39;t stick untill you save it to a variable&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_void&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is relatively easy to change parts of themes, or to create a whole new theme. But quite easy is also the ggtheme package, see their website [5].&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;install.packages&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ggthemes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggthemes&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_wsj&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_tufte&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# very clean theme based on edward tufte &amp;#39;s ideas about graphs&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_base&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_excel&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# you will love this, especially the description&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_fivethirtyeight&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/cleancode/img/ggplot2-themetufte-mtcars-violin-points-color.png&#34; alt=&#34;ggthemes example with tufte&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So now you know a few graphics and the basics of ggplot use. In the next lesson we will combine dplyr and ggplot to filter, slice and dice through a dataset. Hopefully we will get some insights!&lt;/p&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.stat.ubc.ca/~jenny/STAT545A/block90_baseLatticeGgplot2.html&#34;&gt;Overview of r graphics on stat.ubc.ca, with tons of resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lmgtfy.com/?q=r+lattice+base+ggplot2&#34;&gt;a google search with &amp;ldquo;r lattice base ggplot2&amp;rdquo; gives me 26900 results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cookbook-r.com/Graphs/Bar_and_line_graphs_%28ggplot2%29/&#34;&gt; If you ever need to know any sort of plot, use the cookbook. bookmark it &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://zevross.com/blog/2014/08/04/beautiful-plotting-in-r-a-ggplot2-cheatsheet-3/&#34;&gt;beautiful graphs cheatcheat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shiny.stat.ubc.ca/r-graph-catalog/&#34;&gt;R graph catalog an interactive display of graphs including the code in ggplot2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;p&gt;[5]: ggthemes website &lt;a href=&#34;https://cran.r-project.org/web/packages/ggthemes/vignettes/ggthemes.html&#34;&gt;https://cran.r-project.org/web/packages/ggthemes/vignettes/ggthemes.html&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Explanation of lattice system and trellisplots on statmethods.net &lt;a href=&#34;http://www.statmethods.net/advgraphs/trellis.html&#34;&gt;http://www.statmethods.net/advgraphs/trellis.html&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;Wilkinson, Leland, and Graham Wills. The Grammar of Graphics. 2nd ed. Statistics and Computing. New York: Springer, 2005.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;Did you notice that both color and colour are allowed in ggplot? In  the dplyr package both summarize and summarise work.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tidying your data</title>
      <link>/cleancode/blog/2016/02/24/content/post/2016-02-24-creating-tidy-data/</link>
      <pubDate>Wed, 24 Feb 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/02/24/content/post/2016-02-24-creating-tidy-data/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;To make analyses work we often need to change the way files look.
Sometimes information is recorded in a way that was very efficient for input but not workable for your analyses. In other words, the data is messy and we need to
make it tidy.&lt;/p&gt;

&lt;p&gt;Tidy data means &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Each variable forms a column.&lt;/li&gt;
&lt;li&gt;Each observation forms a row.&lt;/li&gt;
&lt;li&gt;Each type of observational unit forms a table.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Today we will work with the DUO dataset about the number of students per program in the past 5 years &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; which was used in lesson 2 of &lt;a href=&#34;{{ site.github.url }}/blog/2016/02/22/from-spss-to-r-part2.html&#34;&gt;from-spps-to-r&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The raw datafile in r looks like this:
&lt;img src=&#34;/cleancode/img/tidy-duo-before.PNG&#34; alt=&#34;messy data duo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Which is efficient in space, but not useful for analyses. For many analyses you will need to refer to multiple columns. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;is the total number of people (both males and females) in 2012 different from the total in 2015 in the regular bachelor propedeuses?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The format of the raw file is  also called the wide format.&lt;br /&gt;
What we want is a long format like this:
&lt;img src=&#34;/cleancode/img/tidy-duo-endresult.PNG&#34; alt=&#34;tidy data duo&#34; /&gt;
Where every observation (the number of people in the group) has it&amp;rsquo;s own row.&lt;/p&gt;

&lt;p&gt;What you need to know before we start:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the dplyr package, the pipe (%&amp;gt;%) operator, see&lt;a href=&#34;{{ site.github.url }}/blog/2016/02/22/from-spss-to-r-part2.html&#34;&gt;from-spss-to-r-2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;subsetting, data frames, basic manipulation of data&lt;/li&gt;
&lt;li&gt;how to install packages, see &lt;a href=&#34;{{ site.github.url }}/blog/2016/02/20/from-spss-to-r-part1.html&#34;&gt;from-spss-to-r-1&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;preparation&#34;&gt;Preparation&lt;/h3&gt;

&lt;p&gt;Set up a project or clean your workspace in r. Follow the instructions by copying the code or see the script &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/scripts/tidyr-on-duo-data.R&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# we will use the tidy r package&lt;/span&gt;
install.packages&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;tidyr&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;readr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;tidyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
link&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://www.duo.nl/open_onderwijsdata/images/01.%20Ingeschrevenen%20wo-2015.csv&amp;#34;&lt;/span&gt;
ingeschreven_wo_2015&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;read_csv2&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;link&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; trim_ws &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#uses the ; notation therefore csv2&lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ingeschreven_wo_2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we look at the tail end of the data.frame we see some weird cases, some are empty and some are  summary variables.&lt;/p&gt;

&lt;h2 id=&#34;tasks&#34;&gt;Tasks&lt;/h2&gt;

&lt;p&gt;To get to tidy data we need to do a few things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;remove final two rows that contain whitespaces and totals&lt;/li&gt;
&lt;li&gt;shape the data into frequencies per year per gender&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;removing-the-final-two-rows&#34;&gt;Removing the final two rows&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ingeschreven_wo_2015&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2415&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2417&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;  
&lt;span class=&#34;c1&#34;&gt;#show the bottom part of the data.frame &lt;/span&gt;
duo2015&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;ingeschreven_wo_2015&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2416&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2417&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# compare:&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;tail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ingeschreven_wo_2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# with&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;tail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;shape-the-data-into-frequencies-per-year-per-gender&#34;&gt;Shape the data into frequencies per year per gender&lt;/h3&gt;

&lt;p&gt;Check the description in the vignette to see some examples and use cases of tidyr.  &lt;code&gt;vignette(&amp;quot;tidy-data&amp;quot;)&lt;/code&gt;
First we shape the file from  wide to long format, the columns 13 - 22
contain both year and gender. Which I would like to have seperated.
In this first step we gather all the data from the columns 13 to 22
and put turn them into cases.
I think this is equivalent to Restructure in SPSS?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; gather&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; frequency&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; View&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you look at this temporary file you see that it contains 24150 cases  and only 14 columns. Compared to the 2415 cases and 22 columns in the original set.&lt;br /&gt;
Unfortunately the 13th column contains both year and gender. Let&amp;rsquo;s fix this.&lt;/p&gt;

&lt;h3 id=&#34;separating-the-year-gender-column&#34;&gt;Separating the year-gender column&lt;/h3&gt;

&lt;p&gt;Again this is temporary file. Only when we are happy with the endresult wil we save the file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; gather&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; frequency&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        separate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;year&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;gender&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        arrange&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`OPLEIDINGSNAAM ACTUEEL`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; gender&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;  
		&lt;span class=&#34;c1&#34;&gt;# sort on name, year gender&lt;/span&gt;
        View &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That works, let&amp;rsquo;s create a new datafile. The commands remain the same but we assign the entire thing to a new name:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;duo2015  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        gather&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        separate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;YEAR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;GENDER&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        arrange&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`OPLEIDINGSNAAM ACTUEEL`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We left out the View command, because that would show it to the Viewer, but we need a new data.frame. The last command in the chain, &lt;code&gt;arrange&lt;/code&gt; , does not really change the file, but orders the rows in a different way.
The next step could be saving it to a new csv file. But something is bothering me.&lt;/p&gt;

&lt;h2 id=&#34;cleaning-up-some-variablenames&#34;&gt;Cleaning up some variablenames&lt;/h2&gt;

&lt;p&gt;Some of the variable names (columnnames) contain spaces, for example: OPLEIDINGSNAAM ACTUEEL. we can access those variables with the backtick: &lt;code&gt;duo2015_tidy$`OPLEIDINGSNAAM ACTUEEL`&lt;/code&gt;  but it&amp;rsquo;s not pretty, often confusing and prone to mistakes. Let&amp;rsquo;s replace the columnnames with a bar in place of the space.First the command then the explanation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;gsub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The command &lt;code&gt;names()&lt;/code&gt;  returns the variablenames, the command gsub uses pattern recognition and  replacement (for more info see &lt;code&gt;?gsub&lt;/code&gt;).
The first argument of gsub is what to recognize, (&amp;rdquo; &amp;ldquo;) meaning spaces
the second argument is the replacement. I chose a bar (&amp;ldquo;-&amp;rdquo;), but nothing (&amp;ldquo;&amp;rdquo;) or a dot (&amp;ldquo;.&amp;rdquo;) would work equaly well.
The third argument is the vector to apply this principle on, the names of the variables in this case. Finally we assign the endresult of that command to names(duo2015).&lt;/p&gt;

&lt;p&gt;So in one line we replaced the spaces in the names of the variables and assigned the new columnnames.&lt;/p&gt;

&lt;p&gt;Then save it to a file:
&lt;code&gt;write_csv(duo2015_tidy, &amp;quot;files/duo2015_tidy.csv&amp;quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That&amp;rsquo;s it, we&amp;rsquo;re done. Your data is tidy. and ready for analyses or plots.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Wickham, Hadley. “Tidy Data.” Journal of Statistical Software 59, no. 10 (2014). doi:10.18637/jss.v059.i10.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;&lt;a href=&#34;https://www.duo.nl/open_onderwijsdata/databestanden/ho/Ingeschreven/wo_ingeschr/Ingeschrevenen_wo1.jsp&#34;&gt;https://www.duo.nl/open_onderwijsdata/databestanden/ho/Ingeschreven/wo_ingeschr/Ingeschrevenen_wo1.jsp&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>From spss to R, part 2</title>
      <link>/cleancode/blog/2016/02/22/content/post/2016-02-22-from-spss-to-r-part2/</link>
      <pubDate>Mon, 22 Feb 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/02/22/content/post/2016-02-22-from-spss-to-r-part2/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;In this lesson we will open a .sav file in Rstudio and manipulate the data.frame. We will select parts of the file and create some simple overviews. First time with R? No problem, see lesson &lt;a href=&#34;{{ site.github.url }}/blog/2016/02/20/from-spss-to-r-part1.html#introduction&#34; title=&#34;From spss to R, part 1&#34;&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;toc
{:toc}&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;download-a-sav-spss-file&#34;&gt;Download a .sav (SPSS) file&lt;/h2&gt;

&lt;p&gt;I downloaded the following dataset from DUO (Dienst uitvoering onderwijs): [&lt;strong&gt;Aantal wo ingeschrevenen (binnen domein ho)&lt;/strong&gt;][3].
This dataset has a &lt;span title=&#34;creative commons version 0&#34;&gt; cc0 &lt;/span&gt; declaration, which means it is in the public domain and we can do anything we want with this &lt;span title=&#34;thank you Dutch Goverment!&#34; &gt; file. &lt;/span&gt;
More information about the file can be found in the &lt;a href=&#34;https://www.duo.nl/open_onderwijsdata/images/Toelichting%2001.%20Ingeschrevenen%20wo.pdf&#34; title=&#34;all in Dutch I&#39;m afraid&#34;&gt;Toelichting.pdf&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;UPDATE 2017-08-23: DUO HAS UPDATED THEIR SITE, BREAKING EVERYTHING. THIS IS CURRENLTY THE DOWNLOAD PAGE: &lt;a href=&#34;https://www.duo.nl/open_onderwijsdata/databestanden/ho/ingeschreven/wo-ingeschr/ingeschrevenen-wo1.jsp&#34;&gt;https://www.duo.nl/open_onderwijsdata/databestanden/ho/ingeschreven/wo-ingeschr/ingeschrevenen-wo1.jsp&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We can already work with this file, because it is in an open format, but for this exercise I will transform it to a .sav file. &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/scripts/dplyr-example-duo.R&#34; title=&#34;Github example of csv -&amp;gt; .sav with haven&#34;&gt;See the transformation here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Download the .sav &lt;a href=&#34;{{ site.github.url }}/datasets/ingeschrevenwo2015.sav&#34;&gt;file&lt;/a&gt; to start. Do remember where you put the file, you will need it later.
Or let R download the file, even better for reasons of &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/tags/#reproducibility&#34; title=&#34;all posts about repro-research&#34;&gt;reproducability&lt;/a&gt;.
Consider starting a new &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/tags/#rproject&#34; title=&#34;with a rProject you files will be more organized&#34;&gt;project&lt;/a&gt; for this example.&lt;/p&gt;

&lt;h1 id=&#34;opening-the-file-in-rstudio&#34;&gt;Opening the file in Rstudio&lt;/h1&gt;

&lt;p&gt;Fire up your trusty rstudio.&lt;/p&gt;

&lt;p&gt;You will need the following packages:
haven, dplyr. Click on install:
&lt;img src=&#34;/cleancode/img/installing-packages-rstudio.PNG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;and fill in the names, or type `install.packages(&amp;ldquo;haven&amp;rdquo;, &amp;ldquo;dplyr&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;Follow the description below or look at the complete script at:&lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/scripts/dplyr-example-duo.R&#34;&gt;github.com/RMHogervorst/cleancodeexamples&lt;/a&gt;. The script and this page are more or less the same (spelling might be better here ;p ).&lt;/p&gt;

&lt;h3 id=&#34;opening-the-spss-file-and-getting-it-in-r&#34;&gt;Opening the SPSS file and getting it in R&lt;/h3&gt;

&lt;p&gt;{% highlight r linenos %}&lt;/p&gt;

&lt;h1 id=&#34;necessary-packages&#34;&gt;necessary packages: ####&lt;/h1&gt;

&lt;p&gt;library(haven)
library(dplyr)&lt;/p&gt;

&lt;h1 id=&#34;location-of-the-datafile-online&#34;&gt;location of the datafile online&lt;/h1&gt;

&lt;p&gt;link &amp;lt;- &amp;ldquo;&lt;a href=&#34;https://cdn.rawgit.com/RMHogervorst/cleancode/gh-pages/datasets/duo2016.sav&amp;quot;&#34;&gt;https://cdn.rawgit.com/RMHogervorst/cleancode/gh-pages/datasets/duo2016.sav&amp;quot;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;update-2017-08-23-this-is-a-new-spss-file-from-2016-data&#34;&gt;UPDATE 2017-08-23 THIS IS A NEW SPSS FILE FROM 2016 DATA.&lt;/h1&gt;

&lt;h1 id=&#34;load-the-sav-file-into-r-using-the-link&#34;&gt;load the .sav file into R using the link&lt;/h1&gt;

&lt;p&gt;wo2015 &amp;lt;- read_sav(link)
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;So we activated the necessary packages, saved a link to the datafile, told the &lt;code&gt;read_sav()&lt;/code&gt; command where to find the file, and finally assigned the output of the command to a name &lt;code&gt;wo2015&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;exploration-of-the-data-frame-in-base-r&#34;&gt;Exploration of the data frame in base-R&lt;/h3&gt;

&lt;p&gt;The following commands are very often the first things you will use when you get your hands on a new dataset.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;str&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# str is short for structure&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# what are the columnsnames?&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# create a table&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;sapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;#shows the top part of the data, &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# there is also a tail() function you could try.&lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;SOORT.INSTELLING&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Rstudio interface already gives you all sorts of information. Just click on all the things in the environment window.
the structure command &lt;code&gt;str()&lt;/code&gt; displays in your console, and is identical to what Rstudio tells you if you click the blue button in front of the data.frame.
The table command is very useful, but when there are many values, you can get a cleaner look by &lt;code&gt;View(table())&lt;/code&gt;. The &lt;code&gt;sapply()&lt;/code&gt; command is one you might use a lot in the future, but know now that it repeats a function over the columns of your data.frame and gives you a simple result back.
Most of the columns are of class character, some are numeric, and two are of the class &amp;ldquo;labelled&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;When we used the command &lt;code&gt;View(table(wo2015$SOORT.INSTELLING))&lt;/code&gt; there were actually three commands in sequence.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;take column SOORT.INSTELLING from dataframe wo2015: &lt;code&gt;wo2015$SOORT.INSTELLING&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;create a table of that: &lt;code&gt;table()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;put the result into the Viewer: &lt;code&gt;View()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When looking at the endresult from the last command, you can see the frequencies of the types of SOORT INSTELLING (type of university).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do the same thing (display a table of frequencies) with INSTELLINGSNAAM.ACTUEEL (name of university)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How many universities are there?&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;some-haven-and-spss-specific-things&#34;&gt;Some Haven and SPSS specific things&lt;/h3&gt;

&lt;p&gt;As you know SPSS cannot work with factor (nominal) values.
You have to tell SPSS that the variable is a nominal variable
and you have to create numbered values, with a label assigned to the values &lt;em&gt;(3 = male, 4 = female)&lt;/em&gt;.
When you import a .sav file into R that information can get lost. But on the other hand you might want to use the numbered information. As an compromise the haven package imports the numbers and the labels. So can we find the labels?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kp&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# no, that just tells us that it&amp;#39;s labelled. &lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;attributes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# the command attributes gives you back all the metadata&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see the labels and numbers. 1 = deeltijd (part time education),
2 = duaal (), 3 is voltijd (full time)
The attributes command works on everything try: &lt;code&gt;attributes(wo2015[1,2])&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So we can display the labels with number. but we would rather use that information
in R. R has no problem with nominal variables. And furthermore you won&amp;rsquo;t make
mistakes about which form of eduction your talking about.&lt;/p&gt;

&lt;p&gt;the haven package has a function as_labeled. So let&amp;rsquo;s make the OPLEIDINGSVORM column a bit more informative:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;as_factor&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now look back at wo2015
Nothing has changed!
That&amp;rsquo;s right, you need to assign the result of the operation back to a column&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; as_factor&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Do the same thing to OPLEIDINGSFASE.ACTUEEL&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;data-manipulation-with-dplyr&#34;&gt;data manipulation with dplyr&lt;/h2&gt;

&lt;p&gt;Data manipulation was sometimes hard with r. However the &lt;a href=&#34;https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html&#34; title=&#34;Dplyr is a package for manipulating dataframes. this link is an introduction by the creator&#34;&gt;dplyr&lt;/a&gt; package changed everything.&lt;/p&gt;

&lt;h2 id=&#34;dplyr-functions&#34;&gt;dplyr Functions&lt;/h2&gt;

&lt;p&gt;There are 7 &amp;lsquo;verbs&amp;rsquo; that do all the work.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;filter() (and slice())
arrange()
select() (and rename())
distinct()
mutate() (and transmute())
summarise()
sample_n() and sample_frac()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Filter filters rows, select selects columns, distinct is a variant of unique and mutate creates new variables. These verbs are tools, the plyrs of a dataframe. Very generic tools that help you select and filter your data.
All the verbs have the same arguments: first argument = dataframe, the next arguments are for the function.&lt;/p&gt;

&lt;p&gt;But don&amp;rsquo;t believe me on my word, let&amp;rsquo;s get to work.&lt;/p&gt;

&lt;h3 id=&#34;select&#34;&gt;SELECT&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;SELECT (dataframe, variablename1, variablename2, etc)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Select is used to select variables (columns) in your data frame.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSVORM2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;j2012.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; j2013.MAN &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have selected 4 variables. as you can see in the output. It also says: Source: local data frame [2,417 x 4]  meaning 2417 cases and 4 variables.&lt;/p&gt;

&lt;h3 id=&#34;filter&#34;&gt;FILTER&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;FILTER (dataframe, ways to filter)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Filter selects cases (rows of the dataframe).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Limburg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The endresult is a data.frame [91 x 24] with all columns but
 with only the cases in the Limburg province&lt;/p&gt;

&lt;h3 id=&#34;combining-filter-and-select&#34;&gt;combining FILTER and SELECT&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Limburg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;PROVINCIE&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSVORM2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;j2012.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; j2013.MAN &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I will show you a more readable form later on, but this works.
The data frame has the 91 cases from the filter action and the 4 columns from the select action. This even works the other way around:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSVORM2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;j2012.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; j2013.MAN &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Limburg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But not always:
&lt;code&gt;filter(select(wo2015, OPLEIDINGSVORM2,j2012.MAN, j2013.MAN ), PROVINCIE == &amp;quot;Limburg&amp;quot;)
&lt;/code&gt; will not work (try it).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Why not?&lt;/em&gt;
The different functions accept data.frames as input and give a data.frame as output. The data.frame from the &lt;strong&gt;select&lt;/strong&gt; action does not contain the column PROVINCIE. Therefore the &lt;strong&gt;filter&lt;/strong&gt; function can&amp;rsquo;t select on that variable.&lt;/p&gt;

&lt;h3 id=&#34;arrange-distinct&#34;&gt;ARRANGE &amp;amp; DISTINCT&lt;/h3&gt;

&lt;p&gt;The functions &lt;code&gt;arrange()&lt;/code&gt; and &lt;code&gt;distinct()&lt;/code&gt; sort the data and select the unique values from a data frame:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;arrange&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; GEMEENTENUMMER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# data frame [2,417 x 24] all cases, all variables.&lt;/span&gt;
distinct&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; GEMEENTENAAM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# data frame [16 x 24]  (all the variables, only unique gemeentenamen)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;mutate&#34;&gt;MUTATE&lt;/h3&gt;

&lt;p&gt;MUTATE(dataframe, name_of new variable = action).
Mutate creates new variables from other variables.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s find the difference between 2015 and 2014 in males.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mutate(wo2015, from14to15M = j2015.MAN - j2014.MAN)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ok, but what happened?
We can&amp;rsquo;t see the new variable from14to15M, it is there because the output says:
&lt;code&gt;Variables not shown: CROHO.ONDERDEEL (chr), [......] from14to15M (dbl)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s see.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;test&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;test&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Scroll to the end of the viewer or use &lt;code&gt;test$from14to15M&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An other way would be to select the variables first.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But these nested commands become complicated very fast. You lose the overview of your actions. But since 2014 we can use a new way to type commands in R.&lt;/p&gt;

&lt;h1 id=&#34;piping-chaining-and-dplyr&#34;&gt;Piping / chaining and dplyr&lt;/h1&gt;

&lt;p&gt;With the pipe operator (%&amp;gt;%) you can chain the commands together.
The functions work the same but it is much easier to read.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#from:&lt;/span&gt;
select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# to:&lt;/span&gt;
wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# or even better&lt;/span&gt;
wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# much easier to read! &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The pipe operator puts the data.frame from the left side as first argument in the right side.&lt;/p&gt;

&lt;p&gt;Read the pipe operator as THEN:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# take the dataframe, THEN mutate                       THEN select these variables.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Take the data.frame, THEN mutate                       THEN select these variables.
The commands follow in the way that you use them instead of nested in each other.&lt;/p&gt;

&lt;h3 id=&#34;summarize-summarise-both-work&#34;&gt;SUMMARIZE / SUMMARISE (both work)&lt;/h3&gt;

&lt;p&gt;Use summarize to apply functions over groups of cases. For instance the mean of an entire column.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;summarize&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# if one value is missing (NA)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# there is no mean value. &lt;/span&gt;
summarize&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# this way we remove the missings&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But perhaps you would like to know the mean number of students per opleidingsfase?
Summarize works with &lt;code&gt;group_by&lt;/code&gt;, let&amp;rsquo;s use that pipe operator again:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSFASE.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Chaining can make things very easy.
Let&amp;rsquo;s take numbers in zuid-holland only&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zuid-Holland&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# R will continue on the following line&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSFASE.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;# It also helps in readability&lt;/span&gt;
        summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Grouping can be done on multiple levels and with multiple arguments:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zuid-Holland&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Limburg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# | means or&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSFASE.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# That was an OR operator, there is also an AND.&lt;/span&gt;
wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zuid-Holland&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;  
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; number &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# n() gives a count&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;summarize&lt;/code&gt; command can make multiple columns (remember that every output is also a dataframe).&lt;/p&gt;

&lt;p&gt;Finally a filter action with numbers. Just to show you that that works as well.
We start with all the cases, &lt;strong&gt;THEN&lt;/strong&gt; only take the cases (rows) where variable j2011.VROUW has less or equal to 10, &lt;strong&gt;THEN&lt;/strong&gt; take only the propedeuse cases &lt;strong&gt;THEN&lt;/strong&gt; filter the cases with more then 10 cases and &lt;strong&gt;THEN&lt;/strong&gt; group the cases by provincie, and &lt;strong&gt;THEN&lt;/strong&gt; count the number of cases per province.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2011.VROUW &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# so less or equal to 10 women in 2011&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# multipe filters? no problem.&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.VROUW &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# more then 10 in 2015. &lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarize&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;number_of_programs &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In other words:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In every province, how many programs had less then 10 women in 2011 and more then 10 in 2015?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;review&#34;&gt;Review&lt;/h1&gt;

&lt;p&gt;In this lesson you have learned to open .sav files with haven,
how to change labelled values from the Haven package, and worked with most of the dplyr commands.&lt;/p&gt;

&lt;h2 id=&#34;next-time&#34;&gt;Next time:&lt;/h2&gt;

&lt;p&gt;dplyr is also called the grammar of data manipulation.
In the next lesson we will take on the grammar of graphics with ggplot2,
see you then.&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;p&gt;[3]: &lt;https://www.duo.nl/open_onderwijsdata/databestanden/ho/Ingeschreven/wo_ingeschr/Ingeschrevenen_wo1.jsp &gt; &amp;ldquo;Because this was the first dataset I found, but this dataset is actually useful for me in my work as well&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h3&gt;

&lt;p&gt;The following introduction is better than I could have made:&lt;/p&gt;

&lt;p&gt;and here is some background information&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html&#34;&gt;https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>From spss to R, part 1</title>
      <link>/cleancode/blog/2016/02/20/content/post/2016-02-22-from-spss-to-r-part1/</link>
      <pubDate>Sat, 20 Feb 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/02/20/content/post/2016-02-22-from-spss-to-r-part1/</guid>
      <description>

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;This whole blog is devoted to R and clean coding in R. But what if you want to start with R? There are millions of websites devoted to learning R. just look at the number of hits on a certain search machine.
&lt;img src=&#34;/cleancode/img/google_search_spss_r.PNG&#34; alt=&#34;google search results&#34; /&gt;
Most of these hits start with the basics and slowly work your way up to more advanced examples.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is often one reason to start with R: you want to achieve something that doesn&amp;rsquo;t work in other programs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is not a dedicated R programming course, there are a gazillion really great courses( see below &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;).
So I will only show you a few basics, which I think you need. Any specifics can be found in a google search. really, it&amp;rsquo;s very easy.&lt;/p&gt;

&lt;p&gt;The goal of these three lessons is to show you how things work, to load a dataset from spss into R and to create a plot. Because plotting is one of the reasons people switch sides and join the R-community.&lt;/p&gt;

&lt;h1 id=&#34;this-lesson&#34;&gt;This lesson&lt;/h1&gt;

&lt;p&gt;This lesson is about Rstudio, basics, and we will import data from spss.
Datamanipulation takes place in &lt;a href=&#34;{{site.github.url}}/blog/2016/02/22/from-spss-to-r-part2.html#introduction&#34; title=&#34;lesson 2: haven and dplyr&#34;&gt;lesson 2&lt;/a&gt; and in lesson 3 we will make beautiful plots.  The approach is hands on, I want you to do all the things, go through all the motions and start working. Start making mistakes and learn from them.&lt;/p&gt;

&lt;p&gt;We will first install R and Rstudio. R is the program, and Rstudio is a very useful shell around R. Rstudio helps you organize your scripts and data and helps in codecompletion and a million other things. Furthermore, it looks a bit like spss.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Content
{:toc}&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;installing-the-software&#34;&gt;installing the software&lt;/h2&gt;

&lt;p&gt;You will need the latest version of R itself &lt;a href=&#34;https://cran.rstudio.com/&#34;&gt;R&lt;/a&gt;, and also download the latest version of Rstudio from &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34;&gt;Rstudio.com/download&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;start-rstudio&#34;&gt;Start Rstudio&lt;/h2&gt;

&lt;p&gt;You have installed Rstudio, congratulations!&lt;/p&gt;

&lt;p&gt;The main screen looks like this:
&lt;img src=&#34;/cleancode/img/rstudio-bare.PNG&#34; alt=&#34;Rstudio main&#34; /&gt;&lt;/p&gt;

&lt;p&gt;With&lt;/p&gt;

&lt;figure class=&#34;half&#34;&gt;
    &lt;img src=&#34;/cleancode/img/rstudio-packages-files-plots-history-environment.PNG&#34; alt=&#34;image&#34;&gt;
    &lt;img src=&#34;/cleancode/img/rstudio-new-open.PNG&#34; alt=&#34;image&#34;&gt;
    &lt;figcaption&gt;many hidden options right and left&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;working-with-r&#34;&gt;Working with R&lt;/h2&gt;

&lt;p&gt;You can work interactively in the console (the bottom part in the next picture) and you can work with scripts (in the top part).&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;/cleancode/img/rstudio-script-console.PNG&#34; &gt;
    &lt;figcaption&gt; script and console &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;To simplify your work, you can create functions or scripts that automate stuff. In R this can be taken further. Everyone can make packages that contain useful functions and their documentation. Installed packages can be activated by the code &lt;code&gt;library(name_of_package)&lt;/code&gt; . When activated, the functions from that package can be used in your scripts and in the console.&lt;/p&gt;

&lt;p&gt;Tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;open your version of Rstudio. open a new R script.&lt;/li&gt;
&lt;li&gt;copy the following code to that new script (you will see changes in color):&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;{% highlight r linenos %}&lt;/p&gt;

&lt;h1 id=&#34;oh-my-god-a-script&#34;&gt;Oh my god a script!&lt;/h1&gt;

&lt;h1 id=&#34;comments-start-with-a-pound-symbol-aka-hashtag&#34;&gt;comments start with a pound symbol (aka hashtag).&lt;/h1&gt;

&lt;h1 id=&#34;the-following-line-installs-the-packages&#34;&gt;The following line installs the packages&lt;/h1&gt;

&lt;h1 id=&#34;install-packages-c-ggplot2-dplyr-haven&#34;&gt;install.packages(c(&amp;ldquo;ggplot2&amp;rdquo;, &amp;ldquo;dplyr&amp;rdquo;, &amp;ldquo;haven&amp;rdquo;))&lt;/h1&gt;

&lt;p&gt;this line is not code and should thus be commented out&lt;/p&gt;

&lt;p&gt;ggplot()&lt;/p&gt;

&lt;h1 id=&#34;activate-the-package-ggplot2-in-the&#34;&gt;activate the package ggplot2 in the&lt;/h1&gt;

&lt;p&gt;#next line with the library command&lt;/p&gt;

&lt;h1 id=&#34;then-try-line-9-again&#34;&gt;then try line 9 again.&lt;/h1&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;uncomment line 5&lt;/li&gt;
&lt;li&gt;execute part of the script by selecting the line with your mouse and pressing ctrl-R or just put the cursor on the line and press ctrl-R.&lt;/li&gt;
&lt;li&gt;comment out line 7&lt;/li&gt;
&lt;li&gt;execute line 9, you will see an error. Why?&lt;/li&gt;
&lt;li&gt;activate the ggplot2 package with the library command&lt;/li&gt;
&lt;li&gt;try to execute line 9 again&lt;/li&gt;
&lt;li&gt;what has changed?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You found that the function ggplot() was activated after activating the ggplot2 package. You might have spotted that every line you execute is displayed in the console. That is where the R program really lives. Copy the next part to a new script:&lt;/p&gt;

&lt;h3 id=&#34;getting-help&#34;&gt;Getting help&lt;/h3&gt;

&lt;p&gt;{% highlight r %}&lt;/p&gt;

&lt;h1 id=&#34;quite-helpful-to-describe-what-you-want-to&#34;&gt;quite helpful to describe what you want to&lt;/h1&gt;

&lt;h1 id=&#34;do-with-this-script-here&#34;&gt;do with this script here.&lt;/h1&gt;

&lt;p&gt;library(ggplot2) # you already activated this package anyway&lt;/p&gt;

&lt;h1 id=&#34;the-or-help-commands-inform-you-about-commands&#34;&gt;the ? or help() commands inform you about commands&lt;/h1&gt;

&lt;p&gt;help(&amp;ldquo;ggplot&amp;rdquo;)&lt;/p&gt;

&lt;h1 id=&#34;or&#34;&gt;or&lt;/h1&gt;

&lt;p&gt;?ggplot
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;The help files give you a description of the function, usage and how the arguments work. And at the bottom are some examples. The help files are often somewhat technical but if you look at the examples (and try them) you will find out how things work. Another great place is the vignettes.&lt;/p&gt;

&lt;p&gt;Vignettes are long form documentation, often describing every function in the package, practical use, examples and more.&lt;/p&gt;

&lt;p&gt;Or type the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;RSiteSearch&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;vignette&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But the best advice is this: try google.&lt;/p&gt;

&lt;p&gt;Really, the R community is huuuuuge! Type your question and somewhere on stackoverflow, r-mailinglists or other websites, someone else has had the same question you have. If I need to find out how a function works, I type &lt;code&gt;?function&lt;/code&gt; if I want something else, I search for it online.&lt;/p&gt;

&lt;p&gt;To be more specific, use the following format in your search: [r] [package you want to use] [function if any] [&amp;hellip; your problem]
for example
&lt;img src=&#34;/cleancode/img/example_search.PNG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;from-spss-to-r&#34;&gt;From SPSS to R&lt;/h1&gt;

&lt;h2 id=&#34;r-specifics&#34;&gt;R specifics&lt;/h2&gt;

&lt;p&gt;SPSS works with datafiles (.sav), R works internally with several data representations. We will almost exclusively work with data.frames and vectors.
Dataframes look and feel just like spss file. for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;copy and execute the first 2 lines below.&lt;/li&gt;
&lt;li&gt;use the View command or click on the blue-grey table icon in the right of the screen. next to df.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;df &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gp &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;rep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;letters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; each &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
                 y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; rnorm&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#this creates a dataframe with letters&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# and standard normal distributed values.  &lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;df&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# or click  next to table on the icon on the right.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# or display it in the console:&lt;/span&gt;
df&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This opens a view you are familiar with in spss, however you cannot change values here.
So data.frames are just like datafiles in spss. Internaly data frames are just lists with vectors of the same length. So what is a vector? Copy the following script and try to find out.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;df&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;gp &lt;span class=&#34;c1&#34;&gt;# also try to type this. &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# after the dollarsign rstudio will suggest the columns of the dataframe&lt;/span&gt;
df&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;y &lt;span class=&#34;c1&#34;&gt;# will display all the values of the y column. &lt;/span&gt;
df&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;i_made_this &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#see the documentation of rnorm with ?rnorm&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# now look at df again, it has an extra column. &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# the &amp;lt;- (arrow) assigns values. &lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;subset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;df&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# there are multiple ways to select parts of your data&lt;/span&gt;
df&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# try to find out &lt;/span&gt;
df&lt;span class=&#34;p&#34;&gt;[,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# what all these things&lt;/span&gt;
df&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# do. &lt;/span&gt;
g&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# going to the next&lt;/span&gt;
      &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;26&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# line is no problem&lt;/span&gt;
g
&lt;span class=&#34;c1&#34;&gt;#  ----------&amp;gt; in the environment is now a g value with in it numbers 1 to 30&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#  g is a vector. can we add this vector to the dataframe?&lt;/span&gt;
df&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;oh_yes_you_can&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;g   &lt;span class=&#34;c1&#34;&gt;# we assign g to this variable&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;importing-data-from-spss&#34;&gt;Importing data from SPSS.&lt;/h2&gt;

&lt;p&gt;There are multiple packages that import spss files. Many people use the foreign package, but a new one is the haven package.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install the haven package.&lt;/li&gt;
&lt;li&gt;Once installed, activate the package.&lt;/li&gt;
&lt;li&gt;read the documentation on read_sav with ?read_sav&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will cheat a bit and let you create a .sav file and read it in afterwards, but please try it with other spss files.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;write_sav&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;df&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;~/df.sav&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# this saves the file in your working dir (see console)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# or find the whole path to f.i. your working directory in MY case&lt;/span&gt;
write_sav&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;df&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;C://Users/roel/Downloads/df.sav&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# that should save the file to &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#your downloads (once you changed it to your settings). &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# the following line reads the file (pick your .sav file) and assigns it to df2 &lt;/span&gt;
df2&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;read_sav&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file.choose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# you could also specify your &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# file with &amp;#34;path/to/your/file.sav&amp;#34; instead of file.choose().&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The end result is a data.frame with the name df2 which would be identical to df.&lt;/p&gt;

&lt;p&gt;In the next lesson we will manipulate dataframes, in lesson 3 we will make awesome graphics.&lt;/p&gt;

&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/migrating-from-spss-to-r-rstats/&#34;&gt;introduction on r-bloggers.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/?s=spss&#34;&gt;all the r-bloggers post with spss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/translate2r-easy-switch-from-spss-to-r-by-using-common-concepts-like-temporary-and-column-wise-missing-values/&#34;&gt;spss code in R, rbloggers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/translate2r-and-translatespss2r-implanting-spss-functionality-into-r/&#34;&gt;spss to R, rbloggers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;r-courses&#34;&gt;R courses&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;a href=&#34;https://www.coursera.org/learn/r-programming&#34;&gt;https://www.coursera.org/learn/r-programming&lt;/a&gt; &amp;ldquo;Coursera R programming: This is a great course, not sure if it&amp;rsquo;s still free&amp;rdquo;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;&lt;a href=&#34;https://www.codeschool.com/courses/try-r&#34;&gt;https://www.codeschool.com/courses/try-r&lt;/a&gt; &amp;ldquo;Codeschool, I have not tried this one, don&amp;rsquo;t know&amp;rdquo;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;&lt;a href=&#34;https://www.datacamp.com/courses/free-introduction-to-r&#34;&gt;https://www.datacamp.com/courses/free-introduction-to-r&lt;/a&gt; &amp;ldquo;Datacamp: I&amp;rsquo;ve heard great things from this course&amp;rdquo;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;&lt;a href=&#34;https://www.rstudio.com/resources/training/online-learning/&#34;&gt;https://www.rstudio.com/resources/training/online-learning/&lt;/a&gt; &amp;ldquo;By the Rstudio people&amp;rdquo;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>