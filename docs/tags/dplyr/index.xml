<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dplyr on Clean Code (and R-fun)</title>
    <link>/cleancode/tags/dplyr/</link>
    <description>Recent content in Dplyr on Clean Code (and R-fun)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>hogervorst.rm@gmail.com (Roel M. Hogervorst)</managingEditor>
    <webMaster>hogervorst.rm@gmail.com (Roel M. Hogervorst)</webMaster>
    <lastBuildDate>Tue, 29 May 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/cleancode/tags/dplyr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sentiment of Security Now! over time</title>
      <link>/cleancode/blog/2018/05/29/sentiment-of-security-now-over-time/</link>
      <pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2018/05/29/sentiment-of-security-now-over-time/</guid>
      <description>&lt;p&gt;If you believe some people, everything is getting worse&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. More so in infosec. For the past few years I listened to many many hours of podcasts, many hours where spent on the weekly show &lt;a href=&#34;https://twit.tv/shows/security-now&#34;&gt;Security Now!&lt;/a&gt;. The hosts Steven Gibson and Leo Laporte have been talking about security related news every week over 13 years. Although the content has changed over time, there used to be more explanations but the majority of time is now filled with news, we could use the sentiment in the episodes to see if ‘everything is getting worse’. Has the sentiment of the security now! podcast changed over time? It helps that every episode is transcribed into text so we can use natural language processing tools to work through this problem.&lt;/p&gt;
&lt;div id=&#34;extracting-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Extracting the data&lt;/h2&gt;
&lt;p&gt;To gather and extract the relevant information from the transcripts I point you kindly to a seperate github page where I explain how I downloaded every episode and extracted the structure. &lt;a href=&#34;https://github.com/RMHogervorst/NLP_SN&#34; class=&#34;uri&#34;&gt;https://github.com/RMHogervorst/NLP_SN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I asked permission to scrape all the transcripts but I’m not entirely sure if I can share the content. In any case I’d guide you to the links at the bottom of this page with all the archive. I might share the rda file with the episode information and transcripts into 1 dataframe.&lt;/p&gt;
&lt;p&gt;What I ended up with is a dataframe with 664 rows (the number of episodes today) and 9 columns.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidytext)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ───────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ──&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✔ ggplot2 2.2.1.9000     ✔ purrr   0.2.5     
## ✔ tibble  1.4.2          ✔ dplyr   0.7.5     
## ✔ tidyr   0.8.1          ✔ stringr 1.3.1     
## ✔ readr   1.1.1          ✔ forcats 0.3.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Conflicts ──────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(widyr) 
if(!file.exists(&amp;quot;df_sn.RDS&amp;quot;)){
    download.file(
        url = &amp;quot;https://github.com/RMHogervorst/NLP_SN/raw/master/df_sn.RDS&amp;quot;,
        destfile =  &amp;quot;df_sn.RDS&amp;quot;,cacheOK = TRUE)    
}

df_sn &amp;lt;- read_rds(&amp;quot;df_sn.RDS&amp;quot;)  
#df_sn &amp;lt;- read_rds(&amp;quot;../NLP_SN/df_sn.RDS&amp;quot;) # when working locally
# 
# Every week / or once a month at least I will update the file with new transcript(s) so your data could be newer than this post.
#dim_desc(df_sn)
tail(df_sn,2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 9
##   path             source date  description ep_nr hosts teaser title text 
##   &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;lis&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;lis&amp;gt;
## 1 data//sn-663.txt https… May … This week …   663 &amp;lt;lis… It&amp;#39;s … Ultr… &amp;lt;tib…
## 2 data//sn-664.txt https… May … This week …   664 &amp;lt;lis… It&amp;#39;s … Spec… &amp;lt;tib…&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The text column contains a tibble with a row for everytime anyone speaks untill the other takes over. The length&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_sn[664,9][[1]][[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 139 x 3
##    linenr text                                                     speaker
##     &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;                                                    &amp;lt;chr&amp;gt;  
##  1      1 This is Security Now! with Steve Gibson, Episode 664, r… LEO    
##  2      2 Yay, Leo, great to be with you again, as always.         STEVE  
##  3      3 Always a pleasure.                                       LEO    
##  4      4 Yeah, we scrambled here a little bit at the end because… STEVE  
##  5      5 [Crosstalk] half an hour ago.  No, but I also figured y… LEO    
##  6      6 &amp;quot;Well, yeah.  Two weeks ago the news leaked through Hei… STEVE  
##  7      7 They were presumably waiting to disclose until companie… LEO    
##  8      8 Yes.  And even so, I mean, this is - what we heard was … STEVE  
##  9      9 Right.                                                   LEO    
## 10     10 I can&amp;#39;t square that with the news of two because all we… STEVE  
## # ... with 129 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Steve talks a lot more then Leo, and we see that in the number of words per line of a single episode:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_sn[664,9][[1]][[1]] %&amp;gt;% 
    mutate(
        nr_char = str_length(text),
        N_words = str_count(text, &amp;quot;\\w+&amp;quot;)
        ) %&amp;gt;% 
    ggplot(aes(linenr, N_words, fill = speaker))+
    geom_col()+
    labs(
        title = &amp;quot;Number of words in every line in episode 664&amp;quot;,
        subtitle = &amp;quot;Steve talks a lot more than Leo (not surprising)&amp;quot;,
        x = &amp;quot;line number&amp;quot;, y = &amp;quot;Number of words (log2 scale)&amp;quot;,
        caption = &amp;quot;Transcripts Security Now! - 664&amp;quot;
    )+
    scale_y_continuous(trans = &amp;quot;log2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/cleancode/cleancode/post/2018-05-29-sentiment-of-security-now-over-time_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Interestingly my scraper seems to not have detected who said the words on line 45. It was Steve.&lt;/p&gt;
&lt;p&gt;It might be better to use an average over the episode&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_sn[664,9][[1]][[1]] %&amp;gt;% 
    mutate(
        N_words = str_count(text, &amp;quot;\\w+&amp;quot;),
        speaker = ifelse(is.na(speaker), &amp;quot;STEVE&amp;quot;, speaker)
        ) %&amp;gt;% 
    ggplot(aes(speaker, N_words, fill = speaker))+
    geom_violin()+
    geom_jitter(height = 0,width = .2, alpha  = 2/3)+
    scale_y_continuous(trans = &amp;quot;log2&amp;quot;)+
    labs(
        title = &amp;quot;Number of words in every line in episode 664&amp;quot;,
        subtitle = &amp;quot;Steve has a few more long pieces&amp;quot;,
        x = &amp;quot;&amp;quot;, y = &amp;quot;Number of words (log2 scale)&amp;quot;,
        caption = &amp;quot;Transcripts Security Now! - 664&amp;quot;
    )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/cleancode/cleancode/post/2018-05-29-sentiment-of-security-now-over-time_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;links&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.grc.com/securitynow.htm&#34;&gt;Archive of transcripts and audio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;state-of-the-machine&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;State of the machine&lt;/h5&gt;
&lt;p&gt;&lt;details&gt; &lt;summary&gt; At the moment of creation (when I knitted this document ) this was the state of my machine: &lt;click&gt; &lt;/summary&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessioninfo::session_info()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ─ Session info ──────────────────────────────────────────────────────────
##  setting  value                       
##  version  R version 3.4.4 (2018-03-15)
##  os       Ubuntu 18.04 LTS            
##  system   x86_64, linux-gnu           
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       Europe/Amsterdam            
##  date     2018-06-01                  
## 
## ─ Packages ──────────────────────────────────────────────────────────────
##  package     * version    date       source                            
##  assertthat    0.2.0      2017-04-11 CRAN (R 3.4.3)                    
##  backports     1.1.2      2017-12-13 CRAN (R 3.4.3)                    
##  bindr         0.1.1      2018-03-13 CRAN (R 3.4.4)                    
##  bindrcpp    * 0.2.2      2018-03-29 CRAN (R 3.4.4)                    
##  blogdown      0.6        2018-04-18 CRAN (R 3.4.4)                    
##  bookdown      0.7        2018-02-18 CRAN (R 3.4.3)                    
##  broom         0.4.4      2018-03-29 CRAN (R 3.4.4)                    
##  cellranger    1.1.0      2016-07-27 CRAN (R 3.4.3)                    
##  cli           1.0.0      2017-11-05 CRAN (R 3.4.3)                    
##  clisymbols    1.2.0      2017-05-21 cran (@1.2.0)                     
##  colorspace    1.3-2      2016-12-14 CRAN (R 3.4.3)                    
##  crayon        1.3.4      2017-09-16 CRAN (R 3.4.3)                    
##  digest        0.6.15     2018-01-28 CRAN (R 3.4.3)                    
##  dplyr       * 0.7.5      2018-05-19 cran (@0.7.5)                     
##  evaluate      0.10.1     2017-06-24 CRAN (R 3.4.3)                    
##  forcats     * 0.3.0      2018-02-19 CRAN (R 3.4.3)                    
##  foreign       0.8-69     2017-06-21 CRAN (R 3.4.2)                    
##  ggplot2     * 2.2.1.9000 2018-02-22 Github (tidyverse/ggplot2@39e4a3b)
##  glue          1.2.0.9000 2018-05-21 Github (tidyverse/glue@7230ed2)   
##  gtable        0.2.0      2016-02-26 CRAN (R 3.4.3)                    
##  haven         1.1.1      2018-01-18 CRAN (R 3.4.3)                    
##  hms           0.4.2      2018-03-10 CRAN (R 3.4.4)                    
##  htmltools     0.3.6      2017-04-28 CRAN (R 3.4.3)                    
##  httr          1.3.1      2017-08-20 CRAN (R 3.4.3)                    
##  janeaustenr   0.1.5      2017-06-10 CRAN (R 3.4.3)                    
##  jsonlite      1.5        2017-06-01 CRAN (R 3.4.3)                    
##  knitr         1.20       2018-02-20 CRAN (R 3.4.3)                    
##  labeling      0.3        2014-08-23 CRAN (R 3.4.3)                    
##  lattice       0.20-35    2017-03-25 CRAN (R 3.4.2)                    
##  lazyeval      0.2.1      2017-10-29 CRAN (R 3.4.3)                    
##  lubridate     1.7.4      2018-04-11 CRAN (R 3.4.4)                    
##  magrittr      1.5        2014-11-22 CRAN (R 3.4.3)                    
##  Matrix        1.2-14     2018-04-09 CRAN (R 3.4.4)                    
##  mnormt        1.5-5      2016-10-15 CRAN (R 3.4.3)                    
##  modelr        0.1.2      2018-05-11 CRAN (R 3.4.4)                    
##  munsell       0.4.3      2016-02-13 CRAN (R 3.4.3)                    
##  nlme          3.1-137    2018-04-07 CRAN (R 3.4.4)                    
##  pillar        1.2.2      2018-04-26 CRAN (R 3.4.4)                    
##  pkgconfig     2.0.1      2017-03-21 CRAN (R 3.4.3)                    
##  plyr          1.8.4      2016-06-08 CRAN (R 3.4.3)                    
##  psych         1.8.4      2018-05-06 CRAN (R 3.4.4)                    
##  purrr       * 0.2.5      2018-05-29 cran (@0.2.5)                     
##  R6            2.2.2      2017-06-17 CRAN (R 3.4.3)                    
##  Rcpp          0.12.17    2018-05-18 cran (@0.12.17)                   
##  readr       * 1.1.1      2017-05-16 CRAN (R 3.4.3)                    
##  readxl        1.1.0      2018-04-20 CRAN (R 3.4.4)                    
##  reshape2      1.4.3      2017-12-11 CRAN (R 3.4.3)                    
##  rlang         0.2.0.9001 2018-05-31 Github (tidyverse/rlang@4e7e8f7)  
##  rmarkdown     1.9        2018-03-01 CRAN (R 3.4.3)                    
##  rprojroot     1.3-2      2018-01-03 CRAN (R 3.4.3)                    
##  rstudioapi    0.7        2017-09-07 CRAN (R 3.4.3)                    
##  rvest         0.3.2      2016-06-17 CRAN (R 3.4.3)                    
##  scales        0.5.0.9000 2018-05-03 Github (hadley/scales@d767915)    
##  sessioninfo   1.0.0      2017-06-21 cran (@1.0.0)                     
##  SnowballC     0.5.1      2014-08-09 CRAN (R 3.4.3)                    
##  stringi       1.2.2      2018-05-02 CRAN (R 3.4.4)                    
##  stringr     * 1.3.1      2018-05-10 CRAN (R 3.4.4)                    
##  tibble      * 1.4.2      2018-01-22 CRAN (R 3.4.3)                    
##  tidyr       * 0.8.1      2018-05-18 CRAN (R 3.4.4)                    
##  tidyselect    0.2.4      2018-02-26 CRAN (R 3.4.3)                    
##  tidytext    * 0.1.8      2018-03-21 CRAN (R 3.4.4)                    
##  tidyverse   * 1.2.1      2017-11-14 CRAN (R 3.4.3)                    
##  tokenizers    0.2.1      2018-03-29 CRAN (R 3.4.4)                    
##  utf8          1.1.4      2018-05-24 CRAN (R 3.4.4)                    
##  widyr       * 0.1.1      2018-03-11 CRAN (R 3.4.4)                    
##  withr         2.1.2      2018-03-15 CRAN (R 3.4.4)                    
##  xfun          0.1        2018-01-22 CRAN (R 3.4.3)                    
##  xml2          1.2.0      2018-01-24 CRAN (R 3.4.3)                    
##  yaml          2.1.19     2018-05-01 cran (@2.1.19)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/details&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Not if we learn from Hans Rosling but that is a story for an other time&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Cleaning up and combining data, a dataset for practice</title>
      <link>/cleancode/blog/2018/03/12/content/post/2018-03-12-a-dirty-dataset-for-you-to-clean/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2018/03/12/content/post/2018-03-12-a-dirty-dataset-for-you-to-clean/</guid>
      <description>

&lt;p&gt;tldr: I created an open dataset for the explicit practice of data munging.
Feel free to use it in assignments,
but do mention where you got it from (CC-by-4.0). Also unicorns are awesome.&lt;/p&gt;

&lt;p&gt;Find the dataset at: &lt;a href=&#34;https://github.com/RMHogervorst/unicorns_on_unicycles&#34;&gt;https://github.com/RMHogervorst/unicorns_on_unicycles&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;data-munging-cleaning-engineering&#34;&gt;Data munging / cleaning / engineering&lt;/h2&gt;

&lt;p&gt;At work I was working with a two excel files that were slightly different but
could be combined into 1 dataset. This is very typical for day to day cleaning
operations that analysts and data scientists do (statisticians too).&lt;/p&gt;

&lt;p&gt;I realized cleaning, joining and enriching is something that statistics classes
just take for granted. But if a student only works with perfectly prepared
data, they are unable to work with real world data. Because the real world is
someone handing you an excel file with weird values and beautiful colors, that
you cannot use in your work. Or it is a webscraping exercise where some of the
pages are missing and people can&amp;rsquo;t seem to spell right. Some people say 80% of
a data scientists work is cleaning data, so let us teach students how to do that
effectively. I made this dataset in R, but it does not really matter what tool
you use to read and clean this set.&lt;/p&gt;

&lt;h3 id=&#34;what-is-the-dataset-about&#34;&gt;What is the dataset about?&lt;/h3&gt;

&lt;p&gt;All good datasets have a story, this dataset is thought to have been recorded by
an amateur scientist, a natural philosopher by the name of Rudolphus
in the 17th century in The Netherlands. This scientist
recorded the annual population of unicorns in western Europe over a century and also recorded
the sales of unicycles in that same time period. Although not much of the
accompanying text remains of
the original documents, what we can read is the tables and the idea that
Rudolphus thought there was some sort of relationship between uncorns and
unicycle sales.&lt;/p&gt;

&lt;h3 id=&#34;what-kind-of-tasks-would-a-student-have-to-do&#34;&gt;what kind of tasks would a student have to do?&lt;/h3&gt;

&lt;p&gt;There are 2 files, that contain a total of 3 tables. The tables can be
connected to each other with full joins on countryname and year (To make it
  more difficult, you could remove one row in one of the sets).&lt;/p&gt;

&lt;p&gt;a student should:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;read in the data from excel&lt;/li&gt;
&lt;li&gt;recognize that one file contains 2 tables&lt;/li&gt;
&lt;li&gt;realize that countrynames are slightly different in 1 file&lt;/li&gt;
&lt;li&gt;join the files together&lt;/li&gt;
&lt;li&gt;create 1 &amp;lsquo;long&amp;rsquo; tidy datafile (country, year, value1, value2, value3)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;During analysis:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;realize that some years are missing&lt;/li&gt;
&lt;li&gt;perhaps impute, reason for reasons of missingness (disease epidemic in
Austria, others are missing at random)&lt;/li&gt;
&lt;li&gt;find some relation between unicycles and unicorns in the 17th century in
western Europe&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;what-can-i-do-with-this-set&#34;&gt;what can I do with this set?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve released the set under the creative commons cc-by-4.0 license. That means
you may remix, share, use commercially, and modify the dataset. I just want
you to mention where you got the dataset from.
If you think the units are stupid, change it. if you think the assignment is
too difficult, make it easier. Really, you can use it any way you want.&lt;/p&gt;

&lt;p&gt;I hope this set will help in teaching students the art of data munging. I also
thought it was very funny to have unicorns on unicycles, but searching the
internet shows I was hardly the first one to think of that pun. Ah well, just
goes to show that it was a good one.&lt;/p&gt;

&lt;p&gt;Find the dataset at: &lt;a href=&#34;https://github.com/RMHogervorst/unicorns_on_unicycles&#34;&gt;https://github.com/RMHogervorst/unicorns_on_unicycles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>add abbreviations to your rmarkdown doc</title>
      <link>/cleancode/blog/2018/01/24/content/post/2018-01-24-add-abbreviations-to-rmarkdown/</link>
      <pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2018/01/24/content/post/2018-01-24-add-abbreviations-to-rmarkdown/</guid>
      <description>&lt;p&gt;Today a small tip for when you write rmarkdown documents. Add a chunk on top with abbreviations.&lt;/p&gt;

&lt;p&gt;in the first chunks you set the options and load the
packages. Next create abbreviations, you don&amp;rsquo;t have to care about the ordering, just put them down as you realize you are creating them.&lt;/p&gt;

&lt;p&gt;The first step makes a dataframe (a tibble, rowwise), and the second step orders them.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tribble(
    ~Abbreviation, ~ Explanation,
    &amp;quot;CIA&amp;quot;, &amp;quot;Central Intelligence Agency&amp;quot;,
    &amp;quot;dplyr&amp;quot;, &amp;quot;data.frame plyr, a tool for working with data in a rectangular format&amp;quot;,
    &amp;quot;ABC&amp;quot;, &amp;quot;The first few letters of the alphabet&amp;quot;
) %&amp;gt;%
    arrange(Abbreviation)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you make use of many abbreviations, you might want to put them all in a dataframe and add them to your document.&lt;/p&gt;

&lt;p&gt;Even better: add them to a package: a dataframe with all your abbreviations, a template rmarkdown document with your company logos, and perhaps some
ggplot themes to style your corporate work.&lt;/p&gt;

&lt;p&gt;For instance: I create an enourmous collection of
obscure abbreviations in use in my company and put them all in my package. You don&amp;rsquo;t want to use them all in your document, that would be silly. You only want to explain the abbreviations that you use in the document.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(tidyverse)
library(your_corp_package)
all_abbreviations_used &amp;lt;- c(&amp;quot;CIA&amp;quot;, &amp;quot;DONKLEBODY&amp;quot;, &amp;quot;WUT&amp;quot;, &amp;quot;SPEEDR&amp;quot;)
abbreviations %&amp;gt;%
      filter(abbreviation %in% all_abbreviations_used)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tada! Simple, useful.&lt;/p&gt;

&lt;p&gt;Do you have ideas how to expand this idea? Perhaps you could scan the text of a document and extract abbreviations?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Where to live in the Netherlands based on temperature XKCD style</title>
      <link>/cleancode/blog/2017/11/20/content/post/2017-11-20-xkcd-the-netherlands-weather/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2017/11/20/content/post/2017-11-20-xkcd-the-netherlands-weather/</guid>
      <description>

&lt;p&gt;After seeing a plot of best places to live in Spain and the USA based on the weather, I had to
chime in and do the same thing for the Netherlands. The idea is simple, determine where you want to live based on your temperature preferences.&lt;/p&gt;

&lt;p&gt;First the end result:
&lt;img src=&#34;/cleancode/img/xkcd_NL_US_ESP.png&#34; alt=&#34;Netherlands, weatherplot XKCD style&#34; /&gt;&lt;/p&gt;

&lt;p&gt;How to read this plot?&lt;/p&gt;

&lt;p&gt;In &lt;a href=&#34;https://xkcd.com/1916/&#34;&gt;this&lt;/a&gt; xkcd comic we see that the topleft of the the graph represents &amp;ldquo;if you hate cold and hate heat&amp;rdquo;, if you go down from the topleft to the bottom left the winters get colder and ending in &amp;ldquo;if you love cold and hate heat&amp;rdquo;. Going to the right the heat (and humidity) go up ending in &amp;ldquo;if you love cold and love heat&amp;rdquo;. Going up to the top right: &amp;ldquo;if you hate cold and love heat&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;This post explains how to make the plot, to see  where I got the data and what procedures I took look at &lt;a href=&#34;https://github.com/RMHogervorst/xkcd_weather_cities_nl&#34;&gt;https://github.com/RMHogervorst/xkcd_weather_cities_nl&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;inspiration&#34;&gt;Inspiration&lt;/h3&gt;

&lt;p&gt;According to this &lt;a href=&#34;http://www.masalmon.eu/2017/11/16/wheretoliveus/&#34;&gt;post by Maële Salmon&lt;/a&gt; inspired by xkcd, we can determine our ideal city by looking at wintertemperature and humidex (combination of humidity and summer heat).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve seen major cities in the USA (post by Maelle) and where to live in Spain &lt;a href=&#34;https://twitter.com/claudiaguirao/status/931615734521909248&#34;&gt;by Claudia Guirao&lt;/a&gt;. There is even one on France &lt;a href=&#34;https://twitter.com/matamix/status/932283897018273792&#34;&gt;in French, of course&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So I had to make one for the Netherlands too. There is just a small detail,
The Netherlands is tiny, the United States is approximately 237 times larger then The Netherlands. From The Hague to the German border directly east is 164 km (101 miles) and from Leeuwarden to Maastricht in the south is 262 km (162 miles). Essentially my home country has a moderate sea climate with warm summers and relatively mild winters.&lt;/p&gt;

&lt;p&gt;I expect there to be no real big differences between the cities. I use the average temperature over december, january and february for winter temperature and calculate the humidex using the &lt;a href=&#34;https://cran.r-project.org/web/packages/comf/index.html&#34;&gt;comf package&lt;/a&gt;. This humidex is a combination of humidity and temperature.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;20 to 29: Little to no discomfort&lt;/li&gt;
&lt;li&gt;30 to 39: Some discomfort&lt;/li&gt;
&lt;li&gt;40 to 45: Great discomfort; avoid exertion&lt;/li&gt;
&lt;li&gt;Above 45: Dangerous; heat stroke quite possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For cities I went the extremely lazy way and took all of the available weatherstations provided by the Dutch weather service (KNMI, &amp;mdash; Royal Netherlands, Metereological Institute). There are 46 stations in the Netherlands. These are not always in the cities but sort of broadly describe the entire country.&lt;/p&gt;

&lt;h3 id=&#34;plot-like-xkcd&#34;&gt;Plot like XKCD&lt;/h3&gt;

&lt;p&gt;The XKCD package has wonderful plotting abilities and a cool font that you have to install. I copied and modified the code from the post of Mäelle, because it is really good!&lt;/p&gt;

&lt;p&gt;If you want to see how I did the data cleaning go to the &lt;a href=&#34;https://github.com/RMHogervorst/xkcd_weather_cities_nl&#34;&gt;github page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First we plot all of the stations in the Netherlands &lt;em&gt;most of these places will probably not be familiar to non-Dutch people&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ggplot2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;extrafont&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ggrepel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

xrange &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
yrange &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;wintertemp&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kp&#34;&gt;set.seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3456&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Where to live in The Netherlands \nbased on your temperature preferences&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          subtitle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Data from KNMI, 2016-2017&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  xlab&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Summer heat and humidity via Humidex&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  ylab&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Winter temperature in Celsius degrees&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  xkcdaxis&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;xrange &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; xrange&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
           yrange &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; yrange&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme_xkcd&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;text &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/cleancode/img/temperatureranges-in-the-netherlands-1.png&#34; alt=&#34;temperature ranges in the Netherlands alone&#34; /&gt;&lt;/p&gt;

&lt;p&gt;But what does that mean, in the grand scheme of things? As you might notice the range is very small. It would be interesting to add some US cities and perhaps some Spanisch cities to compare against. For fun I also added the Dutch Caribean islands.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;xrange2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# modified these by hand to increase the margins&lt;/span&gt;
yrange2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;-5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
USA &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; tribble&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;NAME&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;wintertemp&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;DETROIT, MI&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;NASHVILLE, TN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;FORT MEYERS, FL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
SPAIN &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; tribble&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;NAME&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;wintertemp&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;MADRID, SPAIN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;TENERIFE, SPAIN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;BARCELONA, SPAIN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
D_CARI &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; tribble&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;NAME&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;wintertemp&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;Bonaire, Caribbean Netherlands&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; calcHumx&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;76&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;Sint Eustatius, Caribbean Netherlands&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; calcHumx&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;77&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;   
      &lt;span class=&#34;s&#34;&gt;&amp;#34;Saba, Caribbean Netherlands&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; calcHumx&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;76&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kp&#34;&gt;set.seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3456&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;alpha &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;.7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                   family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; USA&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; USA&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; SPAIN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; SPAIN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; D_CARI&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; D_CARI&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    labs&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;title &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Where to live in The Netherlands based on \nyour temperature preferences \nCompared with some places in Spain, Caribbean NL and USA&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          subtitle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Data from KNMI, 2016-2017, added Spain and US cities&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Summer heat and humidity via Humidex&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Winter temperature in Celsius degrees&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         caption &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;includes Caribbean Netherlands&amp;#34;&lt;/span&gt;
             &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  xkcdaxis&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;xrange &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; xrange2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
           yrange &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; yrange2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme_xkcd&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;text &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/cleancode/img/xkcd_NL_US_ESP.png&#34; alt=&#34;Netherlands, weatherplot XKCD style&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Finally we can compare the wintertemperature and summer humidex in The Netherlands by placing the points on a map using the coordinates of the measure stations.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NL &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; map_data&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;map &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;world&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;region &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Netherlands&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
result &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
    rename&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;LON &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`LON(east)`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; LAT &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`LAT(north)`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
    ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;LON&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; LAT&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                   family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; fill &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;NA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    labs&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;title &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Wintertemperature in NL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         subtitle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;data from KNMI (2016,2017&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    theme_xkcd&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;text &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;result &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
    rename&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;LON &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`LON(east)`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; LAT &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`LAT(north)`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
    ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;LON&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; LAT&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; humidex_avg&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                   family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; fill &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;NA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    labs&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;title &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Humidex in NL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         subtitle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;data from KNMI (2016,2017&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    theme_xkcd&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;text &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    scale_color_continuous&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;low &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; high &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;/cleancode/img/humidex_NL.png&#34; alt=&#34;Netherlands, humidex, gps&#34; /&gt;
&lt;img src=&#34;/cleancode/img/wintertemp_NL.png&#34; alt=&#34;Netherlands, wintertemp, gps&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now show us what your country looks like!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Generate text using Markov Chains (sort of)</title>
      <link>/cleancode/blog/2017/01/21/content/post/2017-01-21-markov-chain/</link>
      <pubDate>Sat, 21 Jan 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2017/01/21/content/post/2017-01-21-markov-chain/</guid>
      <description>

&lt;p&gt;Inspired by the hilarious podcast &lt;a href=&#34;gagh.biz&#34; title=&#34;A podcast by two people who are a little embarrassed to have a podcast about Star Trek the Next Generation&#34;&gt;The Greatest Generation&lt;/a&gt;, I have worked again with all the lines from all the episode scripts of TNG.
Today I will make a clunky bot (although it does nothing and is absolutely not useful) that talks like Captain Picard.
I actually wanted to use a Markov Chain to generate text. A Markov Chain has a specific property. It doesn&amp;rsquo;t care what happened before, it only looks at probabilities from the current state to a next state.&lt;/p&gt;

&lt;h3 id=&#34;markov-chains&#34;&gt;Markov Chains&lt;/h3&gt;

&lt;p&gt;An example is a board game based on dice throws. Every time I throw the die there are equal opportunities to go from my current side to any other side. In this case every probability is equal, but when the die is loaded probabilities would change.&lt;/p&gt;

&lt;p&gt;In the current example I&amp;rsquo;m using all the phrases I extracted from the series TNG &lt;a href=&#34;For%20more%20info%20about%20this%20particular%20dataset,%20go%20to%20%3Chttp://github.com/rtrek%3E&#34;&gt;1&lt;/a&gt;. And then well use words that follow each other choosing &amp;ldquo;randomly&amp;rdquo; but weighted by occurrence.&lt;/p&gt;

&lt;h1 id=&#34;but-first-cleaning&#34;&gt;But first cleaning&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;m using the packages dplyr, stringr, tidytext and tidyr.
If you&amp;rsquo;d like to follow along download the &lt;a href=&#34;https://github.com/RTrek/TNG/raw/master/data/TNG.rda&#34; title=&#34;this link goes to the dataset ~26 mb, if you don&#39;t trust that, go to that repo and download the csv file from data-raw&#34;&gt;dataset&lt;/a&gt; and load it in R with load(&amp;ldquo;path to file&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;The dataset itself is rather large &lt;code&gt;dim(TNG) #110176     17&lt;/code&gt; with 11 thousand rows and 17 variables. However we will only use the variables &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;who&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt;. &lt;code&gt;Type&lt;/code&gt; contains either &amp;ldquo;description&amp;rdquo; or &amp;ldquo;speech&amp;rdquo;. We only need speech. Because I was a novice and because in general I&amp;rsquo;m not very tidy &lt;a href=&#34;Which%20is%20rather%20ironic%20since%20I%20like%20to%20adore%20to%20Tidy%20principles...&#34;&gt;2&lt;/a&gt; this dataset is rather dirty. I copied and did not sanitize the who part. This means that if you filter on &amp;ldquo;Riker&amp;rdquo;, you will not get everything he said. The script has weird things like: &amp;ldquo;Riker&amp;rsquo;s com voice&amp;rdquo;, &amp;ldquo;Riker&amp;rsquo;s voice&amp;rdquo; and several variants of &amp;ldquo;V.O.&amp;rdquo; (means voice over).&lt;/p&gt;

&lt;h2 id=&#34;cleaning-the-who-column&#34;&gt;Cleaning the who column&lt;/h2&gt;

&lt;p&gt;We have to clean out the who column, filter only the rows that contain speech. Perhaps we also want to select only rows for certain characters. And finally we want to cut up the text into bigrams or trigrams. Thanks to an excellent &lt;a href=&#34;http://tidytextmining.com/&#34; title=&#34;free to read on the internet&#34;&gt;book&lt;/a&gt; by Julia Silge and David Robinson this was surprisingly easy to do. I cannot recommend their package &lt;a href=&#34;https://cran.r-project.org/package=tidytext&#34;&gt;tidytext&lt;/a&gt; enough, truly awesome!&lt;/p&gt;

&lt;p&gt;You could do the following steps all in one pipe, but for clarity sake, and your sanity, we will take smaller steps.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;speech_TNG &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; TNG &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;type &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;speech&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# select only speech parts&lt;/span&gt;
        mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;who &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; str_replace&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;who&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#39;S COM VOICE&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                       str_replace&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\\(.{1,}\\)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                       str_replace&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\&amp;#34;.{1,}\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                       str_replace&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;YOUNG&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                       str_replace&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#39;S VOICE&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                       str_trim&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This looks crazy, but don&amp;rsquo;t despair:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;assign to speech_TNG the result of:&lt;/li&gt;
&lt;li&gt;take TNG &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;return only the rows where type is &amp;ldquo;speech&amp;rdquo; &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;mutate the who column by

&lt;ul&gt;
&lt;li&gt;replacing from the who column &amp;ldquo;&amp;rsquo;S COM VOICE&amp;rdquo; with nothing &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;replacing a &amp;ldquo;(&amp;rdquo; followed by at least 1 any character followed by a &amp;ldquo;)&amp;rdquo; with nothing &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;replacing quotation marks (&amp;rdquo; &amp;ldquo;) with any characters in between with nothing &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;replacing YOUNG with nothing &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;replacing &amp;rsquo;s voice with nothing &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;trimming all whitespace at start and end&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How did I know how to build this enormous pipe? I took a sample of the who column and tried stuff untill it suited my needs [3].&lt;/p&gt;

&lt;p&gt;[3]: for example &lt;code&gt;sample &amp;lt;- TNG %&amp;gt;% filter(type == &amp;quot;speech&amp;quot;) %&amp;gt;% select(who) %&amp;gt;% sample_n(20) %&amp;gt;% .$who&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;extracting-bi-and-trigrams-per-character&#34;&gt;Extracting bi- and trigrams per character&lt;/h1&gt;

&lt;p&gt;And now we can create seperate datasets for every character.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;bigrams_data &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; speech_TNG &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;who &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;DATA&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        unnest_tokens&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;bigram&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; token &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ngrams&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;to_lower &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        separate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;bigram&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;word1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;word2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; sep &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        count&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;word1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; word2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sort &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We use the &lt;code&gt;unnest_tokens&lt;/code&gt; command from the tidytext package. This command will take your cell with text and extract either sentences, words, ngrams or paragraphs. It also converts everything to lowercase and delete any punctuation. The resulting variable I now call &amp;ldquo;bigram&amp;rdquo;. Then I take that variable &amp;ldquo;bigram&amp;rdquo; and split it up into two variables calling them &amp;ldquo;word1&amp;rdquo; and &amp;ldquo;word2&amp;rdquo;. Finally I count how many times the combinations occur.&lt;/p&gt;

&lt;p&gt;For Picard, the bigrams would be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;bigrams_picard &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; speech_TNG &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;who &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;PICARD&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        unnest_tokens&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;bigram&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; token &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ngrams&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;to_lower &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        separate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;bigram&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;word1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;word2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; sep &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        count&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;word1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; word2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sort &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And his trigrams would be&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;trigrams_picard &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; speech_TNG &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;who &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;PICARD&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        unnest_tokens&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;trigram&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; token &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ngrams&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;to_lower &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        separate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;trigram&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;word1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;word2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;word3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; sep &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        count&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;word1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; word2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;word3&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sort &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;creating-a-markov-chain-sort-of&#34;&gt;Creating a markov chain (sort of)&lt;/h1&gt;

&lt;p&gt;My endproduct takes two words and tries to find a third word. Then it takes the final two words and tries to find another word untill the sentance has a length that I specify at the start.&lt;/p&gt;

&lt;p&gt;What I actually created is a trigram dataframe, and a function that searches that frame. The function takes two words and returns all the rows where the first word matches the first column and the second word matches the second column.&lt;/p&gt;

&lt;p&gt;Furthermore I made a sentence creator, a function where you supply the first two words and the length of the sentence. That function keeps using the last words in the sentence until the correct length is achieved. With the fallback method of using bigrams when the trigrams don&amp;rsquo;t work anymore it could still fail, but not so often.&lt;/p&gt;

&lt;h3 id=&#34;word-generator&#34;&gt;Word generator&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;return_third_word &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; woord1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
        woord &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; trigrams_picard &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;word1 &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; woord1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;word2 &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                sample_n&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                &lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;word3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
        woord
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However this function sometimes returns an empty row. So I baked in a backup for when it can&amp;rsquo;t find the word combination.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;return_third_word &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; woord1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
        woord &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; trigrams_picard &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;word1 &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; woord1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;word2 &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                sample_n&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                &lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;word3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
        &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;woord&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
                bleh &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;bigrams_picard&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;word1 &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                        sample_n&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;kp&#34;&gt;warning&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;no word found, adding &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; bleh&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;to&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; woord1 &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                woord &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; bleh
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        woord
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;From trigrams_picard,&lt;/li&gt;
&lt;li&gt;return the rows where word 1 matches woord1, and word2 matches woord2.&lt;/li&gt;
&lt;li&gt;Of those rows * return a single random row, where the randomness is weighted by occurrence. * Return the single word.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also used a bit of &lt;a href=&#34;http://rmhogervorst.nl/cleancode/blog/2016/06/13/NSE_standard_evaluation_dplyr.html&#34; title=&#34;link to NSE article&#34;&gt;non-standard evalation (NSE)&lt;/a&gt; just for fun.&lt;/p&gt;

&lt;h3 id=&#34;sentence-generator&#34;&gt;Sentence generator&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;generate_sentence &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;word1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; word2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sentencelength &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; debug &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;FALSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;#input validation&lt;/span&gt;
        &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;sentencelength &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I need more to work with&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        sentencelength &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; sentencelength &lt;span class=&#34;m&#34;&gt;-2&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# starting&lt;/span&gt;
        sentence &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;word1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; word2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        woord1 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; word1
        woord2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; word2
        &lt;span class=&#34;kr&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;kr&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;seq_len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;sentencelength&lt;span class=&#34;p&#34;&gt;)){&lt;/span&gt;
                &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;debug &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                word &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; return_third_word&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; woord1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                sentence &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;sentence&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; word&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                woord1 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; woord2
                woord2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; word
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        output &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;sentence&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; collapse &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        output
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Check that there are more then 2 lenght.&lt;/li&gt;
&lt;li&gt;Loop a certain times

&lt;ul&gt;
&lt;li&gt;in that loop use woord1 and woord 2 as input&lt;/li&gt;
&lt;li&gt;create a new word&lt;/li&gt;
&lt;li&gt;add that word to sentence&lt;/li&gt;
&lt;li&gt;change the values of woord1 and woord2&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;output the sentance with all the words in one line.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example this created for me: &lt;code&gt;generate_sentence(&amp;quot;I&amp;quot;, &amp;quot;am&amp;quot;, 9)&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;i am loathe to do with you because they&amp;quot;
&amp;quot;i am not the case however wesley is alive&amp;quot;
&amp;quot;i am aware of the tachyon pulse it might be able to determine how to&amp;quot;
# and with the enterprise and length 9
&amp;quot;the enterprise we use the cloak to escape do&amp;quot;
 &amp;quot;the enterprise we have had&amp;quot;
 &amp;quot;the enterprise for a thing&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;it&amp;rsquo;s incredibly slow and inefficient, but hey, it&amp;rsquo;s a toy project!&lt;/li&gt;
&lt;li&gt;Also it failed on me multiple times on 15 length&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Right it makes no sense whatsover. Thanks for following along!&lt;/p&gt;

&lt;p&gt;Do you have suggestions, improvements, found errors? open an issue or email me. &lt;a href=&#34;https://github.com/RMHogervorst/cleancode/issues/new/&#34;&gt;https://github.com/RMHogervorst/cleancode/issues/new/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Non-standard-evaluation and standard evaluation in dplyr</title>
      <link>/cleancode/blog/2016/06/13/content/post/2016-06-13-nse_standard_evaluation_dplyr/</link>
      <pubDate>Mon, 13 Jun 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/06/13/content/post/2016-06-13-nse_standard_evaluation_dplyr/</guid>
      <description>

&lt;p&gt;THIS POST IS NO LONGER ENTIRELY RELEVANT. DPLYR 0.7 HAS A SLIGHTLY DIFFERENT (AND SLIGHTLY MORE INTUITIVE) WAY OF WORKING WITH NON-STANDARD EVALUATION.&lt;/p&gt;

&lt;p&gt;I love the dplyr package with all of its functions, however if you use normal dplyr in functions in your package r-cmd-check will give you a warning: &lt;code&gt;R CMD check NOTE: No visible binding for global variable NAME OF YOUR VARIABLE&lt;/code&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. The functions do work, and everything is normal, however if you submit your package to CRAN, such a NOTE is not acceptable. A workaround is to add globalVariables to one of your scripts. for instance:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;globalVariables&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;var1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;var2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;varyourmother&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
				&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which works but it is not necessary.&lt;/p&gt;

&lt;h2 id=&#34;nse&#34;&gt;NSE&lt;/h2&gt;

&lt;p&gt;dplyr (and some other packages and functions) work with non-standard-evaluation (NSE). One example is &lt;code&gt;library(magrittr)&lt;/code&gt; vs &lt;code&gt;library(&amp;quot;magrittr&amp;quot;)&lt;/code&gt; , both work. But
&lt;code&gt;install.packages(magrittr)&lt;/code&gt; vs &lt;code&gt;install.packages(&amp;quot;magrittr&amp;quot;)&lt;/code&gt; is different, you need the quotes. In almost all the functions in r when you name a part of an object you need the quotes but in some functions you don’t. They are designed to work in a non-standard way. Some even miss a standard way.&lt;/p&gt;

&lt;p&gt;I will focus on the dplyr functions only, a general introduction to NON standard evaluation might come later.&lt;/p&gt;

&lt;p&gt;Under the hood the dplyr functions work just as other functions, in fact
all the functions use normal evaluation (standard evaluation), but for interactive use there is a non standard evaluation version, which saves you typing. The interactive version is then first evaluated with the lazyeval package and is then sent to the SE version.
There is even a naming scheme &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;:
&amp;gt; Every function that uses NSE should have a standard evaluation (SE) escape hatch that does the actual computation. The SE-function name should end with _.&lt;/p&gt;

&lt;p&gt;Therefore there are multiple verbs: select(), select&lt;em&gt;(), mutate(), mutate&lt;/em&gt;(), etc. Under the hood &lt;code&gt;select()&lt;/code&gt; is evaluated with the lazyeval package and sent to &lt;code&gt;select_()&lt;/code&gt;.
In functions you should use the SE versions, not only to stop notes from creating, but also because it gives you extra options.&lt;/p&gt;

&lt;h1 id=&#34;from-nse-the-standard-interactive-use-to-se-standard-evalation-within-functions&#34;&gt;From NSE (the standard interactive use) to SE (standard evalation within functions&lt;/h1&gt;

&lt;p&gt;So this is a list of things i regularly do with NSE and their translation in SE.&lt;/p&gt;

&lt;p&gt;I will use the data file about students in higher education in the Netherlands.&lt;/p&gt;

&lt;h3 id=&#34;background&#34;&gt;background&lt;/h3&gt;

&lt;p&gt;There are basicaly three ways to quote variables that dplyr/ lazyeval understands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;with a formula &lt;code&gt;~mean(mpg)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;with quote()   &lt;code&gt;quote(mean(mpg))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;as a string  &lt;code&gt;&amp;quot;mean(mpg)&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;select&#34;&gt;Select()&lt;/h2&gt;

&lt;p&gt;Example of the select function from dplyr.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;c1&#34;&gt;# first the normal NSE version&lt;/span&gt;
select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# standard evaluation &lt;/span&gt;
select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# comma doesn&amp;#39;t work, + doesn&amp;#39;t work&lt;/span&gt;
select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;quote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# nope&lt;/span&gt;
select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;quote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;quote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# yes!&lt;/span&gt;
select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;OPLEIDINGSNAAM.ACTUEEL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;FREQUENCY&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;YEAR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;OPLEIDINGSFASE.ACTUEEL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# works&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Source: local data frame [24,150 x 2]

   OPLEIDINGSNAAM.ACTUEEL FREQUENCY
                    (chr)     (int)
1     B Aarde en Economie       121
2     B Aarde en Economie        54
3     B Aarde en Economie       140
4     B Aarde en Economie        52
5     B Aarde en Economie       132
6     B Aarde en Economie        55
7     B Aarde en Economie       144
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;filter&#34;&gt;Filter()&lt;/h2&gt;

&lt;p&gt;Then the filter function ( I also use the select function here)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ways that work. &lt;/span&gt;
filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;quote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;YEAR ==2015&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# or with a list to dots.&lt;/span&gt;
dotsfilter &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;YEAR ==2015&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; dotsfilter&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Source: local data frame [4,830 x 2]

         OPLEIDINGSNAAM.ACTUEEL FREQUENCY
                          (chr)     (int)
1           B Aarde en Economie       151
2           B Aarde en Economie        60
3           B Aardwetenschappen         0
4           B Aardwetenschappen       149
5           B Aardwetenschappen       335
6           B Aardwetenschappen         0
7           B Aardwetenschappen        83
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;group-by-summarize&#34;&gt;Group_by() &amp;amp; Summarize()&lt;/h2&gt;

&lt;p&gt;Group_by and summarize examples, see also the NSE vignette on dplyr &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;total &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# group by in SE, and summarize with NSE&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;total &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# both NSE, pass list of arguments to .dots&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;total &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# does not work&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# does work. &lt;/span&gt;
dots &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; dots&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; setNames&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dots&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;sum(FREQUENCY)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Source: local data frame [2 x 2]

  GENDER sum(FREQUENCY)
   (chr)          (int)
1    MAN         609755
2  VROUW         639609
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mutate-and-slightly-more-advanced-use&#34;&gt;Mutate() and slightly more advanced use&lt;/h2&gt;

&lt;p&gt;You want to add two columns up, but you don&amp;rsquo;t yet know which columns that will be (example from Paul Hiemstra&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# normal interactive use  &lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
mtcars &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;new_column &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; wt&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So you would like a function that does something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;f &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; col2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; new_col_name&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    mtcars &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;new_col_name &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; col1 &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; col2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem is that r will search for col1 and col2, which don&amp;rsquo;t exist.
Furthermore the name of the endresult will be new_col_name, and not the content of new_col_name. To get around non-standard evaluation, you can use the lazyeval package. The following function does what we expect:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;f &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; col2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; new_col_name&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    mutate_call &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; lazyeval&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;interp&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; a &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; b&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; a &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; b &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;col2&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    mtcars &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; setNames&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mutate_call&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; new_col_name&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You first create a call that will be evaluated by mutate_ . the call is first interpreted so that the final and correct names are used by mutate_&lt;/p&gt;

&lt;p&gt;Of course if you already knew wich varibles you would use, there is no need for interpretation, and something like this would work:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;mtcars &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; setNames&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;mpg&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;wt&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;sum mpg wt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
mtcars &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;mpg&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;wt&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# if you don&amp;#39;t need the name specified&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;nse-in-context&#34;&gt;NSE in context&lt;/h1&gt;

&lt;p&gt;So if you want to use the dplyr functions in your own functions these are some variants that you could use. See the list of References and Notes for more information.&lt;/p&gt;

&lt;h1 id=&#34;references&#34;&gt;References:&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/26724124/standard-evaluation-in-dplyr-summarise-on-variable-given-as-a-character-string&#34;&gt;question on stack overflow&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.r-bloggers.com/using-mutate-from-dplyr-inside-a-function-getting-around-non-standard-evaluation/&#34;&gt;using mutate inside a function, shows excellent use of mutate function,  r-bloggers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.carlboettiger.info/2015/02/06/fun-standardizing-non-standard-evaluation.html&#34;&gt;fun standardizing NSE (he has a particular kind of fun&amp;hellip;)&lt;/a&gt;
&lt;a href=&#34;http://adv-r.had.co.nz/Computing-on-the-language.html&#34;&gt;advanced r chapter about NSE - hadley wickham&lt;/a&gt;
&lt;a href=&#34;http://developer.r-project.org/nonstandard-eval.pdf&#34;&gt;on r, I have not read this one &lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;notes&#34;&gt;NOTES&lt;/h1&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;an issue that demonstrates the r cmd check NOTE. &lt;a href=&#34;https://github.com/Rdatatable/data.table/issues/850&#34;&gt;https://github.com/Rdatatable/data.table/issues/850&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;wow the package is updated yesterday, but this describes the naming &lt;a href=&#34;https://cran.r-project.org/web/packages/lazyeval/vignettes/lazyeval-old.html&#34;&gt;https://cran.r-project.org/web/packages/lazyeval/vignettes/lazyeval-old.html&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;NSE in dplyr &lt;a href=&#34;https://cran.r-project.org/web/packages/dplyr/vignettes/nse.html&#34;&gt;https://cran.r-project.org/web/packages/dplyr/vignettes/nse.html&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;This example comes from Paul Hiemstra on his numbertheory blog that I found via r-bloggers. &lt;a href=&#34;http://www.numbertheory.nl/2015/09/23/using-mutate-from-dplyr-inside-a-function-getting-around-non-standard-evaluation/&#34;&gt;http://www.numbertheory.nl/2015/09/23/using-mutate-from-dplyr-inside-a-function-getting-around-non-standard-evaluation/&lt;/a&gt; With the reference to the r-bloggers version in the links above.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>From spss to R, part 4</title>
      <link>/cleancode/blog/2016/04/04/content/post/2016-04-04--from-spss-to-r-part4/</link>
      <pubDate>Mon, 04 Apr 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/04/04/content/post/2016-04-04--from-spss-to-r-part4/</guid>
      <description>

&lt;p&gt;This is the second part of working with ggplot. We will combine the
packages dplyr and ggplot to improve our workflow.
When you make a visualisation you often experiment with different versions of your plot. Our workflow will be dynamic, in stead of saving every version of the plot you created, we will recreate the plot untill  it looks the way you want it.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/blog/2016/03/02/from-spss-to-r-part3.html&#34; title=&#34;a full link to the previous lesson&#34;&gt;the previous lesson&lt;/a&gt; we worked with some build in datasets. But there is often more fun in public real world datasets.&lt;/p&gt;

&lt;p&gt;We will work with the Dutch government data about higher education more info at &lt;https://www.duo.nl/open_onderwijsdata/databestanden/ho/ingeschreven/wo-ingeschr/ingeschrevenen-wo1.jsp &#34;UPDATE 2017, NEW LOCATION, THANKS GOVERNMENT...&#34;&gt;. To help you along I have already transformed the data into a more tidy format &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. The data can be found at my github repository at this link: &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/files&#34;&gt;https://github.com/RMHogervorst/cleancodeexamples/blob/master/files&lt;/a&gt;. UPDATE 2017-08-23, SPSS FORMAT HAS CHANGED IN HAVEN, SO NEW DATA (2016) WITH FILES BOTH IN SPSS AND CSV FORMAT.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Everything else is the same, but the data is newer (2016, you can still work with the 2015 data in csv format, that will never break)&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;getting-started&#34;&gt;Getting started&lt;/h1&gt;

&lt;p&gt;You will need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Internet access&lt;/li&gt;
&lt;li&gt;Rstudio&lt;/li&gt;
&lt;li&gt;a recent version of R&lt;/li&gt;
&lt;li&gt;the packages: dplyr, ggplot2, readr.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You need to understand / apply&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;chaining commands using the pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) operator&lt;/li&gt;
&lt;li&gt;opening and closing of Rstudio, the assign (&lt;code&gt;&amp;lt;-&lt;/code&gt;)  operator&lt;/li&gt;
&lt;li&gt;recently used the dplyr commands (did you do the &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/blog/2016/02/22/from-spss-to-r-part2.html&#34;&gt;second&lt;/a&gt; lesson? you&amp;rsquo;re good then)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;starting-loading-the-file-and-a-first-look&#34;&gt;Starting loading the file and a first look&lt;/h2&gt;

&lt;p&gt;Start a new project in Rstudio or open a project you created in a previous session &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.
Copy the steps in your script or the console or follow the &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/scripts/introduction-to-ggplot2-part2.R&#34;&gt;script&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#location of files: &amp;#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/files&amp;#34;&lt;/span&gt;

link&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://raw.githubusercontent.com/RMHogervorst/cleancodeexamples/master/files/duo2016_tidy.csv&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Libraries to use&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# yes I use it almost daily&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;readr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# for the use of read_csv &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# (there is also a read.csv function in base r, but it has some undesirable properties)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# load the data&lt;/span&gt;
duo2015_tidy&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; read_csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;link&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# This is the same file we used in: &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# https://rmhogervorst.github.io/cleancode/blog/2016/02/24/creating-tidy-data.html&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# look at the data with View(duo2015_tidy) or&lt;/span&gt;
glimpse&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# often more meaningful&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The file contains the number of students per year per gender per program in Dutch Universities between 2011 and 2015.
Look around the dataset and get a sense of what it contains. Unfortunately for non-Dutch speakers, the set is entirely in Dutch&amp;hellip;  But I will explain the variables for you so far as I know.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PROVINCIE     province, which of the twelve &lt;a href=&#34;https://en.wikipedia.org/wiki/Provinces_of_the_Netherlands&#34;&gt;provinces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GEMEENTENUMMER    municipal number    No idea what basis this has&lt;/li&gt;
&lt;li&gt;GEMEENTENAAM      municipal name  (some municipals have changed names)&lt;/li&gt;
&lt;li&gt;SOORT INSTELLING  type of university regular or small&lt;/li&gt;
&lt;li&gt;BRIN.NUMMER.ACTUEEL no idea some sort of govermental number per university&lt;/li&gt;
&lt;li&gt;INSTELLINGSNAAM.ACTUEEL   University name at this moment (some have changed over time)&lt;/li&gt;
&lt;li&gt;CROHO.ONDERDEEL       CROHO stands for Central Registry Programs Higher Education&lt;/li&gt;
&lt;li&gt;CROHO.SUBONDERDEEL    ONDERDEEL means part, and subonderdeel subpart (every program in the Netherlands has a unique number&lt;/li&gt;
&lt;li&gt;OPLEIDINGSCODE.ACTUEEL    code of the program&lt;/li&gt;
&lt;li&gt;OPLEIDINGSNAAM.ACTUEEL    Name of the program (can change of course&amp;hellip;)&lt;/li&gt;
&lt;li&gt;OPLEIDINGSVORM    type of education, voltijd means fulltime, deeltijd means part time and duaal means dual, or a mix of working and studying&lt;/li&gt;
&lt;li&gt;OPLEIDINGSFASE.ACTUEEL might be recognizable; bachelor, master or bachelor propedeuse (first year of bachelor)&lt;/li&gt;
&lt;li&gt;YEAR      Yeah, I translated that one already&lt;/li&gt;
&lt;li&gt;GENDER    is actually also a dutch word meaning the same thing&lt;/li&gt;
&lt;li&gt;FREQUENCY how many students in this particalar group&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we know the structure of the dataset we can look at parts of it.&lt;/p&gt;

&lt;h2 id=&#34;slicing-and-dicing-your-set-while-exploring&#34;&gt;Slicing and dicing your set while exploring&lt;/h2&gt;

&lt;p&gt;The most important lesson of today is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;don&amp;rsquo;t save intermediate results / datasets / images&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In SPSS if you want to look at a subset of your data you would either create a selection group or save some results to a different file. While we can do that in R, it&amp;rsquo;s better to create a pipeline of data and change some of the steps. IT saves memory (mostly not important) but even better it keeps your dataset intact and prevents a filelist of over 200 files with uninspiring and meaningless names such as: &lt;code&gt;dataset1, dataset2AFTERSAVING, dataset456&lt;/code&gt; etc. This will keep your work, your workspace and your code &lt;strong&gt;clean&lt;/strong&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;We will first look at some details in the dataset. Follow along if you like but even better would be if you try to vary some steps. Instead of  &lt;code&gt;YEAR ==2016&lt;/code&gt; take &lt;code&gt;2011&lt;/code&gt; or only take master students. Learn by making mistakes and by following up on interesting side stories.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# First filter on 2015, full time and bachelor.&lt;/span&gt;
duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; View&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will display a subsample of your data. But for every unique program there are two rows. One for males (MAN) and one for females (VROUW).
You might not care for the seperate groups and want to combine them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; 
                                OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;combinedMF &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        View&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This might seem like a lot of typing, but you can just modify the last part of the commands by adding the group_by and summarize commands.&lt;/p&gt;

&lt;p&gt;An other thing you might have noticed, is that the previous data frame result is now gone and replaced by this result. That is fine, it was temporary anyways.&lt;/p&gt;

&lt;p&gt;An other question could be if the numbers per program changed over time?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2014&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; 
                                OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;combinedMF &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        View&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However there is just to much information to compare. Let&amp;rsquo;s see if we can visualize these numbers.
Now this might look a bit odd because we will combine a chain of commands with the pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) operator and then we add layers of the plot with the plus sign (&lt;code&gt;+&lt;/code&gt;)&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; YEAR&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;combinedMF &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; combinedMF&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I agree that this endresult is less then useful. But look at the code it&amp;rsquo;s really interesting.
This is a great time to take a little excursion&lt;/p&gt;

&lt;h3 id=&#34;a-small-excursion-into-chaining&#34;&gt;a small excursion into chaining&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Think back to part 2 of this course about chaining and dplyr&lt;/em&gt;
We started with the same chain that created a the summarized data frame. That data frame can be imported by ggplot. Remember that the pipe operator puts the end result as first argument in the command after it. &lt;em&gt;dplyr = layered grammar of data manipulation&lt;/em&gt; and &lt;em&gt;ggplot2 = layered grammar of graphics&lt;/em&gt; . So we have two sets of grammar here.&lt;/p&gt;

&lt;p&gt;The code above is just a simplified, much easier to read, notation of the following code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;TEMP1 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;   summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; YEAR&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;combinedMF &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# do you still see where the arguments of every command are?&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; TEMP1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; combinedMF&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see it&amp;rsquo;s hard to read what happened, or when things break, what arguments belong to which function. further more for every plot call you need to create a temporary dataset. One you will probably forget to remove afterwards.&lt;/p&gt;

&lt;p&gt;The pipe operator works with every command that starts with a data argument and there are ways to make it work with other commands. It really makes your life easier.&lt;/p&gt;

&lt;p&gt;End of excursion, why don&amp;rsquo;t we make some useful plots.&lt;/p&gt;

&lt;h2 id=&#34;making-plots-that-look-better&#34;&gt;Making plots that look better&lt;/h2&gt;

&lt;p&gt;There is a lot of information in this dataset. We will need to be more specific in our questions.
How many programs are there actually?&lt;/p&gt;

&lt;p&gt;There are 666 unique program names.&lt;/p&gt;

&lt;p&gt;What code would you use to find this out? &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Since every bachelor and masters program has a unique name and since bachelors generally give access to multiple masters, there are many many program names. But how many programs are there in the bachelor propedeuse phase?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        distinct&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The end result is a data frame with 141 cases/ rows. Look at the data frame.&lt;/p&gt;

&lt;p&gt;Is this a combination of males and females? Or are these really all the programs?&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:6&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:6&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;So there are 141 programs and many universities. Let&amp;rsquo;s first focus on one program in different universities. Two very popular programs in the Netherlands are Psychology&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:7&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:7&#34;&gt;7&lt;/a&gt;&lt;/sup&gt; and Law.
What happens here:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Rechtsgeleerdheid&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; 
		facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Take dataset&lt;/li&gt;
&lt;li&gt;only rows with  fulltime AND first year bachelor&lt;/li&gt;
&lt;li&gt;only rows with B psychology OR B law&lt;/li&gt;
&lt;li&gt;set up ggplot with year at the x axis, frequency at y axis and group by GENDER *&lt;/li&gt;
&lt;li&gt;make a line plot, colour by GENDER, and&lt;/li&gt;
&lt;li&gt;facet (make subplots) by municipal and program&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;*&lt;/code&gt; The setting up part &lt;code&gt;ggplot()&lt;/code&gt; doesn&amp;rsquo;t draw anything yet.&lt;/p&gt;

&lt;p&gt;Look at the plot. (I have recreated it here using &lt;code&gt;ggsave(&amp;quot;plot-psylawcities.png&amp;quot;)&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;{{ site.github.url}} /images/plot-psylawcities.png&#34; alt=&#34;first plot of Psychology and Law in different cities by gender over time&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is just a first plot, it&amp;rsquo;s far from pretty. It has no title, the years at the borders of psychology and law overlap, the name of the municipal/ city is not readable, and the colors of the gender are counter intuitive. If I had used these colors, blue for males and red for females would be more in line with western culture&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:8&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:8&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Another problem is that the Amsterdam numbers for Law are much lower then for Psychology, they don&amp;rsquo;t display so well on this scale. A separate plot for Psychology and Law would be better.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_colour_manual&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;values&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;lightblue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;pink&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&amp;rsquo;s address both color (going stereotype blue and pink) and program.
After my first plot, I found the lines a bit thin, so I set the size. I also used a manual color scale.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/plot-psypinkblue.png&#34; alt=&#34;plot with different colors only psychology&#34; /&gt;&lt;/p&gt;

&lt;p&gt;One of the odd things about rstudio is that if you click on the zoom button the plot looks good, but if you use ggsave it takes the uglier version in the side viewer. I guess I could change the settings in  the ggsave command&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:9&#34;&gt;9&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&#34;advanced-ggplot&#34;&gt;Advanced ggplot&lt;/h2&gt;

&lt;p&gt;The colors in the plot are not so bright. Which is actually a good thing for printing. But in this plot it can make it hard to read.&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s use some other custom colors.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_colour_manual&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;values&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;#3399ff&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;#ff00ff&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The colors are a number, how does that work?
Colors in R, or in all sorts of programs really, can be specified with their name: &amp;ldquo;red, magenta&amp;rdquo;, &amp;ldquo;cyan&amp;rdquo;, &amp;ldquo;black&amp;rdquo; etc. Or with their html code &amp;ldquo;#000fff&amp;rdquo; pick it with this &lt;a href=&#34;http://www.w3schools.com/colors/colors_picker.asp&#34;&gt;site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Take for instance the very ugly color &amp;ldquo;Aqua&amp;rdquo;, it has the name aqua, the html code #00ffff, rgb(0,255,255) and hsl(180,100%, 50%). Using a site such as the one above can help you in picking colours. to use in your plots. Try to plot the plot above with aqua or #00ffff as one of the values.&lt;/p&gt;

&lt;p&gt;An other way to change the colors is by using a color package.
One great package is the &lt;a href=&#34;http://www.r-bloggers.com/r-using-rcolorbrewer-to-colour-your-figures-in-r/&#34;&gt;color brewer package&lt;/a&gt;. Install the package and try &lt;code&gt;RColorBrewer::display.brewer.all(n=8, exact.n=FALSE)&lt;/code&gt; to see the different colors.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This looks somewhat better.
More information about colors and creating your own colors can be found at:
&lt;a href=&#34;http://www.cookbook-r.com/Graphs/Colors_%28ggplot2%29/&#34;&gt;http://www.cookbook-r.com/Graphs/Colors_%28ggplot2%29/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the previous lesson we used different themes to customize the plots.
We can change features of the plot like the title, axis labels, axis details and many more aspects.&lt;/p&gt;

&lt;p&gt;To add a title to a plot use the ggtitle command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
		ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So this works, but with the title the axis labels for years and frequency are redundant.
To remove parts of a plot we need to modify the theme settings. A theme is used for all aspects of the plot. where the axis are, what the labels are and so forth. To modify these parts of the plot you need the &lt;code&gt;theme()&lt;/code&gt; command. Inside the theme command you give the arguments &lt;code&gt;axis.title.x= element_blank()&lt;/code&gt; to remove the x axis or &lt;code&gt;legend.position= &amp;quot;bottom&amp;quot;&lt;/code&gt; to put the legend at the bottom of the plot.&lt;/p&gt;

&lt;p&gt;You don&amp;rsquo;t need to remember them all. Use the cookbook for r or search for what you want to change online.&lt;/p&gt;

&lt;p&gt;for example the following code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;axis.title.x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# changing multiple theme settings&lt;/span&gt;
              axis.title.y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# on a temporary basis, only for this plot&lt;/span&gt;
              legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
              strip.text.y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;angle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; vjust &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# make readable&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Produces the following plot (with &lt;code&gt;ggsave(&amp;quot;psychologystudentscities.png&amp;quot;, scale = 1.5)&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/cleancode/img/psychologystudentscities.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If you find yourself repeating the same theme changes in multiple plots, you are violating the DRY principle (Do not repeat yourself). ggplot changes are just lists in R, so you can save all the changes to a list and apply that list to your plots. for example:&lt;/p&gt;

&lt;p&gt;This is your plot&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first part is identical as before, but I&amp;rsquo;m a big fan of the minimal theme. It removes all sorts of chart junk.  However, you don&amp;rsquo;t like the way the cities are placed. You want it horizontal.
And you don&amp;rsquo;t like the labels on the axes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;axis.title.x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# changing multiple theme settings&lt;/span&gt;
              axis.title.y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# on a temporary basis, only for this plot&lt;/span&gt;
              legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
              strip.text.y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;angle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; vjust &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# make readable&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is nice, but you want to recreate the same style for many programs and like any person you hate to copy paste everything. It is time for your own theme.&lt;/p&gt;

&lt;p&gt;A ggtheme has every option that you could set defined. So it is possible to create that from scratch, I do not recommend it. The best option is to use a predefined theme and overlay your changes, like you already did above, you first called the theme_minimal() layer and than changed some theme elements.&lt;/p&gt;

&lt;p&gt;In practice:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# This is the theme, it is simply the minimal theme with the &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# modifications added. &lt;/span&gt;
studytheme &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; 
        theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;axis.title.x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# changing multiple theme settings&lt;/span&gt;
              axis.title.y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# on a temporary basis, only for this plot&lt;/span&gt;
              legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
              strip.text.y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;angle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; vjust &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# make readable&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        studytheme&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now with the Law program.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Rechtsgeleerdheid&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Law students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        studytheme&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure class=&#34;half&#34;&gt;
    &lt;img src=&#34;/cleancode/img/lawstudents-clean.png&#34; alt=&#34;image&#34;&gt;
    &lt;img src=&#34;/cleancode/img/psystudents-clean.png&#34; alt=&#34;image&#34;&gt;
    &lt;figcaption&gt;law and psychology students plots&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;summary-and-wrapping-it-up&#34;&gt;Summary and wrapping it up&lt;/h1&gt;

&lt;p&gt;In the previous lessons you learned how to make basic plots, how to select, filter and combine the dplyr verbs. This lesson you combined these skills. Furthermore you can now customize your plots, create a style/theme and apply that theme to your plots. Making it very consistent.&lt;/p&gt;

&lt;p&gt;This was the final introduction to R from SPSS. From now on, you are a R user. You know the basic commands, you can find what you are looking for online or in the help function,  and you are able to generate advanced plots.&lt;/p&gt;

&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;

&lt;p&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:http-www-r-bloggers-com-the-easiest-way-to-learn-ggplot2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:http-www-r-bloggers-com-the-easiest-way-to-learn-ggplot2&#34;&gt;0&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cookbook-r.com/Graphs/&#34;&gt;http://www.cookbook-r.com/Graphs/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;more information about themes &lt;a href=&#34;http://docs.ggplot2.org/dev/vignettes/themes.html&#34;&gt;http://docs.ggplot2.org/dev/vignettes/themes.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;use-examples-ggplot2&#34;&gt;Use examples ggplot2&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;examples of graphics. &lt;a href=&#34;http://r4stats.com/examples/graphics-ggplot2/&#34;&gt;http://r4stats.com/examples/graphics-ggplot2/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Color palettes in R. &lt;http://vis.supstat.com/2013/04/plotting-symbols-and-color-palettes/ &gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;notes&#34;&gt;NOTES&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Tidying was done in a different blog post: &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/blog/2016/02/24/creating-tidy-data.html&#34;&gt;https://rmhogervorst.github.io/cleancode/blog/2016/02/24/creating-tidy-data.html&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;R projects keep you code and workspace setting contained. So you can work with wildly different settings without resetting them between sessions.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;I mean, I had to refer to the name of this blog at least once. But I think it&amp;rsquo;s really important. I always lose track of all the subfiles, so this is much better. and faster.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;It is odd, and hadley wickham, the creator of ggplot and dplyr (which imported the pipe operator) , agrees. But this is the way it is and changing it will break the code of millions of users&amp;hellip;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;There are multiple ways to do this but I would use this &lt;code&gt;length(unique(duo2015_tidy$OPLEIDINGSNAAM.ACTUEEL))&lt;/code&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;No these are the programs in total, because of the &lt;code&gt;distinct()&lt;/code&gt; command. That is the dplyr way of selecting unique cases.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:6&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:7&#34;&gt;Psychology is arguably a study often chosen for lack of ideas: &amp;ldquo; I didn&amp;rsquo;t really know what to choose so I chose something social&amp;hellip;&amp;rdquo;. I&amp;rsquo;m not sure how many students have this attitude.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:7&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:8&#34;&gt;Or at least in the Netherlands babyblue is a common color for males. Red not so much specific for females, but pink would be.&lt;br /&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:8&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:9&#34;&gt;I actually found &lt;code&gt;ggsave(&amp;quot;nameofplot.png&amp;quot;,scale = 1.5)&lt;/code&gt; to work nicely.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tidying your data</title>
      <link>/cleancode/blog/2016/02/24/content/post/2016-02-24-creating-tidy-data/</link>
      <pubDate>Wed, 24 Feb 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/02/24/content/post/2016-02-24-creating-tidy-data/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;To make analyses work we often need to change the way files look.
Sometimes information is recorded in a way that was very efficient for input but not workable for your analyses. In other words, the data is messy and we need to
make it tidy.&lt;/p&gt;

&lt;p&gt;Tidy data means &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Each variable forms a column.&lt;/li&gt;
&lt;li&gt;Each observation forms a row.&lt;/li&gt;
&lt;li&gt;Each type of observational unit forms a table.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Today we will work with the DUO dataset about the number of students per program in the past 5 years &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; which was used in lesson 2 of &lt;a href=&#34;{{ site.github.url }}/blog/2016/02/22/from-spss-to-r-part2.html&#34;&gt;from-spps-to-r&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The raw datafile in r looks like this:
&lt;img src=&#34;/cleancode/img/tidy-duo-before.PNG&#34; alt=&#34;messy data duo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Which is efficient in space, but not useful for analyses. For many analyses you will need to refer to multiple columns. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;is the total number of people (both males and females) in 2012 different from the total in 2015 in the regular bachelor propedeuses?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The format of the raw file is  also called the wide format.&lt;br /&gt;
What we want is a long format like this:
&lt;img src=&#34;/cleancode/img/tidy-duo-endresult.PNG&#34; alt=&#34;tidy data duo&#34; /&gt;
Where every observation (the number of people in the group) has it&amp;rsquo;s own row.&lt;/p&gt;

&lt;p&gt;What you need to know before we start:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the dplyr package, the pipe (%&amp;gt;%) operator, see&lt;a href=&#34;{{ site.github.url }}/blog/2016/02/22/from-spss-to-r-part2.html&#34;&gt;from-spss-to-r-2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;subsetting, data frames, basic manipulation of data&lt;/li&gt;
&lt;li&gt;how to install packages, see &lt;a href=&#34;{{ site.github.url }}/blog/2016/02/20/from-spss-to-r-part1.html&#34;&gt;from-spss-to-r-1&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;preparation&#34;&gt;Preparation&lt;/h3&gt;

&lt;p&gt;Set up a project or clean your workspace in r. Follow the instructions by copying the code or see the script &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/scripts/tidyr-on-duo-data.R&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# we will use the tidy r package&lt;/span&gt;
install.packages&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;tidyr&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;readr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;tidyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
link&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://www.duo.nl/open_onderwijsdata/images/01.%20Ingeschrevenen%20wo-2015.csv&amp;#34;&lt;/span&gt;
ingeschreven_wo_2015&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;read_csv2&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;link&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; trim_ws &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#uses the ; notation therefore csv2&lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ingeschreven_wo_2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we look at the tail end of the data.frame we see some weird cases, some are empty and some are  summary variables.&lt;/p&gt;

&lt;h2 id=&#34;tasks&#34;&gt;Tasks&lt;/h2&gt;

&lt;p&gt;To get to tidy data we need to do a few things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;remove final two rows that contain whitespaces and totals&lt;/li&gt;
&lt;li&gt;shape the data into frequencies per year per gender&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;removing-the-final-two-rows&#34;&gt;Removing the final two rows&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ingeschreven_wo_2015&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2415&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2417&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;  
&lt;span class=&#34;c1&#34;&gt;#show the bottom part of the data.frame &lt;/span&gt;
duo2015&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;ingeschreven_wo_2015&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2416&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2417&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# compare:&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;tail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ingeschreven_wo_2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# with&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;tail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;shape-the-data-into-frequencies-per-year-per-gender&#34;&gt;Shape the data into frequencies per year per gender&lt;/h3&gt;

&lt;p&gt;Check the description in the vignette to see some examples and use cases of tidyr.  &lt;code&gt;vignette(&amp;quot;tidy-data&amp;quot;)&lt;/code&gt;
First we shape the file from  wide to long format, the columns 13 - 22
contain both year and gender. Which I would like to have seperated.
In this first step we gather all the data from the columns 13 to 22
and put turn them into cases.
I think this is equivalent to Restructure in SPSS?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; gather&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; frequency&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; View&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you look at this temporary file you see that it contains 24150 cases  and only 14 columns. Compared to the 2415 cases and 22 columns in the original set.&lt;br /&gt;
Unfortunately the 13th column contains both year and gender. Let&amp;rsquo;s fix this.&lt;/p&gt;

&lt;h3 id=&#34;separating-the-year-gender-column&#34;&gt;Separating the year-gender column&lt;/h3&gt;

&lt;p&gt;Again this is temporary file. Only when we are happy with the endresult wil we save the file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; gather&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; frequency&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        separate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;year&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;gender&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        arrange&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`OPLEIDINGSNAAM ACTUEEL`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; gender&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;  
		&lt;span class=&#34;c1&#34;&gt;# sort on name, year gender&lt;/span&gt;
        View &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That works, let&amp;rsquo;s create a new datafile. The commands remain the same but we assign the entire thing to a new name:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;duo2015  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        gather&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        separate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;YEAR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;GENDER&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        arrange&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`OPLEIDINGSNAAM ACTUEEL`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We left out the View command, because that would show it to the Viewer, but we need a new data.frame. The last command in the chain, &lt;code&gt;arrange&lt;/code&gt; , does not really change the file, but orders the rows in a different way.
The next step could be saving it to a new csv file. But something is bothering me.&lt;/p&gt;

&lt;h2 id=&#34;cleaning-up-some-variablenames&#34;&gt;Cleaning up some variablenames&lt;/h2&gt;

&lt;p&gt;Some of the variable names (columnnames) contain spaces, for example: OPLEIDINGSNAAM ACTUEEL. we can access those variables with the backtick: &lt;code&gt;duo2015_tidy$`OPLEIDINGSNAAM ACTUEEL`&lt;/code&gt;  but it&amp;rsquo;s not pretty, often confusing and prone to mistakes. Let&amp;rsquo;s replace the columnnames with a bar in place of the space.First the command then the explanation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;gsub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The command &lt;code&gt;names()&lt;/code&gt;  returns the variablenames, the command gsub uses pattern recognition and  replacement (for more info see &lt;code&gt;?gsub&lt;/code&gt;).
The first argument of gsub is what to recognize, (&amp;rdquo; &amp;ldquo;) meaning spaces
the second argument is the replacement. I chose a bar (&amp;ldquo;-&amp;rdquo;), but nothing (&amp;ldquo;&amp;rdquo;) or a dot (&amp;ldquo;.&amp;rdquo;) would work equaly well.
The third argument is the vector to apply this principle on, the names of the variables in this case. Finally we assign the endresult of that command to names(duo2015).&lt;/p&gt;

&lt;p&gt;So in one line we replaced the spaces in the names of the variables and assigned the new columnnames.&lt;/p&gt;

&lt;p&gt;Then save it to a file:
&lt;code&gt;write_csv(duo2015_tidy, &amp;quot;files/duo2015_tidy.csv&amp;quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That&amp;rsquo;s it, we&amp;rsquo;re done. Your data is tidy. and ready for analyses or plots.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Wickham, Hadley. “Tidy Data.” Journal of Statistical Software 59, no. 10 (2014). doi:10.18637/jss.v059.i10.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;&lt;a href=&#34;https://www.duo.nl/open_onderwijsdata/databestanden/ho/Ingeschreven/wo_ingeschr/Ingeschrevenen_wo1.jsp&#34;&gt;https://www.duo.nl/open_onderwijsdata/databestanden/ho/Ingeschreven/wo_ingeschr/Ingeschrevenen_wo1.jsp&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>From spss to R, part 2</title>
      <link>/cleancode/blog/2016/02/22/content/post/2016-02-22-from-spss-to-r-part2/</link>
      <pubDate>Mon, 22 Feb 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>/cleancode/blog/2016/02/22/content/post/2016-02-22-from-spss-to-r-part2/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;In this lesson we will open a .sav file in Rstudio and manipulate the data.frame. We will select parts of the file and create some simple overviews. First time with R? No problem, see lesson &lt;a href=&#34;{{ site.github.url }}/blog/2016/02/20/from-spss-to-r-part1.html#introduction&#34; title=&#34;From spss to R, part 1&#34;&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;toc
{:toc}&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;download-a-sav-spss-file&#34;&gt;Download a .sav (SPSS) file&lt;/h2&gt;

&lt;p&gt;I downloaded the following dataset from DUO (Dienst uitvoering onderwijs): [&lt;strong&gt;Aantal wo ingeschrevenen (binnen domein ho)&lt;/strong&gt;][3].
This dataset has a &lt;span title=&#34;creative commons version 0&#34;&gt; cc0 &lt;/span&gt; declaration, which means it is in the public domain and we can do anything we want with this &lt;span title=&#34;thank you Dutch Goverment!&#34; &gt; file. &lt;/span&gt;
More information about the file can be found in the &lt;a href=&#34;https://www.duo.nl/open_onderwijsdata/images/Toelichting%2001.%20Ingeschrevenen%20wo.pdf&#34; title=&#34;all in Dutch I&#39;m afraid&#34;&gt;Toelichting.pdf&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;UPDATE 2017-08-23: DUO HAS UPDATED THEIR SITE, BREAKING EVERYTHING. THIS IS CURRENLTY THE DOWNLOAD PAGE: &lt;a href=&#34;https://www.duo.nl/open_onderwijsdata/databestanden/ho/ingeschreven/wo-ingeschr/ingeschrevenen-wo1.jsp&#34;&gt;https://www.duo.nl/open_onderwijsdata/databestanden/ho/ingeschreven/wo-ingeschr/ingeschrevenen-wo1.jsp&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We can already work with this file, because it is in an open format, but for this exercise I will transform it to a .sav file. &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/scripts/dplyr-example-duo.R&#34; title=&#34;Github example of csv -&amp;gt; .sav with haven&#34;&gt;See the transformation here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Download the .sav &lt;a href=&#34;{{ site.github.url }}/datasets/ingeschrevenwo2015.sav&#34;&gt;file&lt;/a&gt; to start. Do remember where you put the file, you will need it later.
Or let R download the file, even better for reasons of &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/tags/#reproducibility&#34; title=&#34;all posts about repro-research&#34;&gt;reproducability&lt;/a&gt;.
Consider starting a new &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/tags/#rproject&#34; title=&#34;with a rProject you files will be more organized&#34;&gt;project&lt;/a&gt; for this example.&lt;/p&gt;

&lt;h1 id=&#34;opening-the-file-in-rstudio&#34;&gt;Opening the file in Rstudio&lt;/h1&gt;

&lt;p&gt;Fire up your trusty rstudio.&lt;/p&gt;

&lt;p&gt;You will need the following packages:
haven, dplyr. Click on install:
&lt;img src=&#34;/cleancode/img/installing-packages-rstudio.PNG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;and fill in the names, or type `install.packages(&amp;ldquo;haven&amp;rdquo;, &amp;ldquo;dplyr&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;Follow the description below or look at the complete script at:&lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/scripts/dplyr-example-duo.R&#34;&gt;github.com/RMHogervorst/cleancodeexamples&lt;/a&gt;. The script and this page are more or less the same (spelling might be better here ;p ).&lt;/p&gt;

&lt;h3 id=&#34;opening-the-spss-file-and-getting-it-in-r&#34;&gt;Opening the SPSS file and getting it in R&lt;/h3&gt;

&lt;p&gt;{% highlight r linenos %}&lt;/p&gt;

&lt;h1 id=&#34;necessary-packages&#34;&gt;necessary packages: ####&lt;/h1&gt;

&lt;p&gt;library(haven)
library(dplyr)&lt;/p&gt;

&lt;h1 id=&#34;location-of-the-datafile-online&#34;&gt;location of the datafile online&lt;/h1&gt;

&lt;p&gt;link &amp;lt;- &amp;ldquo;&lt;a href=&#34;https://cdn.rawgit.com/RMHogervorst/cleancode/gh-pages/datasets/duo2016.sav&amp;quot;&#34;&gt;https://cdn.rawgit.com/RMHogervorst/cleancode/gh-pages/datasets/duo2016.sav&amp;quot;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;update-2017-08-23-this-is-a-new-spss-file-from-2016-data&#34;&gt;UPDATE 2017-08-23 THIS IS A NEW SPSS FILE FROM 2016 DATA.&lt;/h1&gt;

&lt;h1 id=&#34;load-the-sav-file-into-r-using-the-link&#34;&gt;load the .sav file into R using the link&lt;/h1&gt;

&lt;p&gt;wo2015 &amp;lt;- read_sav(link)
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;So we activated the necessary packages, saved a link to the datafile, told the &lt;code&gt;read_sav()&lt;/code&gt; command where to find the file, and finally assigned the output of the command to a name &lt;code&gt;wo2015&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;exploration-of-the-data-frame-in-base-r&#34;&gt;Exploration of the data frame in base-R&lt;/h3&gt;

&lt;p&gt;The following commands are very often the first things you will use when you get your hands on a new dataset.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;str&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# str is short for structure&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# what are the columnsnames?&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# create a table&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;sapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;#shows the top part of the data, &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# there is also a tail() function you could try.&lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;SOORT.INSTELLING&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Rstudio interface already gives you all sorts of information. Just click on all the things in the environment window.
the structure command &lt;code&gt;str()&lt;/code&gt; displays in your console, and is identical to what Rstudio tells you if you click the blue button in front of the data.frame.
The table command is very useful, but when there are many values, you can get a cleaner look by &lt;code&gt;View(table())&lt;/code&gt;. The &lt;code&gt;sapply()&lt;/code&gt; command is one you might use a lot in the future, but know now that it repeats a function over the columns of your data.frame and gives you a simple result back.
Most of the columns are of class character, some are numeric, and two are of the class &amp;ldquo;labelled&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;When we used the command &lt;code&gt;View(table(wo2015$SOORT.INSTELLING))&lt;/code&gt; there were actually three commands in sequence.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;take column SOORT.INSTELLING from dataframe wo2015: &lt;code&gt;wo2015$SOORT.INSTELLING&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;create a table of that: &lt;code&gt;table()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;put the result into the Viewer: &lt;code&gt;View()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When looking at the endresult from the last command, you can see the frequencies of the types of SOORT INSTELLING (type of university).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do the same thing (display a table of frequencies) with INSTELLINGSNAAM.ACTUEEL (name of university)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How many universities are there?&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;some-haven-and-spss-specific-things&#34;&gt;Some Haven and SPSS specific things&lt;/h3&gt;

&lt;p&gt;As you know SPSS cannot work with factor (nominal) values.
You have to tell SPSS that the variable is a nominal variable
and you have to create numbered values, with a label assigned to the values &lt;em&gt;(3 = male, 4 = female)&lt;/em&gt;.
When you import a .sav file into R that information can get lost. But on the other hand you might want to use the numbered information. As an compromise the haven package imports the numbers and the labels. So can we find the labels?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kp&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# no, that just tells us that it&amp;#39;s labelled. &lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;attributes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# the command attributes gives you back all the metadata&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see the labels and numbers. 1 = deeltijd (part time education),
2 = duaal (), 3 is voltijd (full time)
The attributes command works on everything try: &lt;code&gt;attributes(wo2015[1,2])&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So we can display the labels with number. but we would rather use that information
in R. R has no problem with nominal variables. And furthermore you won&amp;rsquo;t make
mistakes about which form of eduction your talking about.&lt;/p&gt;

&lt;p&gt;the haven package has a function as_labeled. So let&amp;rsquo;s make the OPLEIDINGSVORM column a bit more informative:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;as_factor&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now look back at wo2015
Nothing has changed!
That&amp;rsquo;s right, you need to assign the result of the operation back to a column&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; as_factor&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Do the same thing to OPLEIDINGSFASE.ACTUEEL&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;data-manipulation-with-dplyr&#34;&gt;data manipulation with dplyr&lt;/h2&gt;

&lt;p&gt;Data manipulation was sometimes hard with r. However the &lt;a href=&#34;https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html&#34; title=&#34;Dplyr is a package for manipulating dataframes. this link is an introduction by the creator&#34;&gt;dplyr&lt;/a&gt; package changed everything.&lt;/p&gt;

&lt;h2 id=&#34;dplyr-functions&#34;&gt;dplyr Functions&lt;/h2&gt;

&lt;p&gt;There are 7 &amp;lsquo;verbs&amp;rsquo; that do all the work.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;filter() (and slice())
arrange()
select() (and rename())
distinct()
mutate() (and transmute())
summarise()
sample_n() and sample_frac()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Filter filters rows, select selects columns, distinct is a variant of unique and mutate creates new variables. These verbs are tools, the plyrs of a dataframe. Very generic tools that help you select and filter your data.
All the verbs have the same arguments: first argument = dataframe, the next arguments are for the function.&lt;/p&gt;

&lt;p&gt;But don&amp;rsquo;t believe me on my word, let&amp;rsquo;s get to work.&lt;/p&gt;

&lt;h3 id=&#34;select&#34;&gt;SELECT&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;SELECT (dataframe, variablename1, variablename2, etc)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Select is used to select variables (columns) in your data frame.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSVORM2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;j2012.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; j2013.MAN &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have selected 4 variables. as you can see in the output. It also says: Source: local data frame [2,417 x 4]  meaning 2417 cases and 4 variables.&lt;/p&gt;

&lt;h3 id=&#34;filter&#34;&gt;FILTER&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;FILTER (dataframe, ways to filter)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Filter selects cases (rows of the dataframe).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Limburg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The endresult is a data.frame [91 x 24] with all columns but
 with only the cases in the Limburg province&lt;/p&gt;

&lt;h3 id=&#34;combining-filter-and-select&#34;&gt;combining FILTER and SELECT&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Limburg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;PROVINCIE&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSVORM2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;j2012.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; j2013.MAN &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I will show you a more readable form later on, but this works.
The data frame has the 91 cases from the filter action and the 4 columns from the select action. This even works the other way around:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSVORM2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;j2012.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; j2013.MAN &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Limburg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But not always:
&lt;code&gt;filter(select(wo2015, OPLEIDINGSVORM2,j2012.MAN, j2013.MAN ), PROVINCIE == &amp;quot;Limburg&amp;quot;)
&lt;/code&gt; will not work (try it).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Why not?&lt;/em&gt;
The different functions accept data.frames as input and give a data.frame as output. The data.frame from the &lt;strong&gt;select&lt;/strong&gt; action does not contain the column PROVINCIE. Therefore the &lt;strong&gt;filter&lt;/strong&gt; function can&amp;rsquo;t select on that variable.&lt;/p&gt;

&lt;h3 id=&#34;arrange-distinct&#34;&gt;ARRANGE &amp;amp; DISTINCT&lt;/h3&gt;

&lt;p&gt;The functions &lt;code&gt;arrange()&lt;/code&gt; and &lt;code&gt;distinct()&lt;/code&gt; sort the data and select the unique values from a data frame:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;arrange&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; GEMEENTENUMMER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# data frame [2,417 x 24] all cases, all variables.&lt;/span&gt;
distinct&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; GEMEENTENAAM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# data frame [16 x 24]  (all the variables, only unique gemeentenamen)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;mutate&#34;&gt;MUTATE&lt;/h3&gt;

&lt;p&gt;MUTATE(dataframe, name_of new variable = action).
Mutate creates new variables from other variables.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s find the difference between 2015 and 2014 in males.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mutate(wo2015, from14to15M = j2015.MAN - j2014.MAN)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ok, but what happened?
We can&amp;rsquo;t see the new variable from14to15M, it is there because the output says:
&lt;code&gt;Variables not shown: CROHO.ONDERDEEL (chr), [......] from14to15M (dbl)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s see.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;test&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;test&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Scroll to the end of the viewer or use &lt;code&gt;test$from14to15M&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An other way would be to select the variables first.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But these nested commands become complicated very fast. You lose the overview of your actions. But since 2014 we can use a new way to type commands in R.&lt;/p&gt;

&lt;h1 id=&#34;piping-chaining-and-dplyr&#34;&gt;Piping / chaining and dplyr&lt;/h1&gt;

&lt;p&gt;With the pipe operator (%&amp;gt;%) you can chain the commands together.
The functions work the same but it is much easier to read.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#from:&lt;/span&gt;
select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# to:&lt;/span&gt;
wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# or even better&lt;/span&gt;
wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# much easier to read! &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The pipe operator puts the data.frame from the left side as first argument in the right side.&lt;/p&gt;

&lt;p&gt;Read the pipe operator as THEN:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# take the dataframe, THEN mutate                       THEN select these variables.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Take the data.frame, THEN mutate                       THEN select these variables.
The commands follow in the way that you use them instead of nested in each other.&lt;/p&gt;

&lt;h3 id=&#34;summarize-summarise-both-work&#34;&gt;SUMMARIZE / SUMMARISE (both work)&lt;/h3&gt;

&lt;p&gt;Use summarize to apply functions over groups of cases. For instance the mean of an entire column.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;summarize&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# if one value is missing (NA)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# there is no mean value. &lt;/span&gt;
summarize&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# this way we remove the missings&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But perhaps you would like to know the mean number of students per opleidingsfase?
Summarize works with &lt;code&gt;group_by&lt;/code&gt;, let&amp;rsquo;s use that pipe operator again:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSFASE.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Chaining can make things very easy.
Let&amp;rsquo;s take numbers in zuid-holland only&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zuid-Holland&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# R will continue on the following line&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSFASE.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;# It also helps in readability&lt;/span&gt;
        summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Grouping can be done on multiple levels and with multiple arguments:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zuid-Holland&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Limburg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# | means or&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSFASE.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# That was an OR operator, there is also an AND.&lt;/span&gt;
wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zuid-Holland&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;  
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; number &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# n() gives a count&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;summarize&lt;/code&gt; command can make multiple columns (remember that every output is also a dataframe).&lt;/p&gt;

&lt;p&gt;Finally a filter action with numbers. Just to show you that that works as well.
We start with all the cases, &lt;strong&gt;THEN&lt;/strong&gt; only take the cases (rows) where variable j2011.VROUW has less or equal to 10, &lt;strong&gt;THEN&lt;/strong&gt; take only the propedeuse cases &lt;strong&gt;THEN&lt;/strong&gt; filter the cases with more then 10 cases and &lt;strong&gt;THEN&lt;/strong&gt; group the cases by provincie, and &lt;strong&gt;THEN&lt;/strong&gt; count the number of cases per province.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2011.VROUW &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# so less or equal to 10 women in 2011&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# multipe filters? no problem.&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.VROUW &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# more then 10 in 2015. &lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarize&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;number_of_programs &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In other words:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In every province, how many programs had less then 10 women in 2011 and more then 10 in 2015?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;review&#34;&gt;Review&lt;/h1&gt;

&lt;p&gt;In this lesson you have learned to open .sav files with haven,
how to change labelled values from the Haven package, and worked with most of the dplyr commands.&lt;/p&gt;

&lt;h2 id=&#34;next-time&#34;&gt;Next time:&lt;/h2&gt;

&lt;p&gt;dplyr is also called the grammar of data manipulation.
In the next lesson we will take on the grammar of graphics with ggplot2,
see you then.&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;p&gt;[3]: &lt;https://www.duo.nl/open_onderwijsdata/databestanden/ho/Ingeschreven/wo_ingeschr/Ingeschrevenen_wo1.jsp &gt; &amp;ldquo;Because this was the first dataset I found, but this dataset is actually useful for me in my work as well&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h3&gt;

&lt;p&gt;The following introduction is better than I could have made:&lt;/p&gt;

&lt;p&gt;and here is some background information&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html&#34;&gt;https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>