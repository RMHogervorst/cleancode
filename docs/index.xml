<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clean Code (and R-fun)</title>
    <link>http://rmhogervorst.nl/cleancode/</link>
    <description>Recent content on Clean Code (and R-fun)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>hogervorst.rm@gmail.com (Roel M. Hogervorst)</managingEditor>
    <webMaster>hogervorst.rm@gmail.com (Roel M. Hogervorst)</webMaster>
    <lastBuildDate>Tue, 29 May 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="http://rmhogervorst.nl/cleancode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sentiment of Security Now! over time</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2018/05/29/sentiment-of-security-now-over-time/</link>
      <pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2018/05/29/sentiment-of-security-now-over-time/</guid>
      <description>&lt;p&gt;If you believe some people, everything is getting worse&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. More so in infosec. For the past few years I listened to many many hours of podcasts, many hours where spent on the weekly show &lt;a href=&#34;https://twit.tv/shows/security-now&#34;&gt;Security Now!&lt;/a&gt;. The hosts Steven Gibson and Leo Laporte have been talking about security related news every week over 13 years. Although the content has changed over time, there used to be more explanations but the majority of time is now filled with news, we could use the sentiment in the episodes to see if ‘everything is getting worse’. Has the sentiment of the security now! podcast changed over time? It helps that every episode is transcribed into text so we can use natural language processing tools to work through this problem.&lt;/p&gt;
&lt;div id=&#34;extracting-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Extracting the data&lt;/h2&gt;
&lt;p&gt;To gather and extract the relevant information from the transcripts I point you kindly to a seperate github page where I explain how I downloaded every episode and extracted the structure. &lt;a href=&#34;https://github.com/RMHogervorst/NLP_SN&#34; class=&#34;uri&#34;&gt;https://github.com/RMHogervorst/NLP_SN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I asked permission to scrape all the transcripts but I’m not entirely sure if I can share the content. In any case I’d guide you to the links at the bottom of this page with all the archive. I might share the rda file with the episode information and transcripts into 1 dataframe.&lt;/p&gt;
&lt;p&gt;What I ended up with is a dataframe with 664 rows (the number of episodes today) and 9 columns.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidytext)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ───────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ──&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✔ ggplot2 2.2.1.9000     ✔ purrr   0.2.5     
## ✔ tibble  1.4.2          ✔ dplyr   0.7.5     
## ✔ tidyr   0.8.1          ✔ stringr 1.3.1     
## ✔ readr   1.1.1          ✔ forcats 0.3.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Conflicts ──────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(widyr) 
if(!file.exists(&amp;quot;df_sn.RDS&amp;quot;)){
    download.file(
        url = &amp;quot;https://github.com/RMHogervorst/NLP_SN/raw/master/df_sn.RDS&amp;quot;,
        destfile =  &amp;quot;df_sn.RDS&amp;quot;,cacheOK = TRUE)    
}

df_sn &amp;lt;- read_rds(&amp;quot;df_sn.RDS&amp;quot;)  
#df_sn &amp;lt;- read_rds(&amp;quot;../NLP_SN/df_sn.RDS&amp;quot;) # when working locally
# 
# Every week / or once a month at least I will update the file with new transcript(s) so your data could be newer than this post.
#dim_desc(df_sn)
tail(df_sn,2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 9
##   path             source date  description ep_nr hosts teaser title text 
##   &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;lis&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;lis&amp;gt;
## 1 data//sn-663.txt https… May … This week …   663 &amp;lt;lis… It&amp;#39;s … Ultr… &amp;lt;tib…
## 2 data//sn-664.txt https… May … This week …   664 &amp;lt;lis… It&amp;#39;s … Spec… &amp;lt;tib…&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The text column contains a tibble with a row for everytime anyone speaks untill the other takes over. The length&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_sn[664,9][[1]][[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 139 x 3
##    linenr text                                                     speaker
##     &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;                                                    &amp;lt;chr&amp;gt;  
##  1      1 This is Security Now! with Steve Gibson, Episode 664, r… LEO    
##  2      2 Yay, Leo, great to be with you again, as always.         STEVE  
##  3      3 Always a pleasure.                                       LEO    
##  4      4 Yeah, we scrambled here a little bit at the end because… STEVE  
##  5      5 [Crosstalk] half an hour ago.  No, but I also figured y… LEO    
##  6      6 &amp;quot;Well, yeah.  Two weeks ago the news leaked through Hei… STEVE  
##  7      7 They were presumably waiting to disclose until companie… LEO    
##  8      8 Yes.  And even so, I mean, this is - what we heard was … STEVE  
##  9      9 Right.                                                   LEO    
## 10     10 I can&amp;#39;t square that with the news of two because all we… STEVE  
## # ... with 129 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Steve talks a lot more then Leo, and we see that in the number of words per line of a single episode:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_sn[664,9][[1]][[1]] %&amp;gt;% 
    mutate(
        nr_char = str_length(text),
        N_words = str_count(text, &amp;quot;\\w+&amp;quot;)
        ) %&amp;gt;% 
    ggplot(aes(linenr, N_words, fill = speaker))+
    geom_col()+
    labs(
        title = &amp;quot;Number of words in every line in episode 664&amp;quot;,
        subtitle = &amp;quot;Steve talks a lot more than Leo (not surprising)&amp;quot;,
        x = &amp;quot;line number&amp;quot;, y = &amp;quot;Number of words (log2 scale)&amp;quot;,
        caption = &amp;quot;Transcripts Security Now! - 664&amp;quot;
    )+
    scale_y_continuous(trans = &amp;quot;log2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/cleancodepost/2018-05-29-sentiment-of-security-now-over-time_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Interestingly my scraper seems to not have detected who said the words on line 45. It was Steve.&lt;/p&gt;
&lt;p&gt;It might be better to use an average over the episode&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_sn[664,9][[1]][[1]] %&amp;gt;% 
    mutate(
        N_words = str_count(text, &amp;quot;\\w+&amp;quot;),
        speaker = ifelse(is.na(speaker), &amp;quot;STEVE&amp;quot;, speaker)
        ) %&amp;gt;% 
    ggplot(aes(speaker, N_words, fill = speaker))+
    geom_violin()+
    geom_jitter(height = 0,width = .2, alpha  = 2/3)+
    scale_y_continuous(trans = &amp;quot;log2&amp;quot;)+
    labs(
        title = &amp;quot;Number of words in every line in episode 664&amp;quot;,
        subtitle = &amp;quot;Steve has a few more long pieces&amp;quot;,
        x = &amp;quot;&amp;quot;, y = &amp;quot;Number of words (log2 scale)&amp;quot;,
        caption = &amp;quot;Transcripts Security Now! - 664&amp;quot;
    )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/cleancodepost/2018-05-29-sentiment-of-security-now-over-time_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;links&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.grc.com/securitynow.htm&#34;&gt;Archive of transcripts and audio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;state-of-the-machine&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;State of the machine&lt;/h5&gt;
&lt;p&gt;&lt;details&gt; &lt;summary&gt; At the moment of creation (when I knitted this document ) this was the state of my machine: &lt;click&gt; &lt;/summary&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessioninfo::session_info()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ─ Session info ──────────────────────────────────────────────────────────
##  setting  value                       
##  version  R version 3.4.4 (2018-03-15)
##  os       Ubuntu 18.04 LTS            
##  system   x86_64, linux-gnu           
##  ui       X11                         
##  language (EN)                        
##  collate  en_US.UTF-8                 
##  tz       Europe/Amsterdam            
##  date     2018-06-01                  
## 
## ─ Packages ──────────────────────────────────────────────────────────────
##  package     * version    date       source                            
##  assertthat    0.2.0      2017-04-11 CRAN (R 3.4.3)                    
##  backports     1.1.2      2017-12-13 CRAN (R 3.4.3)                    
##  bindr         0.1.1      2018-03-13 CRAN (R 3.4.4)                    
##  bindrcpp    * 0.2.2      2018-03-29 CRAN (R 3.4.4)                    
##  blogdown      0.6        2018-04-18 CRAN (R 3.4.4)                    
##  bookdown      0.7        2018-02-18 CRAN (R 3.4.3)                    
##  broom         0.4.4      2018-03-29 CRAN (R 3.4.4)                    
##  cellranger    1.1.0      2016-07-27 CRAN (R 3.4.3)                    
##  cli           1.0.0      2017-11-05 CRAN (R 3.4.3)                    
##  clisymbols    1.2.0      2017-05-21 cran (@1.2.0)                     
##  colorspace    1.3-2      2016-12-14 CRAN (R 3.4.3)                    
##  crayon        1.3.4      2017-09-16 CRAN (R 3.4.3)                    
##  digest        0.6.15     2018-01-28 CRAN (R 3.4.3)                    
##  dplyr       * 0.7.5      2018-05-19 cran (@0.7.5)                     
##  evaluate      0.10.1     2017-06-24 CRAN (R 3.4.3)                    
##  forcats     * 0.3.0      2018-02-19 CRAN (R 3.4.3)                    
##  foreign       0.8-69     2017-06-21 CRAN (R 3.4.2)                    
##  ggplot2     * 2.2.1.9000 2018-02-22 Github (tidyverse/ggplot2@39e4a3b)
##  glue          1.2.0.9000 2018-05-21 Github (tidyverse/glue@7230ed2)   
##  gtable        0.2.0      2016-02-26 CRAN (R 3.4.3)                    
##  haven         1.1.1      2018-01-18 CRAN (R 3.4.3)                    
##  hms           0.4.2      2018-03-10 CRAN (R 3.4.4)                    
##  htmltools     0.3.6      2017-04-28 CRAN (R 3.4.3)                    
##  httr          1.3.1      2017-08-20 CRAN (R 3.4.3)                    
##  janeaustenr   0.1.5      2017-06-10 CRAN (R 3.4.3)                    
##  jsonlite      1.5        2017-06-01 CRAN (R 3.4.3)                    
##  knitr         1.20       2018-02-20 CRAN (R 3.4.3)                    
##  labeling      0.3        2014-08-23 CRAN (R 3.4.3)                    
##  lattice       0.20-35    2017-03-25 CRAN (R 3.4.2)                    
##  lazyeval      0.2.1      2017-10-29 CRAN (R 3.4.3)                    
##  lubridate     1.7.4      2018-04-11 CRAN (R 3.4.4)                    
##  magrittr      1.5        2014-11-22 CRAN (R 3.4.3)                    
##  Matrix        1.2-14     2018-04-09 CRAN (R 3.4.4)                    
##  mnormt        1.5-5      2016-10-15 CRAN (R 3.4.3)                    
##  modelr        0.1.2      2018-05-11 CRAN (R 3.4.4)                    
##  munsell       0.4.3      2016-02-13 CRAN (R 3.4.3)                    
##  nlme          3.1-137    2018-04-07 CRAN (R 3.4.4)                    
##  pillar        1.2.2      2018-04-26 CRAN (R 3.4.4)                    
##  pkgconfig     2.0.1      2017-03-21 CRAN (R 3.4.3)                    
##  plyr          1.8.4      2016-06-08 CRAN (R 3.4.3)                    
##  psych         1.8.4      2018-05-06 CRAN (R 3.4.4)                    
##  purrr       * 0.2.5      2018-05-29 cran (@0.2.5)                     
##  R6            2.2.2      2017-06-17 CRAN (R 3.4.3)                    
##  Rcpp          0.12.17    2018-05-18 cran (@0.12.17)                   
##  readr       * 1.1.1      2017-05-16 CRAN (R 3.4.3)                    
##  readxl        1.1.0      2018-04-20 CRAN (R 3.4.4)                    
##  reshape2      1.4.3      2017-12-11 CRAN (R 3.4.3)                    
##  rlang         0.2.0.9001 2018-05-31 Github (tidyverse/rlang@4e7e8f7)  
##  rmarkdown     1.9        2018-03-01 CRAN (R 3.4.3)                    
##  rprojroot     1.3-2      2018-01-03 CRAN (R 3.4.3)                    
##  rstudioapi    0.7        2017-09-07 CRAN (R 3.4.3)                    
##  rvest         0.3.2      2016-06-17 CRAN (R 3.4.3)                    
##  scales        0.5.0.9000 2018-05-03 Github (hadley/scales@d767915)    
##  sessioninfo   1.0.0      2017-06-21 cran (@1.0.0)                     
##  SnowballC     0.5.1      2014-08-09 CRAN (R 3.4.3)                    
##  stringi       1.2.2      2018-05-02 CRAN (R 3.4.4)                    
##  stringr     * 1.3.1      2018-05-10 CRAN (R 3.4.4)                    
##  tibble      * 1.4.2      2018-01-22 CRAN (R 3.4.3)                    
##  tidyr       * 0.8.1      2018-05-18 CRAN (R 3.4.4)                    
##  tidyselect    0.2.4      2018-02-26 CRAN (R 3.4.3)                    
##  tidytext    * 0.1.8      2018-03-21 CRAN (R 3.4.4)                    
##  tidyverse   * 1.2.1      2017-11-14 CRAN (R 3.4.3)                    
##  tokenizers    0.2.1      2018-03-29 CRAN (R 3.4.4)                    
##  utf8          1.1.4      2018-05-24 CRAN (R 3.4.4)                    
##  widyr       * 0.1.1      2018-03-11 CRAN (R 3.4.4)                    
##  withr         2.1.2      2018-03-15 CRAN (R 3.4.4)                    
##  xfun          0.1        2018-01-22 CRAN (R 3.4.3)                    
##  xml2          1.2.0      2018-01-24 CRAN (R 3.4.3)                    
##  yaml          2.1.19     2018-05-01 cran (@2.1.19)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/details&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Not if we learn from Hans Rosling but that is a story for an other time&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Cleaning up and combining data, a dataset for practice</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2018/03/12/content/post/2018-03-12-a-dirty-dataset-for-you-to-clean/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2018/03/12/content/post/2018-03-12-a-dirty-dataset-for-you-to-clean/</guid>
      <description>

&lt;p&gt;tldr: I created an open dataset for the explicit practice of data munging.
Feel free to use it in assignments,
but do mention where you got it from (CC-by-4.0). Also unicorns are awesome.&lt;/p&gt;

&lt;p&gt;Find the dataset at: &lt;a href=&#34;https://github.com/RMHogervorst/unicorns_on_unicycles&#34;&gt;https://github.com/RMHogervorst/unicorns_on_unicycles&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;data-munging-cleaning-engineering&#34;&gt;Data munging / cleaning / engineering&lt;/h2&gt;

&lt;p&gt;At work I was working with a two excel files that were slightly different but
could be combined into 1 dataset. This is very typical for day to day cleaning
operations that analysts and data scientists do (statisticians too).&lt;/p&gt;

&lt;p&gt;I realized cleaning, joining and enriching is something that statistics classes
just take for granted. But if a student only works with perfectly prepared
data, they are unable to work with real world data. Because the real world is
someone handing you an excel file with weird values and beautiful colors, that
you cannot use in your work. Or it is a webscraping exercise where some of the
pages are missing and people can&amp;rsquo;t seem to spell right. Some people say 80% of
a data scientists work is cleaning data, so let us teach students how to do that
effectively. I made this dataset in R, but it does not really matter what tool
you use to read and clean this set.&lt;/p&gt;

&lt;h3 id=&#34;what-is-the-dataset-about&#34;&gt;What is the dataset about?&lt;/h3&gt;

&lt;p&gt;All good datasets have a story, this dataset is thought to have been recorded by
an amateur scientist, a natural philosopher by the name of Rudolphus
in the 17th century in The Netherlands. This scientist
recorded the annual population of unicorns in western Europe over a century and also recorded
the sales of unicycles in that same time period. Although not much of the
accompanying text remains of
the original documents, what we can read is the tables and the idea that
Rudolphus thought there was some sort of relationship between uncorns and
unicycle sales.&lt;/p&gt;

&lt;h3 id=&#34;what-kind-of-tasks-would-a-student-have-to-do&#34;&gt;what kind of tasks would a student have to do?&lt;/h3&gt;

&lt;p&gt;There are 2 files, that contain a total of 3 tables. The tables can be
connected to each other with full joins on countryname and year (To make it
  more difficult, you could remove one row in one of the sets).&lt;/p&gt;

&lt;p&gt;a student should:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;read in the data from excel&lt;/li&gt;
&lt;li&gt;recognize that one file contains 2 tables&lt;/li&gt;
&lt;li&gt;realize that countrynames are slightly different in 1 file&lt;/li&gt;
&lt;li&gt;join the files together&lt;/li&gt;
&lt;li&gt;create 1 &amp;lsquo;long&amp;rsquo; tidy datafile (country, year, value1, value2, value3)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;During analysis:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;realize that some years are missing&lt;/li&gt;
&lt;li&gt;perhaps impute, reason for reasons of missingness (disease epidemic in
Austria, others are missing at random)&lt;/li&gt;
&lt;li&gt;find some relation between unicycles and unicorns in the 17th century in
western Europe&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;what-can-i-do-with-this-set&#34;&gt;what can I do with this set?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve released the set under the creative commons cc-by-4.0 license. That means
you may remix, share, use commercially, and modify the dataset. I just want
you to mention where you got the dataset from.
If you think the units are stupid, change it. if you think the assignment is
too difficult, make it easier. Really, you can use it any way you want.&lt;/p&gt;

&lt;p&gt;I hope this set will help in teaching students the art of data munging. I also
thought it was very funny to have unicorns on unicycles, but searching the
internet shows I was hardly the first one to think of that pun. Ah well, just
goes to show that it was a good one.&lt;/p&gt;

&lt;p&gt;Find the dataset at: &lt;a href=&#34;https://github.com/RMHogervorst/unicorns_on_unicycles&#34;&gt;https://github.com/RMHogervorst/unicorns_on_unicycles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adding logging to a shiny app with loggit</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2018/02/28/content/post/2018-02-28-adding-json-logging-to-shiny-app/</link>
      <pubDate>Wed, 28 Feb 2018 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2018/02/28/content/post/2018-02-28-adding-json-logging-to-shiny-app/</guid>
      <description>

&lt;p&gt;&lt;em&gt;This is a very short post with example code&lt;/em&gt;
Over time when you move your shiny app from your computer to a server, you
want to add some logging. Generally logging is defined in levels : INFO (everything you want to print),
WARNING (it does not stop the application, but it could be a problem), and
ERROR (fatal things).&lt;/p&gt;

&lt;p&gt;Shiny server does already log all it&amp;rsquo;s actions to
a file on the server, but that file can be hard to access.
It would be nice if every app has its own logging, close to the app location.&lt;/p&gt;

&lt;p&gt;The package &lt;a href=&#34;https://github.com/ryapric/loggit&#34;&gt;loggit&lt;/a&gt; by Ryan J. Price,
overwrites the normal message, warning and stop functions
in R and replaces them with identically functioning functions, but the package
ALSO writes to a file. Thus the loggit packages writes to a json file of your
choosing and has nice timestamped data, which is extremely easy to parse.&lt;/p&gt;

&lt;h4 id=&#34;some-prerequisites&#34;&gt;Some prerequisites:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;you need to have the loggit package installed on your shiny-server&lt;/li&gt;
&lt;li&gt;you need to create the logfile first (empty)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;example-code&#34;&gt;example code&lt;/h4&gt;

&lt;p&gt;This is a non functioning app.r example.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;shiny&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;loggit&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
setLogFile&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;loggit.json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
loggit&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;INFO&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;app has started&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; app &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ui &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; fluidpage&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;#your ui here&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

server &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ui&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; server&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; session&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
  &lt;span class=&#34;kp&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;this is an message&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;# it would be nice if you had some server logic here&lt;/span&gt;
  session&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;onSessionEnded&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;loggit&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;INFO&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;app has stopped&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; app &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;stop&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)})&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
shinyApp&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ui&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; server&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example has the ui and server defined and a function shinyApp() that
starts the server.&lt;/p&gt;

&lt;p&gt;There are 3 things I&amp;rsquo;d like to point your attention to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you first set your logfile location (you need to create it first)&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;ve used both loggit() and the general function message() They both write to loglevel INFO&lt;/li&gt;
&lt;li&gt;I also used the session$onSessionEnded thingy, this is activated when you
close the app&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Are all these things necessary? No absolutely not, you generally don&amp;rsquo;t want to
know if an app has started, and stopped. You might only want to write the
warnings and errors to the log.&lt;/p&gt;

&lt;p&gt;I think the package is extremely user friendly and easy to implement, would you use this in production?&lt;/p&gt;

&lt;p&gt;Did I miss anything? Did I make a mistake? open an issue on &lt;a href=&#34;https://github.com/rmhogervorst/cleancode/issues&#34;&gt;github&lt;/a&gt;,
or send me a message on &lt;a href=&#34;https://twitter.com/RMHoge&#34;&gt;twitter&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting up a version controlled shiny-server</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2018/02/06/content/post/2018-02-06-setting-up-a-version-controlled-shiny-server/</link>
      <pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2018/02/06/content/post/2018-02-06-setting-up-a-version-controlled-shiny-server/</guid>
      <description>

&lt;p&gt;Last week I set up a shiny server, it was relatively easy! But I wanted something more, a way to make changes on my local computer and push it to the server.&lt;/p&gt;

&lt;p&gt;Shiny server (I used the open source version) has multiple installers provided by RStudio.&lt;/p&gt;

&lt;p&gt;The installers for shiny-server create a user shiny and installs all the services needed.&lt;/p&gt;

&lt;p&gt;I used a guide specific for my version of linux to install shiny-server and combined it with two other guides to make it version controlled.&lt;/p&gt;

&lt;p&gt;I have added the instructions to this &lt;a href=&#34;https://gist.github.com/RMHogervorst/9d88ebff914b66b984ede8e78876c92f&#34;&gt;github gist&lt;/a&gt; but you can also follow along.&lt;/p&gt;

&lt;h3 id=&#34;server-setup&#34;&gt;Server setup&lt;/h3&gt;

&lt;p&gt;After you&amp;rsquo;ve installed shiny-server, the server serves all apps in &amp;lsquo;/etc/shiny-server&amp;rsquo; but I really don&amp;rsquo;t like to scp into the server to upload files, I&amp;rsquo;d rather work on my computer, put everything under version control and push the changes to the server. That way I can easily revert my changes if something fails and I don&amp;rsquo;t lose work.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve used Dean Atalli&amp;rsquo;s &lt;a href=&#34;https://deanattali.com/2015/05/09/setup-rstudio-shiny-server-digital-ocean/&#34;&gt;excellent guide to setting up a server on digital ocean&lt;/a&gt; but I&amp;rsquo;ve modified a small part. He is using github to push his changes and then pulls from github to his server.
I was in a situation where I did not have access to github and I wanted a slightly simpler setup.&lt;/p&gt;

&lt;p&gt;I created a bare repository on the server (that accepts my changes and responds just as github would, except the pretty website features) and used a git-hook. The files in the bare repo are not laid out in the same way as in the original files (on my computer) so I have to do something with that.&lt;/p&gt;

&lt;p&gt;A git hook is something that runs  before, during or after you change a repo (it hooks into git). It is a simple shell script that (in my case) runs after a change is made in the repo and executes a command. After a change this &amp;lsquo;post-receive&amp;rsquo;-hook checks out the latest branch and moves it to &amp;lsquo;/etc/shiny-server/&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;So the set up is like &lt;a href=&#34;http://toroid.org/git-website-howto&#34; title=&#34;I modified this to make it apply to shiny-server&#34;&gt;this&lt;/a&gt; :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/home/shiny/shiny.git
/etc/shiny-server/
/all the other folders in a linux system
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You move into the shiny.git folder (no real need to use that extension, but it is common) and go to the .git folder. inside the folder you add and modify a file called post-receive like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
GIT_WORK_TREE = /srv/shiny-server git checkout -f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You also need to tell the server that this file &amp;lsquo;post-receive&amp;rsquo; may be executed. by &amp;lsquo;chmod +x hooks/post-receive&amp;rsquo;.&lt;/p&gt;

&lt;h3 id=&#34;setting-up-you-local-computer&#34;&gt;setting up you local computer.&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;(optional) Move the files from the server /etc/shiny-server/ to you computer so you can always revert back to the basic settings.&lt;/li&gt;
&lt;li&gt;make sure you have a ssh key set up (this is safer to work with than username password)&lt;/li&gt;
&lt;li&gt;we are going to move the ssh key of your computer to the list of accepted ssh keys in the server.&lt;/li&gt;
&lt;li&gt;make a repo which will be your root folder on the server, meaning this folder will be mirrored in &amp;lsquo;/etc/shiny-server/&amp;rsquo; so shiny-server could be a good name.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;a-few-changes-on-your-server&#34;&gt;a few changes on your server&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;add your ssh key to &amp;lsquo;~/.ssh/authorized_keys&amp;rsquo; on the server&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;back-to-your-local-computer&#34;&gt;back to your local computer&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;add a remote to your repo: &amp;lsquo;git remote add shinyserver ssh://shiny@server.example.org/home/shiny/shiny-repo.git&amp;rsquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;git remote add:  &lt;em&gt;add a remote&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;shinyserver   &lt;em&gt;the name of that remote&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ssh:// &lt;em&gt;make a ssh connection to&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;shiny@adres/ &lt;em&gt;the user shiny on server&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;home/shiny/shiny-repo.git &lt;em&gt;to the folder shiny-repo in user shiny&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;push to repo $ git push shinyserver +master:refs/heads/master&lt;/p&gt;

&lt;h3 id=&#34;this-should-now-work&#34;&gt;This should now work&lt;/h3&gt;

&lt;p&gt;Good luck!&lt;/p&gt;

&lt;p&gt;(I did not have access to the server while I wrote this, so I could have made mistakes, PR me with hints and answers or open an issue, alternatively: reach me on twitter @rmhoge)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Moving parts of a country over a map</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2018/01/29/content/post/2018-01-29-moving-parts-of-a-map-in-a-gif/</link>
      <pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2018/01/29/content/post/2018-01-29-moving-parts-of-a-map-in-a-gif/</guid>
      <description>

&lt;p&gt;I love making maps, I also love making gifs.
In this short post I make an animated gif of parts of a map moving. In this case the parts of the map only move in the xy direction, but &lt;a href=&#34;https://r-spatial.github.io/sf/articles/sf3.html#affine-transformations&#34;&gt;you can also turn them, and make them bigger or smaller&lt;/a&gt;.
Today I show you how I made a part of the Netherlands &amp;lsquo;float away&amp;rsquo;. It is part of a larger nonsense project (I have many silly projects), and mostly just to document my path to learning about spatial analytics.&lt;/p&gt;

&lt;p&gt;End result :&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn.rawgit.com/RMHogervorst/floating_friesland/44f7adfd/friesland.gif&#34; alt=&#34; &#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;general-principles&#34;&gt;General principles&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;make small functions that do one thing well (not that small in this case)&lt;/li&gt;
&lt;li&gt;combine those&lt;/li&gt;
&lt;li&gt;make imagemagick canvas&lt;/li&gt;
&lt;li&gt;write to the canvas&lt;/li&gt;
&lt;li&gt;animate the canvas&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;loading-libraries-and-data&#34;&gt;loading libraries and data&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kp&#34;&gt;suppressMessages&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;tidyverse&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# ggplot2, dplyr, purrr, etc.&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;magick&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;sf&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;paletti&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# thanks @edwinthoen&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# colorscheme&lt;/span&gt;
dutchmasters_fill &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; get_scale_fill&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;get_pal&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dutchmasters&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# the data&lt;/span&gt;
NLD &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; read_sf&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data/NLD_adm1.shp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# I cannot redistribute the data from GADM, but you can download and use it for your projects&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;basic-functions&#34;&gt;basic functions&lt;/h3&gt;

&lt;p&gt;I created a function that takes a name, uses that to filter the data and apply a transformation on that part only. (a mutate_if() could also work, but I didn&amp;rsquo;t know how). And also one that uses that function to plot. The final function takes a matrix of xy values and sequentially applies every row to the plotting function.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;modify data&lt;/li&gt;
&lt;li&gt;plot a single ggplot version&lt;/li&gt;
&lt;li&gt;loop or apply over range&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# basic function that moves an a province&lt;/span&gt;
move_province &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;provincename&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; movement&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    mov &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; quo&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;movement&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    rest &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; NLD &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NAME_1 &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!!&lt;/span&gt;provincename&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;TYPE_1 &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Water body&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;#rest %&amp;gt;% st_centroid() %&amp;gt;% st_as_text()&lt;/span&gt;
    province &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; NLD &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NAME_1 &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!!&lt;/span&gt;provincename&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;geometry &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; geometry &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!!&lt;/span&gt;mov&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        st_set_crs&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;+proj=longlat +datum=WGS84 +no_defs&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    data1 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;
        &lt;span class=&#34;kp&#34;&gt;rbind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;province&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; rest&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    centroids &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;
        data1 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; st_centroid&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; st_coordinates&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;cbind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; centroids&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# make function to create plot&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# using the previous function to move the province&lt;/span&gt;
plot_netherlands &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;province&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; movement&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    plotunit &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; move_province&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;provincename &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; province&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; movement &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; movement&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
            ggplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
            geom_sf&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;fill &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME_1&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;grey50&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; alpha &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
            geom_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;X&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;Y&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME_1&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
            lims&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;50.8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
            labs&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; caption &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;shapefiles from www.gadm.org&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; title &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Floating Friesland&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
            dutchmasters_fill&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;little_street&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
            theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;empty&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# we already labeled the provinces&lt;/span&gt;
                   panel.grid.major &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;grey80&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;plotunit&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# you have to explicitly tell it to print so the image is captured&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# go over every frame and print&lt;/span&gt;
plot_province_over_range &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;
     &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;offset_matrix&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; province &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Friesland&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; debug &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;FALSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;

    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;is.na&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;offset_matrix&lt;span class=&#34;p&#34;&gt;))){&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I cannot handle empty movements, there are NA&amp;#39;s in movement_matrix&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;NCOL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;offset_matrix&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;movement_matrix needs to have exactly 2 columns&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    actionsframe &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; offset_matrix&lt;span class=&#34;p&#34;&gt;[,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; offset_matrix&lt;span class=&#34;p&#34;&gt;[,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;rownumber &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; row_number&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    actionsframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;name &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;formatC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;actionsframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;rownumber&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; flag &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;width &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

    pb &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; progress_estimated&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;NROW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;actionsframe&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

    walk&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;actionsframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

        pb&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;tick&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        vars &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;actionsframe&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; name &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;x&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
            &lt;span class=&#34;kp&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;using values from: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;vars&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        plot_netherlands&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;province &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; province&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;movement &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;vars&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;x&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt; vars&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;y&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]))&lt;/span&gt;

        &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# ends the walk action&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;the-plotting-and-saving&#34;&gt;The plotting and saving&lt;/h3&gt;

&lt;p&gt;Nothing happened before the next step (except loading data). All the action and calculation happens here.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## then the creation starts with the movement&lt;/span&gt;
Friesland_moves &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;rbind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;-.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;-.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;-.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;-.3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.03&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;ncol &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;-.3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; by &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;-.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; length.out &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; by &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; length.out &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt; ncol &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# set up print location&lt;/span&gt;
frames &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; image_graph&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;width &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; height &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; res &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; pointsize &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


plot_province_over_range&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;offset_matrix &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; Friesland_moves&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; province &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Friesland&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# animate&lt;/span&gt;
image_animate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;frames&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
    image_write&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;path &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;friesland.gif&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/RMHogervorst/floating_friesland/blob/master/R/directly_to_imagemagick.R&#34;&gt;code for gif 2 imagemagick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/RMHogervorst/floating_friesland/&#34;&gt;larger githubproject - floating friesland&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/48344609/pipe-ggplot2-result-into-1-magick-object&#34;&gt;stackoverflow answer that helped me make the gif &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://edwinth.github.io/blog/paletti&#34;&gt;palleti package: making your own color pallete&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I tried to edit this post on github on my mobile phone, boy, that does not work at all!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>add abbreviations to your rmarkdown doc</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2018/01/24/content/post/2018-01-24-add-abbreviations-to-rmarkdown/</link>
      <pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2018/01/24/content/post/2018-01-24-add-abbreviations-to-rmarkdown/</guid>
      <description>&lt;p&gt;Today a small tip for when you write rmarkdown documents. Add a chunk on top with abbreviations.&lt;/p&gt;

&lt;p&gt;in the first chunks you set the options and load the
packages. Next create abbreviations, you don&amp;rsquo;t have to care about the ordering, just put them down as you realize you are creating them.&lt;/p&gt;

&lt;p&gt;The first step makes a dataframe (a tibble, rowwise), and the second step orders them.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tribble(
    ~Abbreviation, ~ Explanation,
    &amp;quot;CIA&amp;quot;, &amp;quot;Central Intelligence Agency&amp;quot;,
    &amp;quot;dplyr&amp;quot;, &amp;quot;data.frame plyr, a tool for working with data in a rectangular format&amp;quot;,
    &amp;quot;ABC&amp;quot;, &amp;quot;The first few letters of the alphabet&amp;quot;
) %&amp;gt;%
    arrange(Abbreviation)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you make use of many abbreviations, you might want to put them all in a dataframe and add them to your document.&lt;/p&gt;

&lt;p&gt;Even better: add them to a package: a dataframe with all your abbreviations, a template rmarkdown document with your company logos, and perhaps some
ggplot themes to style your corporate work.&lt;/p&gt;

&lt;p&gt;For instance: I create an enourmous collection of
obscure abbreviations in use in my company and put them all in my package. You don&amp;rsquo;t want to use them all in your document, that would be silly. You only want to explain the abbreviations that you use in the document.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(tidyverse)
library(your_corp_package)
all_abbreviations_used &amp;lt;- c(&amp;quot;CIA&amp;quot;, &amp;quot;DONKLEBODY&amp;quot;, &amp;quot;WUT&amp;quot;, &amp;quot;SPEEDR&amp;quot;)
abbreviations %&amp;gt;%
      filter(abbreviation %in% all_abbreviations_used)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tada! Simple, useful.&lt;/p&gt;

&lt;p&gt;Do you have ideas how to expand this idea? Perhaps you could scan the text of a document and extract abbreviations?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adding bananas from the commandline (extending the oomsifier)</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2017/12/29/content/post/2017-12-29-extending-the-oomsifyer-cmdline/</link>
      <pubDate>Fri, 29 Dec 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2017/12/29/content/post/2017-12-29-extending-the-oomsifyer-cmdline/</guid>
      <description>

&lt;p&gt;Sometimes you just want to add bananas from the commandline. &lt;a href=&#34;http://rmhogervorst.nl/cleancode/blog/2017/11/28/building-the-oomsifier.html&#34;&gt;Previously&lt;/a&gt;
I created a small script that takes an image and adds a dancing banana to the bottom left of the image. I wanted to make an API too, but that will have to wait till next year. Today we will create a commandline script that will do the same thing.&lt;/p&gt;

&lt;p&gt;With the excellent explanation in &lt;a href=&#34;http://blog.sellorm.com/2017/12/18/learn-to-write-command-line-utilities-in-r/&#34;&gt;Mark Sellors&amp;rsquo; guide&lt;/a&gt; I have now created a cmdline thingy in very few steps.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/r-pkg.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I can now add bananas from the commandline with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./bananafy.R ../images/ggplotexample.png out.gif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This executes and says:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Linking to ImageMagick 6.9.7.4
Enabled features: fontconfig, freetype, fftw, lcms, pango, x11
Disabled features: cairo, ghostscript, rsvg, webp
writing bananafied image to out.gif
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;the-modified-script&#34;&gt;The modified script&lt;/h4&gt;

&lt;p&gt;First the script itself, saved as bananafy.R&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/Rscript --vanilla
args &amp;lt;- commandArgs(trailingOnly = TRUE)
if (length(args) &amp;lt; 1){
    stop(&amp;quot;I think you forgot to input an image and output name? \n&amp;quot;)
}

library(magick)
## Commandline version of add banana
#banana &amp;lt;- image_read(&amp;quot;images/banana.gif&amp;quot;) # this assumes you have a project with the folder /images/ inside.

#add_banana &amp;lt;- function(, offset = NULL, debug = FALSE){
offset &amp;lt;- NULL # maybe a third argument here would be cool?
debug &amp;lt;- FALSE
image_in &amp;lt;- magick::image_read(args[[1]])
banana &amp;lt;- image_read(&amp;quot;../images/banana.gif&amp;quot;) # 365w 360 h
image_info &amp;lt;- image_info(image_in)
if(&amp;quot;gif&amp;quot; %in% image_info$format ){stop(&amp;quot;gifs are to difficult for  me now&amp;quot;)}
stopifnot(nrow(image_info)==1)
# scale banana to correct size:
# take smallest dimension.
target_height &amp;lt;- min(image_info$width, image_info$height)
# scale banana to 1/3 of the size
scaling &amp;lt;-  (target_height /3)
front &amp;lt;- image_scale(banana, scaling)
# place in lower right corner
# offset is width and hieight minus dimensions picutre?
scaled_dims &amp;lt;- image_info(front)
x_c &amp;lt;- image_info$width - scaled_dims$width
y_c &amp;lt;- image_info$height - scaled_dims$height
offset_value &amp;lt;- ifelse(is.null(offset), paste0(&amp;quot;+&amp;quot;,x_c,&amp;quot;+&amp;quot;,y_c), offset)
if(debug) print(offset_value)
frames &amp;lt;- lapply(as.list(front), function(x) image_composite(image_in, x, offset = offset_value))

result &amp;lt;- image_animate(image_join(frames), fps = 10)
message(&amp;quot;writing bananafied image to&amp;quot;, args[[2]])
image_write(image = result, path = args[[2]])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you might notice I copied the entire thing from the previous post and added some extra Things&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It starts with &amp;lsquo;#!/usr/bin/Rscript&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;According to Mark:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sometimes called a ‘shebang’, this line tells the Linux and MacOS command line interpreters (which both default to one called ‘bash’), what you want to use to run the rest of the code in the file. &amp;hellip;.The &amp;ndash;vanilla on the end, tells Rscript to run without saving or restoring anything in the process. This just keeps things nice a clean.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;ve added a message call that tells me where the script saves the image. I could have suppressed the magic messages, but meh, it is a proof of concept.&lt;/p&gt;

&lt;p&gt;To make it work, you have to tell linux (which I&amp;rsquo;m working on) that it can execute the file. That means changing the permissions on that file&lt;/p&gt;

&lt;p&gt;In the terminal you go to the projectfolder and type &lt;code&gt;chmod +x bananafy.R&lt;/code&gt;. You CHange MODe by adding (+) eXecution rights to that file.&lt;/p&gt;

&lt;h3 id=&#34;advanced-use-making-bananafy-options-available-always-and-everywhere-in-the-terminal&#34;&gt;advanced use: making bananafy options available always and everywhere in the terminal.&lt;/h3&gt;

&lt;p&gt;We could make the bananafyer available to you always in in every folder. T do that you could move the script to f.i. ~/scripts/,  modify the code a bit and add the bananagif to that same folder. You then have to &lt;a href=&#34;https://askubuntu.com/questions/153251/launch-shell-scripts-from-anywhere&#34;&gt;modify your bashrc file&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I had to make the link to the banana hardcoded: &amp;lsquo;~/scripts/images/banana.gif&amp;rsquo;&lt;/li&gt;
&lt;li&gt;you can call the code from anywhere and the output of the script will end up in the folder you currently are in. So if I&amp;rsquo;m in ~/pictures/reallynicepictures the bananafied image will be there.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>If blogging was like academia, we would all be saved, thank you for your edits.</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2017/12/19/content/post/2017-12-19-if-blogging-was-like-academia/</link>
      <pubDate>Tue, 19 Dec 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2017/12/19/content/post/2017-12-19-if-blogging-was-like-academia/</guid>
      <description>&lt;p&gt;A month ago I posted a short piece inspired by a  &lt;a href=&#34;http://www.masalmon.eu/2017/11/16/wheretoliveus/&#34;&gt;post by Maële Salmon&lt;/a&gt;
She actually reached out to me in 10 minutes, telling me I made a weird spelling
error (no excuses, I really make those a lot). Then a day or two later &lt;a href=&#34;https://github.com/jonspring&#34;&gt;Jon Spring &lt;/a&gt;
walked through the code and realized that I switched two outcomes in the code.&lt;/p&gt;

&lt;p&gt;Just about 10 days ago I posted about downloading multiple files and
Mara Avarick noticed a weird &amp;lsquo;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;rsquo; sign on my website. It was only happening
on chrome ( I couldn&amp;rsquo;t reproduced it in firefox, and it had to do with a few
botched merges in the past). But I would have never found out about it on my own.&lt;/p&gt;

&lt;p&gt;And that is awesome! Some people make the effort to reach out via twitter or
on github, just to make things better for everyone.&lt;/p&gt;

&lt;p&gt;That is the great thing about blogging using version-controlled software, not only can I change what I did, but the history and thank yous are part
of the entire project. It is very transparent (if you know about git) and available for everyone to read. imagine if this was an academic paper (granted, I would have checked my work slightly more thorough before publishing), not only would you probably not be able to read it (it would be behind a paywall), it would be incredibly difficult for me to change the content of the paper.&lt;/p&gt;

&lt;p&gt;Now I guess there is an official American holiday to thank people, but since I am not American I can thank whoever, whenever I please&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;The point is, I am incredibly grateful for all those
helpful comments, issues, and sometimes even emails!
So thank you!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/spHCUbRqG4cjS/giphy.gif&#34; alt=&#34;minnion thanking you gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;[1]: And so can you!&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;1 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Downloading files from a webserver, and failing.</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2017/12/08/content/post/2017-12-08-downloading-multiple-files-and-failing/</link>
      <pubDate>Fri, 08 Dec 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2017/12/08/content/post/2017-12-08-downloading-multiple-files-and-failing/</guid>
      <description>

&lt;p&gt;Recently I wanted to download all the transcripts of a podcast (600+ episodes).
The transcripts are simple txt files so in a way
I am  not even &amp;lsquo;web&amp;rsquo;-scraping but just reading in 600 or so text files which is
not really a big deal. I thought.&lt;/p&gt;

&lt;p&gt;This post shows you where I went wrong&lt;/p&gt;

&lt;p&gt;Also here is a &lt;a href=&#34;https://www.flickr.com/photos/32123311@N00/502155430&#34; title=&#34;source: flickr, cc-by 2.0 jbloom&#34;&gt;picture&lt;/a&gt; I found of scraping.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/scraping_a_plate.jpg&#34; alt=&#34;Scraping a plate &#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;webscraping-general&#34;&gt;Webscraping general&lt;/h3&gt;

&lt;p&gt;For every download you ask the server for a file and it returns the file (this is also how you normally browse the web btw, your browser requests the pages).&lt;/p&gt;

&lt;p&gt;In general it is nice if you ask permission (I did, on twitter and the author was really nice! I recommend it!) and don&amp;rsquo;t
push the website to its limit. The  servers where these files are hosted are quite beefy and I will
probably not even make a dent in them, when I&amp;rsquo;m downloading these files. But still, be gentle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No really, be a responsible scraper and tell the website owners you are scraping (in person or by identifying in the header) and check if it is allowed&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I recently witnessed a demo where someone explained a lot of dirty tricks on how to get over those pesky servers denying them access and generally ignoring good practices and it made me sick&amp;hellip;&lt;/p&gt;

&lt;p&gt;Here are some general guides:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rud.is/b/2017/07/28/analyzing-wait-delay-settings-in-common-crawl-robots-txt-data-with-r/&#34;&gt;Bob Rudis (@hrbrmstr) about scraping and robots.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/httr/vignettes/api-packages.html&#34;&gt;excellent vignette of the httr package, read the part about user-agent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;downloading-non-html-files&#34;&gt;Downloading non-html files&lt;/h3&gt;

&lt;p&gt;There are multiple ways I could do this downloading:
if I had used rvest to scrape a website I would have set a user-agent
header&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a-piece-of-infor&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a-piece-of-infor&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
and I would have used incremental backoff: when the server refuses a connection
we would wait and retry again, if it still refuses we would wait twice as long
and retry again etc.&lt;/p&gt;

&lt;p&gt;However, since these are txt files I can just use read_lines&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:This-is-the-read&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:This-is-the-read&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;
to read the txt file of a transcript and apply further work downstream.&lt;/p&gt;

&lt;h4 id=&#34;a-first-failing-approach-tidy-but-wrong&#34;&gt;A first, failing approach, tidy but wrong&lt;/h4&gt;

&lt;p&gt;This was my first approach:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;all episodes are numbered and the transcript files are sequental too, so just a paste0 of &amp;ldquo;&lt;a href=&#34;https://first-part-of-link&amp;quot;&#34;&gt;https://first-part-of-link&amp;quot;&lt;/a&gt; number&amp;rdquo;.txt&amp;rdquo; would work.&lt;/li&gt;
&lt;li&gt;put all links as row into dataframe&lt;/li&gt;
&lt;li&gt;apply some purrr magic by mapping every link to a read_lines function (&lt;em&gt;what? use the read_lines() function on every link&lt;/em&gt; ).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;latest_episode &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;636&lt;/span&gt;
 

&lt;span class=&#34;kp&#34;&gt;system.time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 
    df_sn &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;link &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https:linktowebsite.com/firstpart-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 

                                      &lt;span class=&#34;kp&#34;&gt;formatC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;latest_episode&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; width &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;flag &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
 
        mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;transcript &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; map&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;link&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; read_lines2&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
 
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This failed.&lt;/p&gt;

&lt;p&gt;Some episodes don&amp;rsquo;t exists or have no transcript (I didn&amp;rsquo;t know). Sometimes the internet connection didn&amp;rsquo;t want to work and just threw me out. Sometimes the server stopped my requests.&lt;/p&gt;

&lt;p&gt;On every of those occasions the process would stop, give an informative error&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:really-it-did&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:really-it-did&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;. But the R-process would stop and I had no endresult.&lt;/p&gt;

&lt;h4 id=&#34;getting-more-information-to-my-eyeballs-and-pausing-in-between-requests&#34;&gt;Getting more information to my eyeballs and pausing in between requests&lt;/h4&gt;

&lt;p&gt;Also I didn&amp;rsquo;t know where it failed. So I created a new function that also sometimes waited (to not overwhelm the server)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## to see where we are this function wraps read_lines and prints the episodenumber&lt;/span&gt;
 

read_lines2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
 

    &lt;span class=&#34;kp&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;runif&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0.008&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;Sys.sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    read_lines&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This one also failed, but more informatively, I now knew if it failed on a certain episode.&lt;/p&gt;

&lt;p&gt;But ultimately, downloading files from the internet is a somewhat unpredictable process. And it is much easier to just first download all the files and read them in afterwards.&lt;/p&gt;

&lt;h4 id=&#34;a-two-step-approach-download-first-parse-later&#34;&gt;A two step approach, download first, parse later.&lt;/h4&gt;

&lt;p&gt;Also I wanted to let the logs show that I was the one doing the scraping and how to reach me if I was overwhelming the service.&lt;/p&gt;

&lt;p&gt;Enter curl.
Curl is a library that helps you download stuff, it is used by the httr package and is a wrapper around the c++ package with the same name, &lt;em&gt;wrapped by Jeroen &amp;lsquo;c-plus-plus&amp;rsquo; Ooms&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Since I ran this function a few times I downloaded some of the files, and didn&amp;rsquo;t really want to download every file again, so I also added a check to see if the file wasn&amp;rsquo;t already downloaded&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:I-thought-that-w&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:I-thought-that-w&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; . And I wanted it to print to the screen, because I like moving text over the screen when I&amp;rsquo;m debugging.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;download_file &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    filename &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;basename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file.exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;filename&lt;span class=&#34;p&#34;&gt;))){&lt;/span&gt;
        &lt;span class=&#34;kp&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;file exists: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;filename&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kp&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;downloading file:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
        h &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; new_handle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;failonerror &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;FALSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        h &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; handle_setheaders&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;h&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;scraper by RM Hogervorst, @rmhoge, gh: rmhogervorst&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        curl_download&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;url &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;destfile &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;filename&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;mode &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;wb&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; handle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; h&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;kp&#34;&gt;Sys.sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;sample&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;seq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# copied this from  Bob Rudis(@hrbrmstr)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I set the header (I think&amp;hellip;) and I tell &lt;code&gt;curl&lt;/code&gt; not to worry if it fails, &lt;em&gt;we all need reassurance sometimes&lt;/em&gt;, but just to continue.&lt;/p&gt;

&lt;p&gt;And the downloading begins:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# we choose walk here, because we don&amp;#39;t expect output (we do get prints)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# We specificaly do this for the side-effect: downloading to a folder.&lt;/span&gt;

latest_episode &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;636&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#downloading&lt;/span&gt;
walk&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://first-part-of-link.com/episodenr-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
           &lt;span class=&#34;kp&#34;&gt;formatC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;latest_episode&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; width &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;flag &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; download_file&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;So in general, don&amp;rsquo;t be a dick, ask permission and take it easy.&lt;/p&gt;

&lt;p&gt;The final download approach works great! And it doesn&amp;rsquo;t matter if you stop it halfway. In the future you can see why I wanted all of these files.&lt;/p&gt;

&lt;p&gt;I thought this would be the easy step, would the rest be even harder? Tune in next time!&lt;/p&gt;

&lt;h4 id=&#34;cool-things-that-i-could-have-done&#34;&gt;Cool things that I could have done:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;use purrr::safely ? I think it will continue to work after a fail then?&lt;/li&gt;
&lt;li&gt;use a trycatch in the download&lt;/li&gt;
&lt;li&gt;first check if the file exists&lt;/li&gt;
&lt;li&gt;Do something more with curl, honestly it has many many options that I just didn&amp;rsquo;t explore.&lt;/li&gt;
&lt;li&gt;use some CLI spinners for every download, way cooler&lt;/li&gt;
&lt;li&gt;write to a log, and not to the console.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a-piece-of-infor&#34;&gt;a piece of information we snd with every request that describes who we are &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a-piece-of-infor&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:This-is-the-read&#34;&gt;This is the readr variant of readLines from base-R, it is much faster then the original &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:This-is-the-read&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:really-it-did&#34;&gt;really, it did &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:really-it-did&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:I-thought-that-w&#34;&gt;I thought that was really clever, didn&amp;rsquo;t you? &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:I-thought-that-w&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building the oomsifyer</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2017/11/28/content/post/2017-11-28-building-the-oomsifier/</link>
      <pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2017/11/28/content/post/2017-11-28-building-the-oomsifier/</guid>
      <description>

&lt;p&gt;Today I will show you a quick hack (OK it took me like 4 hours during my travels today yesterday and today),
on how to add a dancing banana to any picture.&lt;/p&gt;

&lt;p&gt;Now, you might be thinking&amp;hellip; Really, why would you add a dancing banana to
a picture, but I don&amp;rsquo;t have time for that kind of negativity in my life.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/r-pkg.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;why-oomsifier&#34;&gt;Why oomsifier?&lt;/h2&gt;

&lt;p&gt;Jeroen Ooms is one of those crazy productive people in the R world. The way he
wraps c++ libraries into packages makes you think his middle name is c-plus-plus.&lt;/p&gt;

&lt;p&gt;At the Sat-R-day in budapest in 2016 (?) Jeroen demonstrated the magick library.
You can now control images from inside R using dark magic and the bindings to
 the magick library. In honor of this work and because I needed a cool name,
I will demonstrate &lt;strong&gt;THE OOMSIFYER&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Solving the life long dream of people all around the world &amp;hellip; of adding dancing banana gifs to pictures&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you are like me, you would have thought this would be really easy, but you would be wrong.&lt;/p&gt;

&lt;p&gt;First the function then the explanation and some stuff that took me waaay too long
to find out.&lt;/p&gt;

&lt;p&gt;The function&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;banana &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; image_read&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;images/banana.gif&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# this assumes you have a project with the folder /images/ inside.&lt;/span&gt;

add_banana &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;image&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; offset &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; debug &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;FALSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    image_in &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; magick&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;image_read&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;image&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    banana &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; image_read&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;images/banana.gif&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 365w 360 h&lt;/span&gt;
    image_info &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; image_info&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;image_in&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;gif&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%in%&lt;/span&gt; image_info&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;format &lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;gifs are to difficult for  me now&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;stopifnot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;nrow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;image_info&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# scale banana to correct size:&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# take smallest dimension.&lt;/span&gt;
    target_height &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;image_info&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;width&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; image_info&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;height&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# scale banana to 1/3 of the size&lt;/span&gt;
    scaling &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;target_height &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    front &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; image_scale&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;banana&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; scaling&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# place in lower right corner&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# offset is width and hieight minus dimensions picutre?&lt;/span&gt;
    scaled_dims &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; image_info&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;front&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    x_c &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; image_info&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;width &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; scaled_dims&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;width
    y_c &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; image_info&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;height &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; scaled_dims&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;height
    offset_value &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;ifelse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;is.null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;offset&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;paste0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;x_c&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;y_c&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; offset&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;offset_value&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    frames &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;lapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;front&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; image_composite&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;image_in&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; x&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; offset &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; offset_value&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

    result &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; image_animate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;image_join&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;frames&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; fps &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    result
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;so-what-can-it-do&#34;&gt;So what can it do?&lt;/h2&gt;

&lt;p&gt;This function takes an image, f.i. a ggplot2 image that you saved to disk, and adds the dancing banana gif to the bottom right corner.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/ggplot.gif&#34; alt=&#34;ggplot with banana example&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I had to combine information from the magick &lt;a href=&#34;https://cran.r-project.org/web/packages/magick/vignettes/intro.html#animation&#34;&gt;vignette&lt;/a&gt;  and an earlier &lt;a href=&#34;https://ropensci.org/blog/2016/08/23/z-magick-release/&#34;&gt;blogpost&lt;/a&gt; about magick in R.&lt;/p&gt;

&lt;p&gt;Things I learned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the magick package returns image information as a data frame&lt;/li&gt;
&lt;li&gt;a gif is a succesion of images (frames)&lt;/li&gt;
&lt;li&gt;a normal picture is a single frame&lt;/li&gt;
&lt;li&gt;to combine a gif and a single frame you have to have exactly as much frames of your original picture as the number of frames in the gif&lt;/li&gt;
&lt;li&gt;for every frame you have to merge the gif and image with each other into a composite image&lt;/li&gt;
&lt;li&gt;the offset is the number of pixels from the left of the frame and from the top of the frame. I wanted to put the dancing banana at the bottom right of the picture AND I wanted to scale the banana so that it would take over the entire image so the offset needed to be responsive to both scaling and the input dimensions&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/ThePracticalDev&#34;&gt;the practical dev&lt;/a&gt; has many silly o-reilly like book covers that I find hilarious&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/spss.gif&#34; alt=&#34;spss picture&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In a the following posts I might turn this function into an API, stay tuned!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Where to live in the Netherlands based on temperature XKCD style</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2017/11/20/content/post/2017-11-20-xkcd-the-netherlands-weather/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2017/11/20/content/post/2017-11-20-xkcd-the-netherlands-weather/</guid>
      <description>

&lt;p&gt;After seeing a plot of best places to live in Spain and the USA based on the weather, I had to
chime in and do the same thing for the Netherlands. The idea is simple, determine where you want to live based on your temperature preferences.&lt;/p&gt;

&lt;p&gt;First the end result:
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/xkcd_NL_US_ESP.png&#34; alt=&#34;Netherlands, weatherplot XKCD style&#34; /&gt;&lt;/p&gt;

&lt;p&gt;How to read this plot?&lt;/p&gt;

&lt;p&gt;In &lt;a href=&#34;https://xkcd.com/1916/&#34;&gt;this&lt;/a&gt; xkcd comic we see that the topleft of the the graph represents &amp;ldquo;if you hate cold and hate heat&amp;rdquo;, if you go down from the topleft to the bottom left the winters get colder and ending in &amp;ldquo;if you love cold and hate heat&amp;rdquo;. Going to the right the heat (and humidity) go up ending in &amp;ldquo;if you love cold and love heat&amp;rdquo;. Going up to the top right: &amp;ldquo;if you hate cold and love heat&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;This post explains how to make the plot, to see  where I got the data and what procedures I took look at &lt;a href=&#34;https://github.com/RMHogervorst/xkcd_weather_cities_nl&#34;&gt;https://github.com/RMHogervorst/xkcd_weather_cities_nl&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;inspiration&#34;&gt;Inspiration&lt;/h3&gt;

&lt;p&gt;According to this &lt;a href=&#34;http://www.masalmon.eu/2017/11/16/wheretoliveus/&#34;&gt;post by Maële Salmon&lt;/a&gt; inspired by xkcd, we can determine our ideal city by looking at wintertemperature and humidex (combination of humidity and summer heat).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve seen major cities in the USA (post by Maelle) and where to live in Spain &lt;a href=&#34;https://twitter.com/claudiaguirao/status/931615734521909248&#34;&gt;by Claudia Guirao&lt;/a&gt;. There is even one on France &lt;a href=&#34;https://twitter.com/matamix/status/932283897018273792&#34;&gt;in French, of course&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So I had to make one for the Netherlands too. There is just a small detail,
The Netherlands is tiny, the United States is approximately 237 times larger then The Netherlands. From The Hague to the German border directly east is 164 km (101 miles) and from Leeuwarden to Maastricht in the south is 262 km (162 miles). Essentially my home country has a moderate sea climate with warm summers and relatively mild winters.&lt;/p&gt;

&lt;p&gt;I expect there to be no real big differences between the cities. I use the average temperature over december, january and february for winter temperature and calculate the humidex using the &lt;a href=&#34;https://cran.r-project.org/web/packages/comf/index.html&#34;&gt;comf package&lt;/a&gt;. This humidex is a combination of humidity and temperature.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;20 to 29: Little to no discomfort&lt;/li&gt;
&lt;li&gt;30 to 39: Some discomfort&lt;/li&gt;
&lt;li&gt;40 to 45: Great discomfort; avoid exertion&lt;/li&gt;
&lt;li&gt;Above 45: Dangerous; heat stroke quite possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For cities I went the extremely lazy way and took all of the available weatherstations provided by the Dutch weather service (KNMI, &amp;mdash; Royal Netherlands, Metereological Institute). There are 46 stations in the Netherlands. These are not always in the cities but sort of broadly describe the entire country.&lt;/p&gt;

&lt;h3 id=&#34;plot-like-xkcd&#34;&gt;Plot like XKCD&lt;/h3&gt;

&lt;p&gt;The XKCD package has wonderful plotting abilities and a cool font that you have to install. I copied and modified the code from the post of Mäelle, because it is really good!&lt;/p&gt;

&lt;p&gt;If you want to see how I did the data cleaning go to the &lt;a href=&#34;https://github.com/RMHogervorst/xkcd_weather_cities_nl&#34;&gt;github page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First we plot all of the stations in the Netherlands &lt;em&gt;most of these places will probably not be familiar to non-Dutch people&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ggplot2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;extrafont&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ggrepel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

xrange &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
yrange &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;wintertemp&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kp&#34;&gt;set.seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3456&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Where to live in The Netherlands \nbased on your temperature preferences&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          subtitle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Data from KNMI, 2016-2017&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  xlab&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Summer heat and humidity via Humidex&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  ylab&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Winter temperature in Celsius degrees&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  xkcdaxis&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;xrange &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; xrange&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
           yrange &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; yrange&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme_xkcd&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;text &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/temperatureranges-in-the-netherlands-1.png&#34; alt=&#34;temperature ranges in the Netherlands alone&#34; /&gt;&lt;/p&gt;

&lt;p&gt;But what does that mean, in the grand scheme of things? As you might notice the range is very small. It would be interesting to add some US cities and perhaps some Spanisch cities to compare against. For fun I also added the Dutch Caribean islands.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;xrange2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# modified these by hand to increase the margins&lt;/span&gt;
yrange2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;-5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
USA &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; tribble&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;NAME&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;wintertemp&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;DETROIT, MI&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;NASHVILLE, TN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;FORT MEYERS, FL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
SPAIN &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; tribble&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;NAME&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;wintertemp&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;MADRID, SPAIN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;TENERIFE, SPAIN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;BARCELONA, SPAIN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
D_CARI &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; tribble&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;NAME&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;wintertemp&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;Bonaire, Caribbean Netherlands&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; calcHumx&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;76&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
      &lt;span class=&#34;s&#34;&gt;&amp;#34;Sint Eustatius, Caribbean Netherlands&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; calcHumx&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;77&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;   
      &lt;span class=&#34;s&#34;&gt;&amp;#34;Saba, Caribbean Netherlands&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; calcHumx&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;76&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kp&#34;&gt;set.seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3456&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;alpha &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;.7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                   family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; USA&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; USA&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; SPAIN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; SPAIN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; D_CARI&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; D_CARI&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;humidex_avg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    labs&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;title &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Where to live in The Netherlands based on \nyour temperature preferences \nCompared with some places in Spain, Caribbean NL and USA&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          subtitle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Data from KNMI, 2016-2017, added Spain and US cities&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Summer heat and humidity via Humidex&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Winter temperature in Celsius degrees&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         caption &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;includes Caribbean Netherlands&amp;#34;&lt;/span&gt;
             &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  xkcdaxis&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;xrange &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; xrange2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
           yrange &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; yrange2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme_xkcd&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;text &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/xkcd_NL_US_ESP.png&#34; alt=&#34;Netherlands, weatherplot XKCD style&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Finally we can compare the wintertemperature and summer humidex in The Netherlands by placing the points on a map using the coordinates of the measure stations.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NL &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; map_data&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;map &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;world&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;region &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Netherlands&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
result &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
    rename&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;LON &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`LON(east)`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; LAT &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`LAT(north)`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
    ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;LON&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; LAT&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wintertemp&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                   family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; fill &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;NA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    labs&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;title &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Wintertemperature in NL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         subtitle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;data from KNMI (2016,2017&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    theme_xkcd&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;text &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;result &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
    rename&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;LON &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`LON(east)`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; LAT &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`LAT(north)`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
    ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;LON&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; LAT&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; humidex_avg&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_text_repel&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;label &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NAME&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                   family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                   max.iter &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; fill &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;NA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    labs&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;title &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Humidex in NL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         subtitle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;data from KNMI (2016,2017&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    theme_xkcd&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;text &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; family &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xkcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
    scale_color_continuous&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;low &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; high &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/humidex_NL.png&#34; alt=&#34;Netherlands, humidex, gps&#34; /&gt;
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/wintertemp_NL.png&#34; alt=&#34;Netherlands, wintertemp, gps&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now show us what your country looks like!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UseR Brussels 2017 </title>
      <link>http://rmhogervorst.nl/cleancode/blog/2017/07/27/content/post/2017-07-27-use-r-2017-roundup/</link>
      <pubDate>Thu, 27 Jul 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2017/07/27/content/post/2017-07-27-use-r-2017-roundup/</guid>
      <description>&lt;p&gt;I went to UseR-2017 in Brussels. It was my first time at an UseR (I have been to the first satRday), AND I LOVED IT!
There were many interesting talks, I am so going to use Fast Frugal Trees in the future for instance
and I saw a lot of shiny applications and R professional.&lt;/p&gt;

&lt;p&gt;But best of all. I talked to a lot of people, people I only spoke to online.
Thanked some people for their help in my packages and generally had a lot of fun!&lt;/p&gt;

&lt;p&gt;One of the fun things I did was asking people about packages that should be created but
are not yet there, I put them here:  &lt;a href=&#34;https://github.com/RMHogervorst/shouldbeapackage&#34;&gt;https://github.com/RMHogervorst/shouldbeapackage&lt;/a&gt; Contribute if you want.&lt;/p&gt;

&lt;p&gt;One of the packages that should exist is one that gives you suggestions for Kareoke, preferably powerballads,
of course I used one of the breaks to create a github page and a package. However a suggestion app needs songs, so
me and &lt;a href=&#34;https://twitter.com/kobriendublin&#34;&gt;Kevin O&amp;rsquo;Brian&lt;/a&gt; tricked people into adding to the list of powerballads.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What we still need though, is a shiny app that you can access from your phone when you are IN the kareoke bar.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We put the package under a new github group: &lt;a href=&#34;https://github.com/Reoke/powrballad&#34;&gt;R-eoke &lt;/a&gt;
And yes, submit your songs!&lt;/p&gt;

&lt;p&gt;See you around.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Turning kindle notes into a tidy data</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2017/05/08/content/post/2017-05-08-making-kindle-highlights-tidy/</link>
      <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2017/05/08/content/post/2017-05-08-making-kindle-highlights-tidy/</guid>
      <description>

&lt;p&gt;It is my dream to do everything with R. And we aRe almost there. We can write blogs in blogdown or bookdown, write reports in RMarkdown (thank you &lt;a href=&#34;https://twitter.com/xieyihui&#34;&gt;Yihui Xie!&lt;/a&gt;) create interactive webpages with Shiny (thank you &lt;a href=&#34;https://twitter.com/winston_chang&#34;&gt;Winston Chang&lt;/a&gt;). Control our lifx lights with &lt;a href=&#34;https://github.com/cboettig/lifxr&#34;&gt;lifxr&lt;/a&gt; (great work &lt;a href=&#34;http://carlboettiger.info/&#34;&gt;Carl!&lt;/a&gt;) and use emoticons everywhere with the emo package.&lt;/p&gt;

&lt;p&gt;There is even a novel of my vision! I recently found chapter 40 of &lt;a href=&#34;http://www.psi-chology.com/the-day-the-priming-stopped/&#34;&gt;A Dr. Primestein Adventure™ The Day the Priming Stopped&lt;/a&gt;. There is a scene in there which says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“This Fortress is a monumental technological achievement,” explained Professor Power. “Every aspect of the Fortress’s security is run by R.” As they arrived at the metal doors, the Professor pressed a small button on the wall to the right. “This is an elevatoR, run by its own R package.” They waited for the doors to open, but nothing happened. After a few minutes of alternately waiting and then mashing the elevatoR button, Professor Power called someone on his mobile phone. “The elevatoR is not working&amp;hellip;what? Why would they do that?&amp;hellip;call Hadley Wickham!&amp;hellip;doesn’t anyone around here check packages against the development version of R before upgrading?&amp;hellip;yes, we’ll wait.” “Someone upgraded R without permission. Should be fixed soon,” Professor Power explained.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But enough about jokeRs and jesteRs. As it is my life long mission to do everything in R and preferably in the &lt;a href=&#34;http://tidyverse.org/&#34;&gt;tidyverse&lt;/a&gt;, I found something that wasn&amp;rsquo;t tidy 😞 !!! Kindle notes!&lt;/p&gt;

&lt;h1 id=&#34;kindle-notes-and-highlights&#34;&gt;kindle notes and highlights.&lt;/h1&gt;

&lt;p&gt;I have a 2010 kindle to read E-books on and once in a while I write a note or highlight some text in the book. If you connect your kindle to the computer you can extract the highlights by copying the file `My Clippings.txt&amp;rsquo; to your computer.&lt;/p&gt;

&lt;p&gt;This is great, it&amp;rsquo;s a text file which means you can open it on every computer and search throug the contents. However&amp;hellip;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s not tidy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let&amp;rsquo;s change that. The general procedure is thus:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a new project in Rstudio&lt;/li&gt;
&lt;li&gt;Create a new folder called &lt;code&gt;data&lt;/code&gt; (or don&amp;rsquo;t but really this is neat isn&amp;rsquo;t it?)&lt;/li&gt;
&lt;li&gt;Copy the &lt;code&gt;My Clippings.txt&lt;/code&gt; file to that &lt;code&gt;data&lt;/code&gt;-folder&lt;/li&gt;
&lt;li&gt;Load the tidyverse `library(tidyverse)&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Hammer away untill the txt file is a data frame.&lt;/li&gt;
&lt;li&gt;profit?&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;what-is-in-this-text-file&#34;&gt;What is in this text file?&lt;/h3&gt;

&lt;p&gt;First we do some exploratory work on the file. I&amp;rsquo;ve found that the text file is structured in a particular way:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;title  (author)
- Highlight on Page 128 | Loc. 1962-68  | Added on Sunday, December 27, 2015, 03:09 PM
&amp;lt;empty line&amp;gt;
highlighted text
==========
title of the next highlighted book (author)
etc.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;So how do we force this into a data frame?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Recognize the structure ( we will create functions for that)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chunks end with the ten ===== signs, we can split on that&lt;/li&gt;
&lt;li&gt;first line is the title and (author)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;we can seperate the author and the title&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;next line of information is devided by &amp;lsquo;|&amp;rsquo; signs.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;type, page, location, added date and time (in american time of course&amp;hellip;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;highlighted text (or if it is a bookmark, nothing)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;tidyverse&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Loading tidyverse: ggplot2
## Loading tidyverse: tibble
## Loading tidyverse: tidyr
## Loading tidyverse: readr
## Loading tidyverse: purrr
## Loading tidyverse: dplyr

## Conflicts with tidy packages ----------------------------------------------

## filter(): dplyr, stats
## lag():    dplyr, stats
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;raw_text &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; read_file&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data/My Clippings.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# read in the text file&lt;/span&gt;
per_chunk &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;unlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;strsplit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;raw_text&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;==========&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# seperate into chunks&lt;/span&gt;
per_chunk&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;\r\nThe Clean Coder_ A Code of Conduct For Professional Programmers - Robert C. Martin (Robert C. Martin)\r\n- Highlight on Page 90 | Added on Monday, January 25, 2016, 04:06 PM\r\n\r\nK ATA In martial arts, a kata is a precise set of choreographed movements that simulates one side of a combat. The goal, which is asymptotically approached, is perfection. The artist strives to teach his body to make each movement perfectly and to assemble those movements into fluid enactment. Well-executed kata are beautiful to watch. Beautiful though they are, the purpose of learning a kata is not to perform it on stage. The purpose is to train your mind and body how to react in a particular combat situation. The goal is to make the perfected movements automatic and instinctive so that they are there when you need them. A programming kata is a precise set of choreographed keystrokes and mouse movements that simulates the solving of some programming problem. You arent actually solving the problem because you already know the solution. Rather, you are practicing the movements and decisions involved in solving the problem.\r\n&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above I have created seperate chunks that represent seperate highlights. And a example so you can see what I see.&lt;/p&gt;

&lt;p&gt;Now for extracting the seperate elements. I create functions that do one thing.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# This function takes a chunk of character information&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# and seperates it into lines. &lt;/span&gt;
seperate_into_lines &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chunk&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    result &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_split&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chunk&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\r\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;unlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# result &amp;lt;- seperate_into_lines(per_chunk[100])  # testing if this works &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## you should put this into formal test frameworks such as testhat if you&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;## build a package. &lt;/span&gt;



&lt;span class=&#34;c1&#34;&gt;# Extract title sentance and remove author&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# This function presumes that you already extracted the raw data into&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# character chunks.&lt;/span&gt;
extract_title &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;linechunk&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# search for second line&lt;/span&gt;
    titleline &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; linechunk&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;gsub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\\(.*\\)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; titleline&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# it took me some &lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;#time to work this regular expression out.&lt;/span&gt;
    stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;both&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# remove whitespace at ends&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#extract_title(result) # testcase to see if it works for me.&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# Extract the author from chunk, this function looks &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# very much like the one above, it uses the same logic.&lt;/span&gt;
extract_author &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;linechunk&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# search for second line&lt;/span&gt;
    titleline &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; linechunk&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# identical&lt;/span&gt;
    author &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_extract&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;titleline&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\\(.*\\)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# extract piece&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;gsub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\\(|\\)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; author&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# &lt;/span&gt;
    stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;both&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# extract_author(result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&amp;rsquo;s see if this works on a subset of the data. I usually take multiple notes in one book before I open another, so in this case the first 20 notes are really boring and all from the same book. To spice this up I take a random subset of rows. I will use a simple for-loop here, but I will use functional programming in the end-result. It works kind of the same, but is more explicit.&lt;/p&gt;

&lt;p&gt;Some people will tell you that for-loops are slow in R, or that &amp;lsquo;loops are bad&amp;rsquo; but they don&amp;rsquo;t know what they are talking about.[1]&lt;/p&gt;

&lt;p&gt;I first create a data_frame [2] and pre-populate it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# testset &amp;lt;- per_chunk[1:20]  # You would use this if you want the first 20 pieces.&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;set.seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4579&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# if you do random stuff, it is wise to &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# set the seed so that others can reproduce your work.&lt;/span&gt;
testset &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; per_chunk&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;base&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;sample&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;per_chunk&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; 
&lt;span class=&#34;c1&#34;&gt;# unfortunately dplyr also has a function called sample. to specify that&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# we want the &amp;#39;normal&amp;#39; one I specify the name of the package followed by&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# two &amp;#39;:&amp;#39;. &lt;/span&gt;
testingframe &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    author &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;length &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    title &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; i &lt;span class=&#34;kr&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;seq_along&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)){&lt;/span&gt;
    hold &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; testset&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; seperate_into_lines&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    testingframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;author&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_author&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    testingframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;title &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_title&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
testingframe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 20 × 2
##                                     author
##                                      &amp;lt;chr&amp;gt;
## 1             Andrew Hunt and David Thomas
## 2             Andrew Hunt and David Thomas
## 3                            Alex Reinhart
## 4                              David Price
## 5            City Watch #1 Terry Pratchett
## 6            City Watch #1 Terry Pratchett
## 7                              Mark Manson
## 8                     Kim Stanley Robinson
## 9                     Kim Stanley Robinson
## 10                    Kim Stanley Robinson
## 11         Douglas DeCarlo, James P. Lewis
## 12                             David Price
## 13           City Watch #2 Terry Pratchett
## 14 Kenneth Knoblauch &amp;amp; Laurence T. Maloney
## 15                           Alex Reinhart
## 16            Andrew Hunt and David Thomas
## 17                        Robert C. Martin
## 18            Andrew Hunt and David Thomas
## 19            Andrew Hunt and David Thomas
## 20                             David Price
## # ... with 1 more variables: title &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The author and title functions seem to work, let&amp;rsquo;s extract some more information. The third row contained multiple pieces of information&lt;/p&gt;

&lt;p&gt;example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- Highlight on Page 132 | Loc. 2017-20  | Added on Saturday, August 20, 2016, 09:37 AM
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Like the first functions we first select the correct row [3] and than apply some magic.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# this function extracts all the pieces&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# and subsequent functions will deal with the seperate stuff.&lt;/span&gt;
extract_type_location_date &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;linechunk&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    meta_row &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; linechunk&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    pieces &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_split&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;meta_row&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\\|&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# the literal character, &lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# the &amp;#39;|&amp;#39; has a special meaning in regexp.&lt;/span&gt;
    &lt;span class=&#34;kp&#34;&gt;unlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;pieces&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# extract_type_location_date(result) # test function&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# extract type from combined result.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Here the use of the pipe `%&amp;gt;%` operator &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# makes the steps clear.&lt;/span&gt;
extract_type &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;pieces&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    pieces&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# select the first row&lt;/span&gt;
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_extract&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;- [[:alnum:]]{1,} &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# extract at least one character.&lt;/span&gt;
        &lt;span class=&#34;kp&#34;&gt;gsub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# replace - with nothing, removing it&lt;/span&gt;
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;both&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# remove whitespace at both sides&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# extract_type_location_date(result) %&amp;gt;% &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#     extract_type()&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# extract page number by selecting first piece,&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# trimming off of whitespace&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# selecting a number, at least 1 times, followed by end of line.&lt;/span&gt;
extract_pagenumber &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;pieces&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    pieces&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;right&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# remove right end&lt;/span&gt;
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_extract&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[0-9]{1,}$&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        &lt;span class=&#34;kp&#34;&gt;as.numeric&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# extract_type_location_date(result) %&amp;gt;%&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#     extract_pagenumber()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Extract locations. Just like above.&lt;/span&gt;
extract_locations &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;pieces&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    pieces&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;both&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_extract&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[0-9]{1,}-[0-9]{1,}$&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# extract_type_location_date(result) %&amp;gt;% &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#     extract_locations()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Extract date and convert to standard time, not US centric.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# I use the strptime from the base package here. The time is &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# US-centric, but structured, so we can use the formatting from strptime.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# For example: %B is Full month name in the current locale&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# and %I:%M %p means hours, minutes, am/pm. &lt;/span&gt;
extract_date &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;pieces&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    pieces&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_trim&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; side &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;both&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        stringr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;str_extract&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[A-z]{3,} [0-9]{1,2}, [0-9]{4}, [0-9]{2}:[0-9]{2} [A-Z]{2}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        &lt;span class=&#34;kp&#34;&gt;strptime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;format &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;%B %e, %Y, %I:%M %p&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Extract the highlight part.&lt;/span&gt;
extract_highlights &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;linechunk&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    linechunk&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# extract_highlights(result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In general:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Split into chunks (already did that: per_chunk)&lt;/li&gt;
&lt;li&gt;Create a data frame&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Apply extractors per chunk into data_frame&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I would really love it if someone showed me how to do this with purrr&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;finalframe &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    author &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;length &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    title &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    location &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    pagenr &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;numeric&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    type &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    highlight &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# loop through all values &lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; i &lt;span class=&#34;kr&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;seq_along&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;testset&lt;span class=&#34;p&#34;&gt;)){&lt;/span&gt;
    hold &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; testset&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; seperate_into_lines&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    finalframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;author&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_author&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    finalframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;title&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_title&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    finalframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;location&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_type_location_date&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_locations&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    finalframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;pagenr&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_type_location_date&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_pagenumber&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    finalframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;type&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_type_location_date&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_type&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    finalframe&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;highlight&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; hold &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; extract_highlights&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
finalframe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 20 × 6
##                                     author
##                                      &amp;lt;chr&amp;gt;
## 1             Andrew Hunt and David Thomas
## 2             Andrew Hunt and David Thomas
## 3                            Alex Reinhart
## 4                              David Price
## 5            City Watch #1 Terry Pratchett
## 6            City Watch #1 Terry Pratchett
## 7                              Mark Manson
## 8                     Kim Stanley Robinson
## 9                     Kim Stanley Robinson
## 10                    Kim Stanley Robinson
## 11         Douglas DeCarlo, James P. Lewis
## 12                             David Price
## 13           City Watch #2 Terry Pratchett
## 14 Kenneth Knoblauch &amp;amp; Laurence T. Maloney
## 15                           Alex Reinhart
## 16            Andrew Hunt and David Thomas
## 17                        Robert C. Martin
## 18            Andrew Hunt and David Thomas
## 19            Andrew Hunt and David Thomas
## 20                             David Price
## # ... with 5 more variables: title &amp;lt;chr&amp;gt;, location &amp;lt;chr&amp;gt;, pagenr &amp;lt;dbl&amp;gt;,
## #   type &amp;lt;chr&amp;gt;, highlight &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cool right?  Find this specific project on my &lt;a href=&#34;https://github.com/RMHogervorst/kindle_notes&#34;&gt;github page&lt;/a&gt;. (I will also add a script only version shortly)&lt;/p&gt;

&lt;h3 id=&#34;state-of-machine&#34;&gt;state of machine&lt;/h3&gt;

&lt;p&gt;&lt;details&gt; &lt;summary&gt; click to expand to see machine info&lt;/summary&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;sessioninfo&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;session_info&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## - Session info ----------------------------------------------------------
##  setting  value                       
##  version  R version 3.3.3 (2017-03-06)
##  os       Windows 10 x64              
##  system   x86_64, mingw32             
##  ui       RTerm                       
##  language (EN)                        
##  collate  Dutch_Netherlands.1252      
##  tz       Europe/Berlin               
##  date     2017-05-08                  
## 
## - Packages --------------------------------------------------------------
##  package     * version    date       source                             
##  assertthat    0.1        2013-12-06 CRAN (R 3.3.0)                     
##  backports     1.0.5      2017-01-18 CRAN (R 3.3.2)                     
##  broom         0.4.2      2017-02-13 CRAN (R 3.3.2)                     
##  clisymbols    1.1.0      2017-01-27 CRAN (R 3.3.3)                     
##  colorspace    1.3-2      2016-12-14 CRAN (R 3.3.2)                     
##  DBI           0.6-1      2017-04-01 CRAN (R 3.3.3)                     
##  digest        0.6.12     2017-01-27 CRAN (R 3.3.3)                     
##  dplyr       * 0.5.0      2016-06-24 CRAN (R 3.3.1)                     
##  emo           0.0.0.9000 2017-04-27 Github (hadley/emo@97754fd)        
##  evaluate      0.10       2016-10-11 CRAN (R 3.3.3)                     
##  forcats       0.2.0      2017-01-23 CRAN (R 3.3.2)                     
##  foreign       0.8-67     2016-09-13 CRAN (R 3.3.3)                     
##  ggplot2     * 2.2.1      2016-12-30 CRAN (R 3.3.2)                     
##  gtable        0.2.0      2016-02-26 CRAN (R 3.3.0)                     
##  haven         1.0.0      2016-09-23 CRAN (R 3.3.1)                     
##  hms           0.3        2016-11-22 CRAN (R 3.3.2)                     
##  htmltools     0.3.5      2016-03-21 CRAN (R 3.3.0)                     
##  httr          1.2.1      2016-07-03 CRAN (R 3.3.1)                     
##  jsonlite      1.3        2017-02-28 CRAN (R 3.3.3)                     
##  knitr         1.15.1     2016-11-22 CRAN (R 3.3.2)                     
##  lattice       0.20-35    2017-03-25 CRAN (R 3.3.3)                     
##  lazyeval      0.2.0      2016-06-12 CRAN (R 3.3.0)                     
##  lubridate     1.6.0      2016-09-13 CRAN (R 3.3.1)                     
##  magrittr      1.5        2014-11-22 CRAN (R 3.3.0)                     
##  mnormt        1.5-5      2016-10-15 CRAN (R 3.3.2)                     
##  modelr        0.1.0      2016-08-31 CRAN (R 3.3.2)                     
##  munsell       0.4.3      2016-02-13 CRAN (R 3.3.0)                     
##  nlme          3.1-131    2017-02-06 CRAN (R 3.3.3)                     
##  plyr          1.8.4      2016-06-08 CRAN (R 3.3.0)                     
##  psych         1.7.3.21   2017-03-22 CRAN (R 3.3.3)                     
##  purrr       * 0.2.2      2016-06-18 CRAN (R 3.3.1)                     
##  R6            2.2.0      2016-10-05 CRAN (R 3.3.1)                     
##  Rcpp          0.12.10    2017-03-19 CRAN (R 3.3.3)                     
##  readr       * 1.1.0      2017-03-22 CRAN (R 3.3.3)                     
##  readxl        0.1.1      2016-03-28 CRAN (R 3.3.0)                     
##  reshape2      1.4.2      2016-10-22 CRAN (R 3.3.2)                     
##  rmarkdown     1.4        2017-03-24 CRAN (R 3.3.3)                     
##  rprojroot     1.2        2017-01-16 CRAN (R 3.3.2)                     
##  rvest         0.3.2      2016-06-17 CRAN (R 3.3.1)                     
##  scales        0.4.1      2016-11-09 CRAN (R 3.3.2)                     
##  sessioninfo   0.0.0.9000 2017-04-25 Github (r-pkgs/sessioninfo@0a5b58f)
##  stringi       1.1.5      2017-04-07 CRAN (R 3.3.3)                     
##  stringr       1.2.0      2017-02-18 CRAN (R 3.3.3)                     
##  tibble      * 1.3.0      2017-04-01 CRAN (R 3.3.3)                     
##  tidyr       * 0.6.1      2017-01-10 CRAN (R 3.3.2)                     
##  tidyverse   * 1.1.1      2017-01-27 CRAN (R 3.3.2)                     
##  withr         1.0.2      2016-06-20 CRAN (R 3.3.1)                     
##  xml2          1.1.1      2017-01-24 CRAN (R 3.3.2)                     
##  yaml          2.1.14     2016-11-12 CRAN (R 3.3.2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;

&lt;p&gt;[1] ^1&lt;/p&gt;

&lt;p&gt;[2] I use the tidyverse form of a data.frame called tibble or data_frame, it is like a data.frame but it never converts character to factor and never adds rownames . See more at &lt;code&gt;?tibble::tibble&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;[3] This is absolutely not a robust way of programming, if the format ever changes, all my functions are screwed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing manuscripts in Rstudio, easy citations</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2017/03/14/content/post/2017-03-14-writing-manuscripts-in-rstudio/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2017/03/14/content/post/2017-03-14-writing-manuscripts-in-rstudio/</guid>
      <description>

&lt;h2 id=&#34;intro-and-setup&#34;&gt;Intro and setup&lt;/h2&gt;

&lt;p&gt;This is a simple explanation of how to write a manuscript in RStudio. Writing a manuscript in RStudio is not ideal, but it has gotten better over time. It is now relatively easy to add citations to documents in RStudio.&lt;/p&gt;

&lt;p&gt;**The goal is not think about formatting, and citations, but to write the manuscript and add citations on the fly with a nice visual help. **&lt;/p&gt;

&lt;p&gt;This tutorial explains how to link Zotero (a reference manager) to your project folder and how to easily add citations.
In this tutorial I assume you have &lt;a href=&#34;www.zotero.org&#34;&gt;Zotero&lt;/a&gt; installed.
You will need to have the zotero extension &lt;a href=&#34;https://github.com/retorquere/zotero-better-bibtex/wiki&#34;&gt;betterBibtex&lt;/a&gt; installed and I will
use RStudio, with the packages knitr, shiny and other basic tooling in place.
To search and insert citations in a file you will need to install the package
&lt;code&gt;citr&lt;/code&gt;  install the latest &lt;a href=&#34;https://github.com/crsh/citr&#34;&gt;&lt;em&gt;dev-version from github&lt;/em&gt;&lt;/a&gt; or the stable version from &lt;a href=&#34;https://CRAN.R-project.org/package=citr&#34;&gt;cran&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;why-would-i-write-my-manuscript-in-rstudio&#34;&gt;Why would I write my manuscript in RStudio?&lt;/h2&gt;

&lt;p&gt;The main reasons to write in RStudio ( and not in f.i. Word ) are reproducibity, and version control. Writing in plain text as you do in RStudio makes it very easy to keep track of your work with version control and the plain files are easily shared. Working from RStudio also allows you to combine the code and text in one document. This is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Literate_programming&#34; title=&#34;wikipedia link&#34;&gt;literate programming&lt;/a&gt;. Literate programming makes it incredibly easy to share your code (it&amp;rsquo;s in the document) and compiling the document runs the code again, ensuring reproducibility.&lt;/p&gt;

&lt;p&gt;I use RStudio projects so everything
important to a project is in the same folder and the working directory is  automatically correct. I create a new RMarkdown document &lt;img src=&#34;{{ site.url }}/images/example_rstudio_manuscript.PNG&#34; alt=&#34;rmarkdown doc&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;earlier-workflows&#34;&gt;Earlier workflows&lt;/h4&gt;

&lt;p&gt;It was always possible to intersperse code and text in R, previously people used the &lt;code&gt;Sweave&lt;/code&gt; package to combine code and text. You had to write the text in Latex and markup the code. Latex prints very pretty, but in raw form it is horrible to read, as you can see in the example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\documentclass[12pt]{article}
\usepackage{lingmacros}
\usepackage{tree-dvips}
\begin{document}

\section*{Notes for My Paper}

Don&#39;t forget to include examples of topicalization.
They look like this:

{\small
\enumsentence{Topicalization from sentential subject:\\ 
\shortex{7}{a John$_i$ [a &amp;amp; kltukl &amp;amp; [el &amp;amp; 
  {\bf l-}oltoir &amp;amp; er &amp;amp; ngii$_i$ &amp;amp; a Mary]]}
{ &amp;amp; {\bf R-}clear &amp;amp; {\sc comp} &amp;amp; 
  {\bf IR}.{\sc 3s}-love   &amp;amp; P &amp;amp; him &amp;amp; }
{John, (it&#39;s) clear that Mary loves (him).}}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;I copied this from a example page.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:http-mally-stanf&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:http-mally-stanf&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The output looks beautiful, but it&amp;rsquo;s damn near unworkable in plain text. And even worse, mistakes are easily made and very hard to find (since you don&amp;rsquo;t know where the trouble started, and the error messages are quite cryptic).&lt;/p&gt;

&lt;h4 id=&#34;from-latex-sweave-to-rmarkdown&#34;&gt;From latex / Sweave to RMarkdown&lt;/h4&gt;

&lt;p&gt;Markdown is a very simple markup language that is readable for humans and can be translated into html / latex / word / etc by computers. In stead of \section{name fo the section} we can just use a pound symbol (a.k.a. hashtag: #) to mark a heading. One pound for a heading 1, 2 for heading 2 etc. The difference between markdown and RMarkdown is R-code in the text. There are plenty good tutorials out there so I will only give you one&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:http-rmarkdown-r&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:http-rmarkdown-r&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; and a search online will give you more.&lt;/p&gt;

&lt;h4 id=&#34;citations&#34;&gt;Citations&lt;/h4&gt;

&lt;p&gt;Citations connect your paper to the past, linking your research to earlier research. It is essential that people can find the correct paper or book you are referring to. For that reason (and vanity I think) there are many styles of citations. I&amp;rsquo;ve used the APA and Chicago style in the past and there are probably about 500. Every single one has different rules; cite inline by author name and year, or by number, etc.&lt;/p&gt;

&lt;p&gt;If you resubmit your paper to a journal with a different citation style you have to rewrite every citation in the manuscript. Because we have better things to do, there are reference managers that automatically use the correct styling. And that change all the references in the text. I have used this in Word and LibreOffice in the past. But changing styles works a bit different in plain text formats such as markdown and latex. In general you cite research by a &lt;strong&gt;key&lt;/strong&gt; that refers to a &lt;strong&gt;bibliography&lt;/strong&gt;. In the build process the keys are replaced with the citations in the style that you want, so that the endproduct has the correct citations.
This is also implemented in Latex and RStudio. In general the workflow is as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;add the citations in the correct &amp;lsquo;language&amp;rsquo; (bibtex) to your document or to a different document and provide a link to.&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;keys&lt;/strong&gt; that refer to the correct entry in the bibtex.&lt;/li&gt;
&lt;li&gt;The citation manager inserts the correctly styled reference in the correct location while it writes the final version.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You write and cite like this:&lt;/p&gt;

&lt;p&gt;&amp;ldquo;The ggplot2 package is used to plot images in layers [@wickham_ggplot2_2009].&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The key (a at-sign and name) refers to a bibtex entry. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@book{wickham_ggplot2_2009,
  address = {New York, NY},
  title = {Ggplot2},
  isbn = {978-0-387-98140-6 978-0-387-98141-3},
  language = {en},
  timestamp = {2017-02-19T10:19:27Z},
  urldate = {2015-11-09},
  url = {http://ggplot2.org},
  publisher = {{Springer New York}},
  author = {Wickham, Hadley},
  year = {2009},
  note = {04749},
  file = {ggplot2 - hadley wickham.pdf:C\:\\Users\\roel\\AppData\\Roaming\\Zotero\\Zotero\\Profiles\\aw40nx7l.default\\zotero\\storage\\AADU9XVP\\ggplot2 - hadley wickham.pdf:application/pdf}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which will resolve to (if you use APA formatting):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The ggplot2 package is used to plot images in layers (Wickham, 2009).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;bibtex-files-creation&#34;&gt;Bibtex files creation&lt;/h3&gt;

&lt;p&gt;Now, making your own bibtex files is a serious pain in the backside. So we don&amp;rsquo;t do that. We also don&amp;rsquo;t try to remember all the keys, but first about the creation of the bibtex file.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t want to keep track of the correct way to cite sources, that is just a waste of time. We have excellent reference managers for this goal. I use Zotero. I just throw the pdfs in the correct folder and Zotero finds the correct metadata using the pdfs DOI (digital object identifier).
This is how it looks on my computer
&lt;img src=&#34;{{ site.url }}/images/example_zotero_look.PNG&#34; alt=&#34;a snapshot of zotero on my pc&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I use the extension &lt;a href=&#34;link&#34;&gt;betterbibtex&lt;/a&gt;, that adds extra functionality to Zotero. In this case it also takes care of synchronizing the bibtext file that you export to the folder you&amp;rsquo;re working in and the corresponding collection in Zotero. (see further on).&lt;/p&gt;

&lt;p&gt;I export the collection from zotero into the rstudio folder. &lt;img src=&#34;{{ site.url }}/images/example_zotero_keep_updated.PNG&#34; alt=&#34;zotero keep updated image&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;the-rmarkdown-document&#34;&gt;The RMarkdown document&lt;/h4&gt;

&lt;p&gt;If you open a new rmarkdown document from the RStudio console a basic document with metadata is already opened.
The top of your manuscript should contain metadata such as the title output and in this case we also need to append it to show where to find the bibliography.:
For example we make a html document called sample_Document with a bibliography based on a document bibliography.bib found in the same folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Sample Document&amp;quot;
output: html_document
bibliography: bibliography.bib
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While writing the manuscript we cite like so &lt;img src=&#34;{{ site.url }}/images/example_adding_citations_rmarkdown.PNG&#34; alt=&#34;image of citing&#34; /&gt;&lt;/p&gt;

&lt;p&gt;For more information about citations and bibliographies look at the RStudio website&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:http-rmarkdown-r&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:http-rmarkdown-r&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h4 id=&#34;choosing-a-citation-style-in-the-manuscript&#34;&gt;Choosing a citation style in the manuscript&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;update 2017-03-15&lt;/em&gt; Michael Koontz &lt;a href=&#34;https://twitter.com/_mikoontz/status/838859261572591623&#34;&gt;explains how to add a citation style to your document&lt;/a&gt; in short:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;search for a citation style &lt;a href=&#34;https://github.com/citation-style-language/styles/find/master&#34;&gt;https://github.com/citation-style-language/styles/find/master&lt;/a&gt; (f.i. APA)&lt;/li&gt;
&lt;li&gt;find the correct file and click on raw&lt;/li&gt;
&lt;li&gt;copy the link to the citation style file in the yaml
&lt;code&gt;
---
title: &amp;quot;Sample Document&amp;quot;
output: html_document
bibliography: bibliography.bib
csl: https://raw.githubusercontent.com/citation-style-language/styles/master/apa.csl
---
&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;making-citing-easier-with-the-help-of-citr&#34;&gt;Making citing easier with the help of CITR&lt;/h4&gt;

&lt;p&gt;Then use the citr package &lt;a href=&#34;https://github.com/crsh/citr&#34;&gt;https://github.com/crsh/citr&lt;/a&gt;.
&lt;em&gt;Citr works quite nicely, but unfortunately it has recently acquired default behavior that is frankly annoying. If Zotero is active (open in a window on your computer), citr will ignore the bibliography you mentioned in the top of the document and just try to read in the entire zotero library. (which will fail on my computer) I had to change a setting to change this.&lt;/em&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:you-have-to-chan&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:you-have-to-chan&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Loading citations:
&lt;img src=&#34;{{ site.url }}/images/example_loading_citr.PNG&#34; alt=&#34;image of loading citr&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Adding a citation to a document:
&lt;img src=&#34;{{ site.url }}/images/example_adding_citation_with_citr.PNG&#34; alt=&#34;image of adding a citation&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This adds the correct citation as you can see&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;{{ site.url }}/images/example_citation_side_by_side.PNG&#34; alt=&#34;side by side comparison&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This piece became a bit longer then anticipated but I discovered new behavior of &lt;code&gt;citr&lt;/code&gt;, so there&amp;rsquo;s that.
All in all RStudio / R and related tools can become the complete workbench for reading in data, cleaning and analyzing, and also writing the manuscript.&lt;/p&gt;

&lt;p&gt;For practical examples of reproducible work see this book&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:https-www-practi&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:https-www-practi&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:http-mally-stanf&#34;&gt;&lt;a href=&#34;http://mally.stanford.edu/~sr/computing/latex-example.html&#34;&gt;http://mally.stanford.edu/~sr/computing/latex-example.html&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:http-mally-stanf&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:http-rmarkdown-r&#34;&gt;&lt;a href=&#34;http://rmarkdown.rstudio.com/lesson-1.html&#34;&gt;http://rmarkdown.rstudio.com/lesson-1.html&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:http-rmarkdown-r&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:http-rmarkdown-r&#34;&gt;&lt;a href=&#34;http://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html&#34;&gt;http://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:http-rmarkdown-r&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:you-have-to-chan&#34;&gt; you have to change &lt;code&gt;options(citr.use_betterbiblatex = FALSE)&lt;/code&gt; adding this to .Renviron works &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:you-have-to-chan&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:https-www-practi&#34;&gt;&lt;a href=&#34;https://www.practicereproducibleresearch.org/&#34;&gt;https://www.practicereproducibleresearch.org/&lt;/a&gt; &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:https-www-practi&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Generate text using Markov Chains (sort of)</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2017/01/21/content/post/2017-01-21-markov-chain/</link>
      <pubDate>Sat, 21 Jan 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2017/01/21/content/post/2017-01-21-markov-chain/</guid>
      <description>

&lt;p&gt;Inspired by the hilarious podcast &lt;a href=&#34;gagh.biz&#34; title=&#34;A podcast by two people who are a little embarrassed to have a podcast about Star Trek the Next Generation&#34;&gt;The Greatest Generation&lt;/a&gt;, I have worked again with all the lines from all the episode scripts of TNG.
Today I will make a clunky bot (although it does nothing and is absolutely not useful) that talks like Captain Picard.
I actually wanted to use a Markov Chain to generate text. A Markov Chain has a specific property. It doesn&amp;rsquo;t care what happened before, it only looks at probabilities from the current state to a next state.&lt;/p&gt;

&lt;h3 id=&#34;markov-chains&#34;&gt;Markov Chains&lt;/h3&gt;

&lt;p&gt;An example is a board game based on dice throws. Every time I throw the die there are equal opportunities to go from my current side to any other side. In this case every probability is equal, but when the die is loaded probabilities would change.&lt;/p&gt;

&lt;p&gt;In the current example I&amp;rsquo;m using all the phrases I extracted from the series TNG &lt;a href=&#34;For%20more%20info%20about%20this%20particular%20dataset,%20go%20to%20%3Chttp://github.com/rtrek%3E&#34;&gt;1&lt;/a&gt;. And then well use words that follow each other choosing &amp;ldquo;randomly&amp;rdquo; but weighted by occurrence.&lt;/p&gt;

&lt;h1 id=&#34;but-first-cleaning&#34;&gt;But first cleaning&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;m using the packages dplyr, stringr, tidytext and tidyr.
If you&amp;rsquo;d like to follow along download the &lt;a href=&#34;https://github.com/RTrek/TNG/raw/master/data/TNG.rda&#34; title=&#34;this link goes to the dataset ~26 mb, if you don&#39;t trust that, go to that repo and download the csv file from data-raw&#34;&gt;dataset&lt;/a&gt; and load it in R with load(&amp;ldquo;path to file&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;The dataset itself is rather large &lt;code&gt;dim(TNG) #110176     17&lt;/code&gt; with 11 thousand rows and 17 variables. However we will only use the variables &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;who&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt;. &lt;code&gt;Type&lt;/code&gt; contains either &amp;ldquo;description&amp;rdquo; or &amp;ldquo;speech&amp;rdquo;. We only need speech. Because I was a novice and because in general I&amp;rsquo;m not very tidy &lt;a href=&#34;Which%20is%20rather%20ironic%20since%20I%20like%20to%20adore%20to%20Tidy%20principles...&#34;&gt;2&lt;/a&gt; this dataset is rather dirty. I copied and did not sanitize the who part. This means that if you filter on &amp;ldquo;Riker&amp;rdquo;, you will not get everything he said. The script has weird things like: &amp;ldquo;Riker&amp;rsquo;s com voice&amp;rdquo;, &amp;ldquo;Riker&amp;rsquo;s voice&amp;rdquo; and several variants of &amp;ldquo;V.O.&amp;rdquo; (means voice over).&lt;/p&gt;

&lt;h2 id=&#34;cleaning-the-who-column&#34;&gt;Cleaning the who column&lt;/h2&gt;

&lt;p&gt;We have to clean out the who column, filter only the rows that contain speech. Perhaps we also want to select only rows for certain characters. And finally we want to cut up the text into bigrams or trigrams. Thanks to an excellent &lt;a href=&#34;http://tidytextmining.com/&#34; title=&#34;free to read on the internet&#34;&gt;book&lt;/a&gt; by Julia Silge and David Robinson this was surprisingly easy to do. I cannot recommend their package &lt;a href=&#34;https://cran.r-project.org/package=tidytext&#34;&gt;tidytext&lt;/a&gt; enough, truly awesome!&lt;/p&gt;

&lt;p&gt;You could do the following steps all in one pipe, but for clarity sake, and your sanity, we will take smaller steps.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;speech_TNG &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; TNG &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;type &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;speech&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# select only speech parts&lt;/span&gt;
        mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;who &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; str_replace&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;who&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#39;S COM VOICE&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                       str_replace&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\\(.{1,}\\)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                       str_replace&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\&amp;#34;.{1,}\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                       str_replace&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;YOUNG&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                       str_replace&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#39;S VOICE&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                       str_trim&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This looks crazy, but don&amp;rsquo;t despair:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;assign to speech_TNG the result of:&lt;/li&gt;
&lt;li&gt;take TNG &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;return only the rows where type is &amp;ldquo;speech&amp;rdquo; &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;mutate the who column by

&lt;ul&gt;
&lt;li&gt;replacing from the who column &amp;ldquo;&amp;rsquo;S COM VOICE&amp;rdquo; with nothing &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;replacing a &amp;ldquo;(&amp;rdquo; followed by at least 1 any character followed by a &amp;ldquo;)&amp;rdquo; with nothing &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;replacing quotation marks (&amp;rdquo; &amp;ldquo;) with any characters in between with nothing &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;replacing YOUNG with nothing &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;replacing &amp;rsquo;s voice with nothing &lt;code&gt;THEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;trimming all whitespace at start and end&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How did I know how to build this enormous pipe? I took a sample of the who column and tried stuff untill it suited my needs [3].&lt;/p&gt;

&lt;p&gt;[3]: for example &lt;code&gt;sample &amp;lt;- TNG %&amp;gt;% filter(type == &amp;quot;speech&amp;quot;) %&amp;gt;% select(who) %&amp;gt;% sample_n(20) %&amp;gt;% .$who&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;extracting-bi-and-trigrams-per-character&#34;&gt;Extracting bi- and trigrams per character&lt;/h1&gt;

&lt;p&gt;And now we can create seperate datasets for every character.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;bigrams_data &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; speech_TNG &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;who &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;DATA&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        unnest_tokens&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;bigram&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; token &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ngrams&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;to_lower &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        separate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;bigram&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;word1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;word2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; sep &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        count&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;word1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; word2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sort &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We use the &lt;code&gt;unnest_tokens&lt;/code&gt; command from the tidytext package. This command will take your cell with text and extract either sentences, words, ngrams or paragraphs. It also converts everything to lowercase and delete any punctuation. The resulting variable I now call &amp;ldquo;bigram&amp;rdquo;. Then I take that variable &amp;ldquo;bigram&amp;rdquo; and split it up into two variables calling them &amp;ldquo;word1&amp;rdquo; and &amp;ldquo;word2&amp;rdquo;. Finally I count how many times the combinations occur.&lt;/p&gt;

&lt;p&gt;For Picard, the bigrams would be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;bigrams_picard &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; speech_TNG &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;who &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;PICARD&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        unnest_tokens&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;bigram&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; token &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ngrams&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;to_lower &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        separate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;bigram&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;word1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;word2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; sep &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        count&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;word1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; word2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sort &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And his trigrams would be&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;trigrams_picard &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; speech_TNG &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;who &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;PICARD&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        unnest_tokens&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;trigram&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; token &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ngrams&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;to_lower &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        separate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;trigram&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;word1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;word2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;word3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; sep &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        count&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;word1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; word2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;word3&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sort &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;creating-a-markov-chain-sort-of&#34;&gt;Creating a markov chain (sort of)&lt;/h1&gt;

&lt;p&gt;My endproduct takes two words and tries to find a third word. Then it takes the final two words and tries to find another word untill the sentance has a length that I specify at the start.&lt;/p&gt;

&lt;p&gt;What I actually created is a trigram dataframe, and a function that searches that frame. The function takes two words and returns all the rows where the first word matches the first column and the second word matches the second column.&lt;/p&gt;

&lt;p&gt;Furthermore I made a sentence creator, a function where you supply the first two words and the length of the sentence. That function keeps using the last words in the sentence until the correct length is achieved. With the fallback method of using bigrams when the trigrams don&amp;rsquo;t work anymore it could still fail, but not so often.&lt;/p&gt;

&lt;h3 id=&#34;word-generator&#34;&gt;Word generator&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;return_third_word &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; woord1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
        woord &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; trigrams_picard &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;word1 &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; woord1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;word2 &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                sample_n&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                &lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;word3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
        woord
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However this function sometimes returns an empty row. So I baked in a backup for when it can&amp;rsquo;t find the word combination.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;return_third_word &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; woord1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
        woord &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; trigrams_picard &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;word1 &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; woord1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;word2 &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                sample_n&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                &lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;word3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
        &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;woord&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
                bleh &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;bigrams_picard&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;word1 &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
                        sample_n&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;kp&#34;&gt;warning&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;no word found, adding &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; bleh&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;to&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; woord1 &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                woord &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; bleh
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        woord
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;From trigrams_picard,&lt;/li&gt;
&lt;li&gt;return the rows where word 1 matches woord1, and word2 matches woord2.&lt;/li&gt;
&lt;li&gt;Of those rows * return a single random row, where the randomness is weighted by occurrence. * Return the single word.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also used a bit of &lt;a href=&#34;http://rmhogervorst.nl/cleancode/blog/2016/06/13/NSE_standard_evaluation_dplyr.html&#34; title=&#34;link to NSE article&#34;&gt;non-standard evalation (NSE)&lt;/a&gt; just for fun.&lt;/p&gt;

&lt;h3 id=&#34;sentence-generator&#34;&gt;Sentence generator&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;generate_sentence &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;word1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; word2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; sentencelength &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; debug &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;FALSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;#input validation&lt;/span&gt;
        &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;sentencelength &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I need more to work with&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        sentencelength &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; sentencelength &lt;span class=&#34;m&#34;&gt;-2&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# starting&lt;/span&gt;
        sentence &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;word1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; word2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        woord1 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; word1
        woord2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; word2
        &lt;span class=&#34;kr&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;kr&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;seq_len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;sentencelength&lt;span class=&#34;p&#34;&gt;)){&lt;/span&gt;
                &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;debug &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                word &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; return_third_word&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; woord1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; woord2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                sentence &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;sentence&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; word&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                woord1 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; woord2
                woord2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; word
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        output &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;paste&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;sentence&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; collapse &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        output
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Check that there are more then 2 lenght.&lt;/li&gt;
&lt;li&gt;Loop a certain times

&lt;ul&gt;
&lt;li&gt;in that loop use woord1 and woord 2 as input&lt;/li&gt;
&lt;li&gt;create a new word&lt;/li&gt;
&lt;li&gt;add that word to sentence&lt;/li&gt;
&lt;li&gt;change the values of woord1 and woord2&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;output the sentance with all the words in one line.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example this created for me: &lt;code&gt;generate_sentence(&amp;quot;I&amp;quot;, &amp;quot;am&amp;quot;, 9)&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;i am loathe to do with you because they&amp;quot;
&amp;quot;i am not the case however wesley is alive&amp;quot;
&amp;quot;i am aware of the tachyon pulse it might be able to determine how to&amp;quot;
# and with the enterprise and length 9
&amp;quot;the enterprise we use the cloak to escape do&amp;quot;
 &amp;quot;the enterprise we have had&amp;quot;
 &amp;quot;the enterprise for a thing&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;it&amp;rsquo;s incredibly slow and inefficient, but hey, it&amp;rsquo;s a toy project!&lt;/li&gt;
&lt;li&gt;Also it failed on me multiple times on 15 length&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Right it makes no sense whatsover. Thanks for following along!&lt;/p&gt;

&lt;p&gt;Do you have suggestions, improvements, found errors? open an issue or email me. &lt;a href=&#34;https://github.com/RMHogervorst/cleancode/issues/new/&#34;&gt;https://github.com/RMHogervorst/cleancode/issues/new/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Plotting a map with ggplot2, color by tile</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2017/01/06/content/post/2017-01-07-plotting-a-map-with-ggplot2/</link>
      <pubDate>Fri, 06 Jan 2017 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2017/01/06/content/post/2017-01-07-plotting-a-map-with-ggplot2/</guid>
      <description>

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Last week I was playing with creating maps using R and GGPLOT2. As I was learning I realized information about creating maps in ggplot is scattered over the internet. So here I combine all that knowledge. So if something is absolutely wrong/ ridiculous / stupid / slightly off or not clear, contact me or &lt;a href=&#34;https://github.com/RMHogervorst/cleancode/issues&#34;&gt;open an issue on the github page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When you search for plotting examples you will often encounter the packages &lt;code&gt;maps&lt;/code&gt; and &lt;code&gt;mapdata&lt;/code&gt;. However most of the examples are based on the USA, which is conveniently already contained in those packages.&lt;/p&gt;

&lt;p&gt;But since I wanted to plot The Netherlands, I was out of luck, I couldn&amp;rsquo;t find a map of The Netherlands in those packages. But.. you can build those maps yourself!&lt;/p&gt;

&lt;p&gt;This tutorial consists of :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;downloading the shapefile of your country&lt;/li&gt;
&lt;li&gt;getting the file in your R session&lt;/li&gt;
&lt;li&gt;basis plotting with ggplot&lt;/li&gt;
&lt;li&gt;combining the shapefile with other information&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The end result is a map of a country with municipals colored by number of people in there.&lt;/p&gt;

&lt;h2 id=&#34;downloading-the-file-to-your-computer&#34;&gt;Downloading the file to your computer&lt;/h2&gt;

&lt;p&gt;Steps: download shape files for your country from &lt;a href=&#34;http://www.gadm.org/country&#34;&gt;http://www.gadm.org/country&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NOTE THAT YOU CAN NOT USE THESE CHARTS FOR COMMERCIAL APPLICATIONS. &lt;em&gt;You can however use charts created by the Kadaster or Netherlands Statistics Institute (CBS)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Choose a country and choose a file format. I chose &lt;code&gt;R (SpatialPolygonsDataFrame)&lt;/code&gt;. In the next page you can choose the level of detail in the map.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/gadm_levels.PNG&#34; alt=&#34;image of the Netherlands with different borders&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The picture above you can see what I saw. This type of picture is available for every country.&lt;/p&gt;

&lt;p&gt;If you download the shapefile on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;level 0 : you will get the outline of the country (everything yellow)&lt;/li&gt;
&lt;li&gt;level 1 : Major borders, that is every province in the Netherlands (everything red)&lt;/li&gt;
&lt;li&gt;level 2 : Boundaries of counties, districts &lt;em&gt;Dutch: gemeenten&lt;/em&gt; (blue lines)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you download on level 2 you will also get the information of level 1 en level 0. The file is thus larger and has a ridiculous amount of detail.&lt;/p&gt;

&lt;p&gt;Download the file to your computer in the folder data [link to best practices]&lt;/p&gt;

&lt;h2 id=&#34;getting-the-file-into-r&#34;&gt;Getting the file into R&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;sp&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# you need this library to work with SpatialPolygons&lt;/span&gt;
NLD &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;readRDS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;shapefiles/NLD_adm2.rds&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point you can already use this file with base plot try: &lt;code&gt;plot(NLD)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;However we want to manipulate this file and use it in ggplot. The following part is about the structure of the file, to see what happens next, skip it and go to the next.&lt;/p&gt;

&lt;h3 id=&#34;about-the-structure-of-this-file&#34;&gt;about the structure of this file&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Note: you don&amp;rsquo;t need to know this, you can just skip ahead to the next heading.&lt;/strong&gt; The file that you imported is a SpatialPolygonsDataFrame, which is a special object. This is a s4 object &lt;em&gt;try google for the difference between s3 and s4 objects and more in R&lt;/em&gt;. Whats important is that an S4 object has &amp;lsquo;slots&amp;rsquo; that are accessible through the &lt;code&gt;@&lt;/code&gt; symbol. try typing in the name of the object followed by a &lt;code&gt;$&lt;/code&gt; and with the &lt;code&gt;@&lt;/code&gt; sign. The object contains a slot for &lt;em&gt;data&lt;/em&gt;, &lt;em&gt;polygons&lt;/em&gt;, &lt;em&gt;plotorder&lt;/em&gt;, &lt;em&gt;bbox&lt;/em&gt; and &lt;em&gt;proj4strings.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;*I had great help inspecting this &lt;a href=&#34;https://gis.stackexchange.com/questions/87789/spatialpointsdataframe-properties-and-operators-in-r&#34;&gt;stackoverflow question&lt;/a&gt;. The point of this S4 object is that you almost never have to manipulate the deeper structure of the file. there are functions that do those steps for you.&lt;/p&gt;

&lt;p&gt;But I thought it would be interesting to understand this structure&lt;/p&gt;

&lt;p&gt;First we look at &lt;strong&gt;data&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;tibble&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# better printing&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# obviously&lt;/span&gt;
NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; as_tibble&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 491 × 15
##    OBJECTID  ID_0   ISO      NAME_0  ID_1  NAME_1  ID_2         NAME_2
##       &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;          &amp;lt;chr&amp;gt;
## 1         1   158   NLD Netherlands     1 Drenthe     1    Aa en Hunze
## 2         2   158   NLD Netherlands     1 Drenthe     2          Assen
## 3         3   158   NLD Netherlands     1 Drenthe     3  Borger-Odoorn
## 4         4   158   NLD Netherlands     1 Drenthe     4      Coevorden
## 5         5   158   NLD Netherlands     1 Drenthe     5      De Wolden
## 6         6   158   NLD Netherlands     1 Drenthe     6          Emmen
## 7         7   158   NLD Netherlands     1 Drenthe     7      Hoogeveen
## 8         8   158   NLD Netherlands     1 Drenthe     8         Meppel
## 9         9   158   NLD Netherlands     1 Drenthe     9 Midden-Drenthe
## 10       10   158   NLD Netherlands     1 Drenthe    10    Noordenveld
## # ... with 481 more rows, and 7 more variables: HASC_2 &amp;lt;chr&amp;gt;, CCN_2 &amp;lt;int&amp;gt;,
## #   CCA_2 &amp;lt;chr&amp;gt;, TYPE_2 &amp;lt;chr&amp;gt;, ENGTYPE_2 &amp;lt;chr&amp;gt;, NL_NAME_2 &amp;lt;chr&amp;gt;,
## #   VARNAME_2 &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;tail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;##     OBJECTID ID_0 ISO      NAME_0 ID_1       NAME_1 ID_2      NAME_2
## 490      490  158 NLD Netherlands   14 Zuid-Holland  490 Zoeterwoude
## 491      491  158 NLD Netherlands   14 Zuid-Holland  491 Zwijndrecht
##       HASC_2 CCN_2 CCA_2   TYPE_2    ENGTYPE_2 NL_NAME_2 VARNAME_2
## 490 NL.ZH.ZD    NA       Gemeente Municipality                    
## 491 NL.ZH.ZW    NA       Gemeente Municipality
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The slot data contains 491 rows with 15 variables. This data is hierarchical with level 1 nested under level 0 and level 2 nested under level 1. So this data contains information about municipalies (Dutch: gemeenten) that are part of a province (Dutch: provincie), that are part of a country: Nederland. On every level there is an &lt;code&gt;ID&lt;/code&gt; and a &lt;code&gt;NAME&lt;/code&gt;. There is a ID_0 and a corresponding NAME_0, and a ID_1 with a NAME_1 and finally a ID_2 and NAME_2.&lt;/p&gt;

&lt;p&gt;The structure:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ID_x: level identification ID_0 = country, ID_1 = province, ID_2 = Municipality&lt;/li&gt;
&lt;li&gt;NAME_x: the name of the level region&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;f.i. :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;OBJECTID  ID_0   ISO      NAME_0  ID_1  NAME_1  ID_2         NAME_2   
8         8   158   NLD Netherlands     1 Drenthe     8         Meppel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Meppel is Municipality in the Province Drenthe in the country Netherlands.&lt;/p&gt;

&lt;p&gt;other variables: - OBJECTID: link to polygons (and rownumber) - ISO: I think the International Standards Organisation code of the country - HASC_2 some sort of coding Country.province,area - CCN_2 don&amp;rsquo;t know - CCA_2 don&amp;rsquo;t know - TYPE_2 name of type 2 Gemeente in my case - ENGTYPE_2 English name for TYPE_2 (Municipality) - NL_NAME_2 don&amp;rsquo;t know - VARNAME_2 I think variants of the Municipality name&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s look at the &lt;strong&gt;Polygons&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not entirely sure about the relation between &lt;em&gt;data&lt;/em&gt; and &lt;em&gt;polygons&lt;/em&gt; but there seems to be a link where OBJECTID from data corresponds to the group ID of the polygons.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;polygons &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] 491
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;polygons&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# read the tenth object &lt;/span&gt;
  slotNames&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# and give me the slotnames&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Polygons&amp;quot;  &amp;quot;plotOrder&amp;quot; &amp;quot;labpt&amp;quot;     &amp;quot;ID&amp;quot;        &amp;quot;area&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Every polygon object of the 491 polygons has&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Polygons [1] : which make up the area of this part of the chart.&lt;/li&gt;
&lt;li&gt;plotOrder: This has something to do with which shapes are presented first. However all the objects in here have plotOrder 1. So I really don&amp;rsquo;t know what this is.&lt;/li&gt;
&lt;li&gt;labpt: this is the centroid of the polygon. The middle point as it were.&lt;/li&gt;
&lt;li&gt;ID: identical to rownumber/OBJECTID in &lt;code&gt;@data&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;area: I think the square kilometer area inside the polygon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I believe that there can be more Polygons inside the Polygons of an area. So if we look inside of one polygon in a polygon..&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;polygons&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;Polygons&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; slotNames&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;labpt&amp;quot;   &amp;quot;area&amp;quot;    &amp;quot;hole&amp;quot;    &amp;quot;ringDir&amp;quot; &amp;quot;coords&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We see that every part has a middle point, area size a hole a ringdir and a matrix of coordinates.&lt;/p&gt;

&lt;p&gt;Lets move back out to the top and look at plotorder: which is 1 again&amp;hellip; and the other two slots: bbox and proj4string.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;bbox&lt;/strong&gt; is the bounding box. the ultimate limits of the area described by this dataframe.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;bbox&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;##         min       max
## x  3.360782  7.227095
## y 50.723492 53.554585
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;proj4string&lt;/strong&gt; is a notation that tells graphical systems what coordinate system is used. Because there are a lot of coordinates!
in this case &lt;code&gt;+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0&lt;/code&gt; So a longitude lattitude projection, with datum wgs84 which is a &lt;a href=&#34;https://en.wikipedia.org/wiki/World_Geodetic_System&#34;&gt;worldwide used coordinate system&lt;/a&gt;. And I think the last part is an ofset if necessary.&lt;/p&gt;

&lt;p&gt;So concluding: This dataframe consists of general describing data in &lt;code&gt;@data&lt;/code&gt; coordinates for every row, with some coordinate referencing to help translating the coordinates into other projections.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Read on from here&lt;/em&gt; ## Basic plotting of the map with ggplot Why don&amp;rsquo;t we just plot the map?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# can&amp;#39;t work without it&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NLD&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Regions defined for each Polygons
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-5-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We got a message: Regions defined for each Polygons, this is ggplot telling us that some work was done on the background to reshape the data for plotting use.&lt;/p&gt;

&lt;p&gt;Also, the map looks really, really ugly. What&amp;rsquo;s the deal? Because ggplot doesn&amp;rsquo;t know what kind of data this is, it stretches the points untill the plotting region is filled.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s try something where all the steps in the x direction are identical to the y direction. Let&amp;rsquo;s fix the coordinates.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NLD&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
               aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  coord_fixed&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Regions defined for each Polygons
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-6-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This looks better, but for people from the Netherlands, this still doesn&amp;rsquo;t look quite right. The country is stretched in a weird way and the center, filled with a &lt;a href=&#34;https://en.wikipedia.org/wiki/IJsselmeer&#34; title=&#34;this lake used to be a sea, but we didn&#39;t want a sea anymore&#34;&gt;big ass man made lake&lt;/a&gt; should not by plotted.&lt;/p&gt;

&lt;p&gt;First the stretching. There is a special coordinate thingy in ggplot called coord_map(). I like the standard projection, but if you liek you can try any of the projections in &lt;code&gt;?mapproj::mapproject&lt;/code&gt; . Go crazy!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; NLD&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Regions defined for each Polygons
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-7-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Lets first take out the lakes. This is where local knowledge comes to play. If we look at the level_1 names &lt;code&gt;NLD@data$NAME_1 %&amp;gt;% unique()&lt;/code&gt;, we see 14 different areas. However, there are only 12 provinces in the Netherlands. 2 of these areas are actually lakes: &amp;ldquo;IJsselmeer&amp;rdquo; and &amp;ldquo;Zeeuwse meren&amp;rdquo;. We can get those out by using subset.[2]. The command says: subset NLD where NLD$NAME_! is NOT the two lakes.&lt;/p&gt;

&lt;p&gt;I also want to lose the message. Use &lt;code&gt;fortify()&lt;/code&gt; to apply the polygons to region transformation.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;NLD_fixed &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;subset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;NLD&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;NAME_1  &lt;span class=&#34;o&#34;&gt;%in%&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Zeeuwse meren&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;IJsselmeer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
NLD_fixed &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; fortify&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD_fixed&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Regions defined for each Polygons
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#NLD_fixed &amp;lt;- broom::tidy(NLD) # this would also work and is recommended by Hadley Wickham in the future.&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD_fixed&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-8-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s add some color!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD_fixed&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# no backgroundcolor&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# color is the lines of the region&lt;/span&gt;
                fill &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;#9C9797&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# fill is the fill of every polygon.&lt;/span&gt;
  coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-9-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;combine-the-map-with-another-dataset-and-color-the-tiles&#34;&gt;Combine the map with another dataset and color the tiles&lt;/h2&gt;

&lt;p&gt;From the open data portal of the Netherlands I downloaded the number of people every municipally. Yeah open data!&lt;/p&gt;

&lt;p&gt;loading the data. skipping the file information, selecting only the columns with a municipal name and number and throwing away empty columns. &lt;em&gt;note that there will be some discrepancies, the map information is a bit older and the municipallies are from 2016, so some names might not match. If I really care I could do some matching. But I don&amp;rsquo;t.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;gemeenten2016sept &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; readr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;read_csv2&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data/Bevolking__leeftijd,_050117111254.csv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;skip &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gemeente &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`Regio&amp;#39;s`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; number &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; aantal&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;is.na&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;number&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   `Regio&#39;s` = col_character(),
##   Perioden = col_integer(),
##   Leeftijd = col_character(),
##   aantal = col_integer()
## )

## Warning: 1 parsing failure.
## row col  expected    actual
## 391  -- 4 columns 1 columns
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Combining the map information, names of municipalies and number of people in one file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;combine IDs inside the map information, with names and numbers.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;names_and_numbers &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data_frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;rownames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;data&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                                gemeente&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NLD&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;data&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;NAME_2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  left_join&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gemeenten2016sept&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; by &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;gemeente&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Combining the names and numbers with the map information.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;final_map &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; left_join&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;NLD_fixed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; names_and_numbers&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; by &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;final_map&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; long&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; group&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; fill&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; number&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;grey&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; alpha &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  coord_map&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
  scale_fill_distiller&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;name &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Number of people in gemeente&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# change titel legend&lt;/span&gt;
                       palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Spectral&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# change the color scheme&lt;/span&gt;
  theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# chagne the legend position&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/images/figures/unnamed-chunk-12-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;[1] I know! really confusing, polygons inside polygons!, crezy!&lt;/p&gt;

&lt;p&gt;[2] I haven&amp;rsquo;t found a tidy way to do this yet&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.milanor.net/blog/maps-in-r-introduction-drawing-the-map-of-europe/&#34;&gt;http://www.milanor.net/blog/maps-in-r-introduction-drawing-the-map-of-europe/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/9199727/themathic-map-choropleth-map-of-the-netherlands&#34;&gt;http://stackoverflow.com/questions/9199727/themathic-map-choropleth-map-of-the-netherlands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pdok.nl/nl/producten/pdok-downloads/basis-registratie-kadaster/bestuurlijke-grenzen-actueel&#34;&gt;https://www.pdok.nl/nl/producten/pdok-downloads/basis-registratie-kadaster/bestuurlijke-grenzen-actueel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eriqande.github.io/rep-res-web/lectures/making-maps-with-R.html&#34;&gt;http://eriqande.github.io/rep-res-web/lectures/making-maps-with-R.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;session-info&#34;&gt;Session info&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;devtools&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;session_info&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;## Session info --------------------------------------------------------------

##  setting  value                       
##  version  R version 3.3.2 (2016-10-31)
##  system   x86_64, mingw32             
##  ui       RTerm                       
##  language (EN)                        
##  collate  Dutch_Netherlands.1252      
##  tz       Europe/Berlin               
##  date     2017-01-07

## Packages ------------------------------------------------------------------

##  package      * version date       source        
##  assertthat     0.1     2013-12-06 CRAN (R 3.3.0)
##  backports      1.0.4   2016-10-24 CRAN (R 3.3.2)
##  colorspace     1.3-2   2016-12-14 CRAN (R 3.3.2)
##  DBI            0.5-1   2016-09-10 CRAN (R 3.3.1)
##  devtools       1.12.0  2016-06-24 CRAN (R 3.3.1)
##  digest         0.6.10  2016-08-02 CRAN (R 3.3.1)
##  dplyr        * 0.5.0   2016-06-24 CRAN (R 3.3.1)
##  evaluate       0.10    2016-10-11 CRAN (R 3.3.2)
##  ggplot2      * 2.2.1   2016-12-30 CRAN (R 3.3.2)
##  gtable         0.2.0   2016-02-26 CRAN (R 3.3.0)
##  htmltools      0.3.5   2016-03-21 CRAN (R 3.3.0)
##  knitr          1.15.1  2016-11-22 CRAN (R 3.3.2)
##  labeling       0.3     2014-08-23 CRAN (R 3.3.0)
##  lattice        0.20-34 2016-09-06 CRAN (R 3.3.2)
##  lazyeval       0.2.0   2016-06-12 CRAN (R 3.3.0)
##  magrittr       1.5     2014-11-22 CRAN (R 3.3.0)
##  mapproj        1.2-4   2015-08-03 CRAN (R 3.3.2)
##  maps           3.1.1   2016-07-27 CRAN (R 3.3.2)
##  memoise        1.0.0   2016-01-29 CRAN (R 3.3.0)
##  munsell        0.4.3   2016-02-13 CRAN (R 3.3.0)
##  plyr           1.8.4   2016-06-08 CRAN (R 3.3.0)
##  R6             2.2.0   2016-10-05 CRAN (R 3.3.1)
##  RColorBrewer   1.1-2   2014-12-07 CRAN (R 3.3.0)
##  Rcpp           0.12.8  2016-11-17 CRAN (R 3.3.2)
##  readr          1.0.0   2016-08-03 CRAN (R 3.3.1)
##  rmarkdown      1.3     2016-12-21 CRAN (R 3.3.2)
##  rprojroot      1.1     2016-10-29 CRAN (R 3.3.2)
##  scales         0.4.1   2016-11-09 CRAN (R 3.3.2)
##  sp           * 1.2-4   2016-12-22 CRAN (R 3.3.2)
##  stringi        1.1.2   2016-10-01 CRAN (R 3.3.1)
##  stringr        1.1.0   2016-08-19 CRAN (R 3.3.1)
##  tibble       * 1.2     2016-08-26 CRAN (R 3.3.1)
##  withr          1.0.2   2016-06-20 CRAN (R 3.3.1)
##  yaml           2.1.14  2016-11-12 CRAN (R 3.3.2)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Submitting your first package to CRAN, my experience</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/07/09/content/post/2016-07-09-submtting-to-cran-first-experience/</link>
      <pubDate>Sat, 09 Jul 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/07/09/content/post/2016-07-09-submtting-to-cran-first-experience/</guid>
      <description>

&lt;p&gt;I recently published my first R package to  The Comprehensive R Archive Network  (CRAN). It was very exciting and also quite easy. Let me walk you through my process.&lt;/p&gt;

&lt;p&gt;First a description of my brand new package: badgecreatr, then a description of steps to take for submission.&lt;/p&gt;

&lt;h1 id=&#34;package-description&#34;&gt;Package description&lt;/h1&gt;

&lt;p&gt;When you go around github looking at projects you often see these interesting images in the readme
&lt;a href=&#34;https://travis-ci.org/hadley/ggplot2&#34;&gt;&lt;img src=&#34;https://travis-ci.org/hadley/ggplot2.svg?branch=master&#34; alt=&#34;Build Status&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;http://cran.r-project.org/package=ggplot2&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/ggplot2&#34; alt=&#34;CRAN_Status_Badge&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The ones you see above are from &lt;a href=&#34;https://github.com/hadley/ggplot2&#34;&gt;ggplot2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What are these? These are what we call badges or shields and they are often actively generated to indicate if software is actually working or not.&lt;/p&gt;

&lt;p&gt;Travis-ci, a continous integration service, creates the first one: the one that says build | passing. Everytime a new commit is pushed to Github a new version of the package will be build and tested. Of that test passes without problem the badge will remain green, but if the latest build fails, the green part will turn red like so &lt;a href=&#34;https://travis-ci.org/RMHogervorst/badgecreatr&#34;&gt;&lt;img src=&#34;https://travis-ci.org/RMHogervorst/badgecreatr.svg?branch=develop&#34; alt=&#34;Build Status&#34; /&gt;&lt;/a&gt; &amp;lt;- this is my develop branch of badgecreatr that fails while I write this. It could turn green if your read this later on.&lt;/p&gt;

&lt;p&gt;The point of these badges is that they quickly signal some quality aspects of your package to new users. I think these badges are incredibly useful, but I found it tedious to copy them to every new project I had, with some small tweaks for different packages &lt;em&gt;(I&amp;rsquo;m making this a big deal but I have only build 3 packages)&lt;/em&gt;. Since you will use almost the same badges for many projects  I thought it would be interesting to create a package that would copy them in your readme file with one command.
I was not the first one with this idea, someone created the briljant badgerbadgerbadger which does the same thing for ruby on rails projects.&lt;/p&gt;

&lt;p&gt;After some thoughts I decided to submit it to CRAN so that people can download it from within R without the use of devtools. So that was the why.&lt;/p&gt;

&lt;h1 id=&#34;why-would-you-submit-a-package-to-cran&#34;&gt;Why would you submit a package to CRAN?&lt;/h1&gt;

&lt;p&gt;The main advantage to getting your package on CRAN is that it will be easier for users to install (with install.packages). Your package will also be tested daily on multiple systems &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h1 id=&#34;how-do-you-submit-a-package-to-cran&#34;&gt;How do you submit a package to CRAN?&lt;/h1&gt;

&lt;p&gt;Well, the good people of CRAN have put it on the bottom of their &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;main page&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To “submit” a package to CRAN, check that your submission meets the CRAN Repository Policy and then use the web form.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Mainly you need to run r cmd-check on your package and make sure there are no warnings, and no notes. Or if there are notes, you have to explain them to the people of CRAN. So what does r-cmd-check actually do? It checks if your package can be build and installed and removed without problems, it checks for common problems in naming and if accurate documentation is provided. In other words, it checks if your package will play nice with R and possible other packages, and if people can actually read what you said about your functions in the package. r-cmd-check also checks if your DESCRIPTION and NAMESPACE files are correctly formatted.&lt;/p&gt;

&lt;p&gt;You also have to do some effort to check if your package will work on other systems (solaris,  FreeBSD, Linux, Windows, MacOS, more?). Since I work on a windows computer, I know it works on my computer. But since I push all my code to Github, and I use Travis-CI, after each commit the entire package is checked on linux (or more, I could even put several mac OS versions in the test I believe).&lt;/p&gt;

&lt;p&gt;Furthermore I checked the functionality of most of the code with unit tests. So I was pretty sure it worked on all systems, also because I haven&amp;rsquo;t used complicated programs that could differ in systems.&lt;/p&gt;

&lt;p&gt;The submission process is quite easy, you have to give your name, your email and then you can add your package (the tarball). It is a simple point and click form.&lt;/p&gt;

&lt;p&gt;The website reads a part of your package, you have to check if the information is correct. Then you have to promise that you read the information and you hit submit.&lt;/p&gt;

&lt;h1 id=&#34;what-happens-after-i-submit-a-package&#34;&gt;What happens after I submit a package?&lt;/h1&gt;

&lt;p&gt;You receive a confirmation mail with everything you typed in the website.
And someone looks over the submission to see if you missed something and if the package works.&lt;/p&gt;

&lt;p&gt;I recieved an e-mail back (really fast!), to tell me that I mistyped some things (too bad that devtools or R-cmd-check doesn&amp;rsquo;t check for these things).
I was very excited and quickly did a resubmission (which is identical to a first submission, but I explained what I changed according to their comments )&lt;/p&gt;

&lt;p&gt;Things that I should have done that I forgot or didn&amp;rsquo;t notice:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;single quote software names so &amp;lsquo;Windows 8.1&amp;rsquo;&lt;/li&gt;
&lt;li&gt;write R and CRAN with caps, not small letters&lt;/li&gt;
&lt;li&gt;I wrote github, projectstatus, travis, rmd etc which should have been:&lt;/li&gt;
&lt;li&gt;&amp;lsquo;Github&amp;rsquo;, Projectstatus, &amp;lsquo;Travis-CI&amp;rsquo; etc.&lt;/li&gt;
&lt;li&gt;linked to a URL that didn&amp;rsquo;t exist yet&lt;/li&gt;
&lt;li&gt;used a link with http, should have been https&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That was it, it took me 2 rounds but then it was finished, I received an email with: &amp;ldquo;on CRAN now.  Best (name of the reviewer)&amp;rdquo;. that&amp;rsquo;s it.&lt;/p&gt;

&lt;p&gt;And it&amp;rsquo;s on CRAN now: &lt;a href=&#34;https://cran.r-project.org/web/packages/badgecreatr/index.html&#34;&gt;https://cran.r-project.org/web/packages/badgecreatr/index.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;general-remarks&#34;&gt;General remarks&lt;/h2&gt;

&lt;p&gt;CRAN submission used to be really hard, you had to manually write all the documentation in a seperate file, had to hand check everything, you had to search for computers to test your package on, etc. But with devtools and the excellent manuals online, starting and building a package is really easy. The final step of submission takes almost no work if you followed best practices beforehand.&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References:&lt;/h2&gt;

&lt;p&gt;I had a lot of help from the following sources about writing r packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a very short but extremely useful example of writing packages by Hillary Parker &lt;a href=&#34;https://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/&#34;&gt;https://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hadley Wickham&amp;rsquo;s book about writing packages &lt;a href=&#34;http://r-pkgs.had.co.nz/&#34;&gt;http://r-pkgs.had.co.nz/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Karl Broman about writing packages &lt;a href=&#34;http://kbroman.org/pkg_primer/&#34;&gt;http://kbroman.org/pkg_primer/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You actually have to search for things in the policies, which is a bit dense, but quite ok. &lt;a href=&#34;https://cran.r-project.org/web/packages/policies.html&#34;&gt;https://cran.r-project.org/web/packages/policies.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the ropensci organisation has some excellent advise on writing packages &lt;a href=&#34;https://github.com/ropensci/packaging_guide&#34;&gt;https://github.com/ropensci/packaging_guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;This I outright copied from Karl Broman found here &lt;a href=&#34;http://kbroman.org/pkg_primer/pages/cran.html&#34;&gt;http://kbroman.org/pkg_primer/pages/cran.html&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introducing Badgecreatr, a package that places badges in your readme</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/07/08/content/post/2016-07-08-introducing-badgecreatr-create-and-place-badges-in-readme-rmd/</link>
      <pubDate>Fri, 08 Jul 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/07/08/content/post/2016-07-08-introducing-badgecreatr-create-and-place-badges-in-readme-rmd/</guid>
      <description>

&lt;p&gt;Introducing &lt;strong&gt;Badgecreatr&lt;/strong&gt;, a package to create and place badges in your readme.Rmd file on Github.&lt;/p&gt;

&lt;p&gt;Badgecreatr will create the following badges (aka shields):&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.repostatus.org/#active&#34;&gt;&lt;img src=&#34;http://www.repostatus.org/badges/latest/active.svg&#34; alt=&#34;Project Status: Active ? The project has reached a stable, usable state and is being actively developed.&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/licence-GPL--3-blue.svg&#34; alt=&#34;Licence&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/RMHogervorst/badgecreatr&#34;&gt;&lt;img src=&#34;https://travis-ci.org/RMHogervorst/badgecreatr.svg?branch=master&#34; alt=&#34;Build Status&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/RMHogervorst/badgecreatr&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/RMHogervorst/badgecreatr/branch/master/graph/badge.svg&#34; alt=&#34;codecov&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://cran.r-project.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/R%3E%3D-3.2.4-6666ff.svg&#34; alt=&#34;minimal R version&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=badgecreatr&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/badgecreatr&#34; alt=&#34;CRAN\_Status\_Badge&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Package%20version-0.1.0-orange.svg?style=flat-square&#34; alt=&#34;packageversion&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;http://rmhogervorst.nl/cleancode/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/last%20change-2016--07--08-yellowgreen.svg&#34; alt=&#34;Last-changedate&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;p&gt;Install the package with &lt;code&gt;install.packages(&amp;quot;badgecreatr&amp;quot;)&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;how-do-you-use-badgecreatr&#34;&gt;How do you use badgecreatr?&lt;/h3&gt;

&lt;p&gt;Badgecreatr has one main function: &lt;code&gt;badgeplacer()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The most simple command is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;badgecreatr&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;badgeplacer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; githubaccount &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;yourgithubname&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;githubrepo &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;yourpackagename&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; branch &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your project is in its infancy and you don&amp;rsquo;t want people to use it yet:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;badgecreatr::badgeplacer(status = &amp;quot;wip&amp;quot; , githubaccount = &amp;quot;yourgithubname&amp;quot;,githubrepo = &amp;quot;yourpackagename&amp;quot;)&lt;/code&gt; which will give it the status &amp;lsquo;Work in Progress&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;Repostatus gives you seven &lt;a href=&#34;www.repostatus.org&#34;&gt;project statuses&lt;/a&gt;; Concept, WIP, Suspended, Abandoned, Active, Inactive, and Unsupported.&lt;/p&gt;

&lt;h3 id=&#34;why-would-you-use-this-package&#34;&gt;Why would you use this package?&lt;/h3&gt;

&lt;p&gt;When you have started yet another Github based r-package, copied the travis file and created a readme.Rmd file and you want to add these badges.
Frankly I was a bit annoyed to copy almost identical markdown to new projects, it seemed right for automation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why would I not use this package?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you don&amp;rsquo;t create a r-package&lt;/li&gt;
&lt;li&gt;you don&amp;rsquo;t want to create badges&lt;/li&gt;
&lt;li&gt;you don&amp;rsquo;t use Github&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;what-does-badgecreatr-do&#34;&gt;What does badgecreatr do?&lt;/h2&gt;

&lt;p&gt;Badgecreatr reads your &lt;code&gt;readme.Rmd&lt;/code&gt; file, reads your &lt;code&gt;DESCRIPTION&lt;/code&gt; file and searches for a &lt;code&gt;.travis.yml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Within the &lt;code&gt;DESCRIPTION&lt;/code&gt; file badgecreatr will find:
- package name
- the version number of your package
- the license : GPL-3, GPL-2, MIT, or CC0
- Minimal R version&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Badgecreatr will create&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;www.repostatus.org&#34;&gt;repostatus&lt;/a&gt; badge (by default it will give you an active status)&lt;/li&gt;
&lt;li&gt;a licence badge&lt;/li&gt;
&lt;li&gt;&lt;em&gt;If it finds a .travis.yml file&lt;/em&gt;:a Travis-CI Build-Status Badge&lt;/li&gt;
&lt;li&gt;&lt;em&gt;If it finds a codecov reference in the .travis.yml file,&lt;/em&gt; a Codecov Coverage Status Badge&lt;/li&gt;
&lt;li&gt;a badge to indicate the version of R you are using&lt;/li&gt;
&lt;li&gt;a CRAN status badge (will say &amp;lsquo;not published&amp;rsquo; if your package is not on CRAN)&lt;/li&gt;
&lt;li&gt;a package version badge&lt;/li&gt;
&lt;li&gt;a last change badge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you created badges in your readme before, badgecreatr will skip that badge.&lt;/p&gt;

&lt;p&gt;Enjoy. - Roel&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The badges for R version, package version and last change are my invention.&lt;/li&gt;
&lt;li&gt;The last change badge will update every time you re-knit your readme.md file&lt;/li&gt;
&lt;li&gt;If you have suggestions or improvement open an &lt;a href=&#34;https://github.com/RMHogervorst/badgecreatr/issues&#34;&gt;issue&lt;/a&gt; or submit a &lt;a href=&#34;https://github.com/RMHogervorst/badgecreatr/compare&#34;&gt;pull request&lt;/a&gt;.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;further-reading&#34;&gt;Further reading&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The package on CRAN: &lt;a href=&#34;https://cran.r-project.org/web/packages/badgecreatr/index.html&#34;&gt;https://cran.r-project.org/web/packages/badgecreatr/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The package on Github : &lt;a href=&#34;https://github.com/RMHogervorst/badgecreatr&#34;&gt;https://github.com/RMHogervorst/badgecreatr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;My inspiration: &lt;a href=&#34;https://github.com/badges/badgerbadgerbadger&#34;&gt;https://github.com/badges/badgerbadgerbadger&lt;/a&gt; &amp;amp; &lt;a href=&#34;http://shields.io/&#34;&gt;http://shields.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Non-standard-evaluation and standard evaluation in dplyr</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/06/13/content/post/2016-06-13-nse_standard_evaluation_dplyr/</link>
      <pubDate>Mon, 13 Jun 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/06/13/content/post/2016-06-13-nse_standard_evaluation_dplyr/</guid>
      <description>

&lt;p&gt;THIS POST IS NO LONGER ENTIRELY RELEVANT. DPLYR 0.7 HAS A SLIGHTLY DIFFERENT (AND SLIGHTLY MORE INTUITIVE) WAY OF WORKING WITH NON-STANDARD EVALUATION.&lt;/p&gt;

&lt;p&gt;I love the dplyr package with all of its functions, however if you use normal dplyr in functions in your package r-cmd-check will give you a warning: &lt;code&gt;R CMD check NOTE: No visible binding for global variable NAME OF YOUR VARIABLE&lt;/code&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. The functions do work, and everything is normal, however if you submit your package to CRAN, such a NOTE is not acceptable. A workaround is to add globalVariables to one of your scripts. for instance:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;globalVariables&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;var1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;var2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;varyourmother&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
				&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which works but it is not necessary.&lt;/p&gt;

&lt;h2 id=&#34;nse&#34;&gt;NSE&lt;/h2&gt;

&lt;p&gt;dplyr (and some other packages and functions) work with non-standard-evaluation (NSE). One example is &lt;code&gt;library(magrittr)&lt;/code&gt; vs &lt;code&gt;library(&amp;quot;magrittr&amp;quot;)&lt;/code&gt; , both work. But
&lt;code&gt;install.packages(magrittr)&lt;/code&gt; vs &lt;code&gt;install.packages(&amp;quot;magrittr&amp;quot;)&lt;/code&gt; is different, you need the quotes. In almost all the functions in r when you name a part of an object you need the quotes but in some functions you don’t. They are designed to work in a non-standard way. Some even miss a standard way.&lt;/p&gt;

&lt;p&gt;I will focus on the dplyr functions only, a general introduction to NON standard evaluation might come later.&lt;/p&gt;

&lt;p&gt;Under the hood the dplyr functions work just as other functions, in fact
all the functions use normal evaluation (standard evaluation), but for interactive use there is a non standard evaluation version, which saves you typing. The interactive version is then first evaluated with the lazyeval package and is then sent to the SE version.
There is even a naming scheme &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;:
&amp;gt; Every function that uses NSE should have a standard evaluation (SE) escape hatch that does the actual computation. The SE-function name should end with _.&lt;/p&gt;

&lt;p&gt;Therefore there are multiple verbs: select(), select&lt;em&gt;(), mutate(), mutate&lt;/em&gt;(), etc. Under the hood &lt;code&gt;select()&lt;/code&gt; is evaluated with the lazyeval package and sent to &lt;code&gt;select_()&lt;/code&gt;.
In functions you should use the SE versions, not only to stop notes from creating, but also because it gives you extra options.&lt;/p&gt;

&lt;h1 id=&#34;from-nse-the-standard-interactive-use-to-se-standard-evalation-within-functions&#34;&gt;From NSE (the standard interactive use) to SE (standard evalation within functions&lt;/h1&gt;

&lt;p&gt;So this is a list of things i regularly do with NSE and their translation in SE.&lt;/p&gt;

&lt;p&gt;I will use the data file about students in higher education in the Netherlands.&lt;/p&gt;

&lt;h3 id=&#34;background&#34;&gt;background&lt;/h3&gt;

&lt;p&gt;There are basicaly three ways to quote variables that dplyr/ lazyeval understands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;with a formula &lt;code&gt;~mean(mpg)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;with quote()   &lt;code&gt;quote(mean(mpg))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;as a string  &lt;code&gt;&amp;quot;mean(mpg)&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;select&#34;&gt;Select()&lt;/h2&gt;

&lt;p&gt;Example of the select function from dplyr.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;c1&#34;&gt;# first the normal NSE version&lt;/span&gt;
select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# standard evaluation &lt;/span&gt;
select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# comma doesn&amp;#39;t work, + doesn&amp;#39;t work&lt;/span&gt;
select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;quote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# nope&lt;/span&gt;
select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;quote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;quote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# yes!&lt;/span&gt;
select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;OPLEIDINGSNAAM.ACTUEEL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;FREQUENCY&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;YEAR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;OPLEIDINGSFASE.ACTUEEL&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# works&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Source: local data frame [24,150 x 2]

   OPLEIDINGSNAAM.ACTUEEL FREQUENCY
                    (chr)     (int)
1     B Aarde en Economie       121
2     B Aarde en Economie        54
3     B Aarde en Economie       140
4     B Aarde en Economie        52
5     B Aarde en Economie       132
6     B Aarde en Economie        55
7     B Aarde en Economie       144
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;filter&#34;&gt;Filter()&lt;/h2&gt;

&lt;p&gt;Then the filter function ( I also use the select function here)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ways that work. &lt;/span&gt;
filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;quote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;YEAR ==2015&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# or with a list to dots.&lt;/span&gt;
dotsfilter &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
filter_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;YEAR ==2015&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; dotsfilter&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Source: local data frame [4,830 x 2]

         OPLEIDINGSNAAM.ACTUEEL FREQUENCY
                          (chr)     (int)
1           B Aarde en Economie       151
2           B Aarde en Economie        60
3           B Aardwetenschappen         0
4           B Aardwetenschappen       149
5           B Aardwetenschappen       335
6           B Aardwetenschappen         0
7           B Aardwetenschappen        83
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;group-by-summarize&#34;&gt;Group_by() &amp;amp; Summarize()&lt;/h2&gt;

&lt;p&gt;Group_by and summarize examples, see also the NSE vignette on dplyr &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;total &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# group by in SE, and summarize with NSE&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;total &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# both NSE, pass list of arguments to .dots&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;total &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# does not work&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# does work. &lt;/span&gt;
dots &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; dots&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; setNames&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dots&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;sum(FREQUENCY)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
group_by_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Source: local data frame [2 x 2]

  GENDER sum(FREQUENCY)
   (chr)          (int)
1    MAN         609755
2  VROUW         639609
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mutate-and-slightly-more-advanced-use&#34;&gt;Mutate() and slightly more advanced use&lt;/h2&gt;

&lt;p&gt;You want to add two columns up, but you don&amp;rsquo;t yet know which columns that will be (example from Paul Hiemstra&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# normal interactive use  &lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
mtcars &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;new_column &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; wt&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So you would like a function that does something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;f &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; col2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; new_col_name&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    mtcars &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;new_col_name &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; col1 &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; col2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem is that r will search for col1 and col2, which don&amp;rsquo;t exist.
Furthermore the name of the endresult will be new_col_name, and not the content of new_col_name. To get around non-standard evaluation, you can use the lazyeval package. The following function does what we expect:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;f &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; col2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; new_col_name&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    mutate_call &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; lazyeval&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;interp&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; a &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; b&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; a &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;col1&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; b &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;col2&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    mtcars &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; setNames&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mutate_call&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; new_col_name&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You first create a call that will be evaluated by mutate_ . the call is first interpreted so that the final and correct names are used by mutate_&lt;/p&gt;

&lt;p&gt;Of course if you already knew wich varibles you would use, there is no need for interpretation, and something like this would work:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;mtcars &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; setNames&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;mpg&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;wt&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;sum mpg wt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
mtcars &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate_&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.&lt;/span&gt;dots &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;mpg&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;wt&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# if you don&amp;#39;t need the name specified&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;nse-in-context&#34;&gt;NSE in context&lt;/h1&gt;

&lt;p&gt;So if you want to use the dplyr functions in your own functions these are some variants that you could use. See the list of References and Notes for more information.&lt;/p&gt;

&lt;h1 id=&#34;references&#34;&gt;References:&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/26724124/standard-evaluation-in-dplyr-summarise-on-variable-given-as-a-character-string&#34;&gt;question on stack overflow&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.r-bloggers.com/using-mutate-from-dplyr-inside-a-function-getting-around-non-standard-evaluation/&#34;&gt;using mutate inside a function, shows excellent use of mutate function,  r-bloggers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.carlboettiger.info/2015/02/06/fun-standardizing-non-standard-evaluation.html&#34;&gt;fun standardizing NSE (he has a particular kind of fun&amp;hellip;)&lt;/a&gt;
&lt;a href=&#34;http://adv-r.had.co.nz/Computing-on-the-language.html&#34;&gt;advanced r chapter about NSE - hadley wickham&lt;/a&gt;
&lt;a href=&#34;http://developer.r-project.org/nonstandard-eval.pdf&#34;&gt;on r, I have not read this one &lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;notes&#34;&gt;NOTES&lt;/h1&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;an issue that demonstrates the r cmd check NOTE. &lt;a href=&#34;https://github.com/Rdatatable/data.table/issues/850&#34;&gt;https://github.com/Rdatatable/data.table/issues/850&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;wow the package is updated yesterday, but this describes the naming &lt;a href=&#34;https://cran.r-project.org/web/packages/lazyeval/vignettes/lazyeval-old.html&#34;&gt;https://cran.r-project.org/web/packages/lazyeval/vignettes/lazyeval-old.html&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;NSE in dplyr &lt;a href=&#34;https://cran.r-project.org/web/packages/dplyr/vignettes/nse.html&#34;&gt;https://cran.r-project.org/web/packages/dplyr/vignettes/nse.html&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;This example comes from Paul Hiemstra on his numbertheory blog that I found via r-bloggers. &lt;a href=&#34;http://www.numbertheory.nl/2015/09/23/using-mutate-from-dplyr-inside-a-function-getting-around-non-standard-evaluation/&#34;&gt;http://www.numbertheory.nl/2015/09/23/using-mutate-from-dplyr-inside-a-function-getting-around-non-standard-evaluation/&lt;/a&gt; With the reference to the r-bloggers version in the links above.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Your most valuable collaborator, future-you</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/05/26/content/post/2016-05-26-your-most-valuable-collaborator-future-you/</link>
      <pubDate>Thu, 26 May 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/05/26/content/post/2016-05-26-your-most-valuable-collaborator-future-you/</guid>
      <description>

&lt;p&gt;I was recently at a R users &lt;a href=&#34;http://www.meetup.com/amst-R-dam/&#34; title=&#34;amst-R-dam&#34;&gt;meetup&lt;/a&gt; where Hadley Wickham talked about data wrangling. He showed some interesting stuff! Did you know that you can put a data frame into a data frame? You can make a list of data frames and add that list to your data frame. Very cool,  and more useful then I thought, but that is not what I wanted to talk about.&lt;/p&gt;

&lt;p&gt;I would like to give you some tips about working with someone you will probably work with in the future. Hadley will introduce that person to you:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“In every project you have at least one other collaborator; future-you. You don&amp;rsquo;t want future-you to curse past-you”&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And future-you is an important collaborator. I have worked with R for a almost two years &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; and when I look back I actually see some progress in what I do with R. Most of the things I did in the past were poorly documented. I recently wanted to update my imdb search package but I decided not to touch it, because I don&amp;rsquo;t know what will break if I change some things. I have less worries for more recent packages, because I have tests for almost all the functions and I could just run the tests after every change to see if the functionality is still there.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;[update: I tried to find older creations in my github, but I was actually pretty impressed by how well documented it all was! So my example is not so good, or I just didn&amp;rsquo;t upload bad examples&amp;hellip;]&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What I did find was that hurry jobs take up the most time in the end. If I just coded something up fast and  then revisit that after a week it might still work and I might still know what I meant to do. But if the time delay gets longer future-you will need to spend more time figuring out what past-you was trying to achieve.&lt;/p&gt;

&lt;p&gt;So even if you are in a hurry now, you will  not remember the reasons for certain decisions in the future. Especially if your project gets bigger, you tend to forget things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The key thing is to be as explicit and clear as possible towards future-you&lt;/strong&gt;. So how do we help future-you (or other collaborators) understand past-you?&lt;/p&gt;

&lt;p&gt;Here are some suggestions based on lots of quotes and tidbits.&lt;/p&gt;

&lt;h2 id=&#34;readme-driven-development&#34;&gt;Readme driven development&lt;/h2&gt;

&lt;p&gt;Almost all of the github projects have a nicely formated readme. This is a very simple markdown document that describes the overal intent of the project and how to use and install it. The readme is a nice documentation of the software. So how do you make sure that the readme accurately describes the software?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You write the readme first.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tom Preson-Werner wrote a nice &lt;a href=&#34;http://tom.preston-werner.com/2010/08/23/readme-driven-development.html&#34; title=&#34; readme driven development 2010-08-23&#34;&gt;article&lt;/a&gt; about this. If you write the readme first then you can think through the project first and you already know what the end user (probably mostly future-you) will need. And you don&amp;rsquo;t need to write the documentation afterwards.  I have actually tried this in a few projects (f.i. &lt;a href=&#34;https://github.com/RMHogervorst/badgecreatr&#34;&gt;badgecreator&lt;/a&gt;), it helped me to think about the functions and the logical steps. And if you describe the next steps, other people can jump in more easily.&lt;/p&gt;

&lt;h2 id=&#34;write-the-test-first&#34;&gt;Write the test first&lt;/h2&gt;

&lt;p&gt;A way to understand past-you&amp;rsquo;s incoherent ramblings in the future (see what I did there?), is to write the tests before you write the part of the code that passes the test. I am talking about unit-tests, tests that check if your code is still working as you planned it out.&lt;/p&gt;

&lt;p&gt;So how would writing the tests first, help future-you and current(?)-you understand each other? If written correctly the unittest is a promise, an understanding if you like, about how pieces of code should function. For instance in one of my projects the unit-test expects an error under certain conditions. Thus the code is supposed to give an error when those conditions arise.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;test_that&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;rowsums larger or smaller than 1 are failing&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,{&lt;/span&gt;
        expect_error&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;CreateVertices&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;errorset&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;var1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;var2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;vartoomuch&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; verticeName &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;regexp &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;column means are not equal to 1&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        expect_error&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;CreateVertices&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;errorset&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;var1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;var2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;vartoolittle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; verticeName &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;regexp &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;column means are not equal to 1&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I really like the elegance of the testthat package, it &lt;strong&gt;literaly&lt;/strong&gt; says what it tests: &amp;ldquo; &lt;em&gt;test that&lt;/em&gt; rowsoms larger or smaller than 1 are failing&amp;rdquo;. And if the test fails it will tell you exactly &lt;strong&gt;where&lt;/strong&gt; it failed and &lt;strong&gt;what&lt;/strong&gt; it was trying to test (according to you).&lt;/p&gt;

&lt;p&gt;So how would you implement this? &lt;em&gt;I will make a seperate blogpost about this later, but for now look at r-pkg &lt;a href=&#34;http://r-pkgs.had.co.nz/tests.html&#34;&gt;chapter&lt;/a&gt; about testing&lt;/em&gt; Start with the thing you would like to create, for instance: Count all the people that are called Roel. That is nice small function. Give it a name: &lt;code&gt;roel_counter&lt;/code&gt;, for example.&lt;/p&gt;

&lt;p&gt;Create a seperate testscript &lt;code&gt;test_roel_counter.r&lt;/code&gt;. With the testthat framework you would put that file in &lt;code&gt;tests/testthat/&lt;/code&gt; so that it and all the other unit tests will be executed if you hit the shortkey.&lt;/p&gt;

&lt;p&gt;I usually write tests like this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;context&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;roel_counter&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
teststring &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Roel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Roel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Hans&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
confusestring &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Roel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;roel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;rOel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;roef&amp;#34;&lt;/span&gt;
         
test_that&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;roel_counter finds accurate number of roel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,{&lt;/span&gt;
   expect_equal&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;roel_counter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; teststring&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
   expect_false&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;roel_counter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; teststring&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
   expect_equal&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;roel_counter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; confusestring&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
   expect_false&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;roel_counter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; confusestring&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first test will check if Roel counter finds 2 Roels and the second test will check if the string will not just return the total length of the string.&lt;/p&gt;

&lt;p&gt;I could add all sorts of variations of my name to the test to see if the function works. In fact most of the things you would try out in the console to see if the function works could be put into the testfile. But in test driven development you would first create the tests and then write the function. After you have written a part of the code that works you will test and see what passes and what fails. Then you add things to the code to pass more tests. Afte all the tests have passed, you write a new test for a new part of the code.&lt;/p&gt;

&lt;p&gt;If current-you is interupted and future-you finds itself back at the code, future-you can just press the hotkey for the tests and find out which are failing and continue on that part. So in a way, future-you can explicitly find out what past-you was trying to achieve.&lt;/p&gt;

&lt;h2 id=&#34;use-version-control&#34;&gt;use version control&lt;/h2&gt;

&lt;p&gt;Version control can help you stay sane. It saves your work if you try something new, it helps you to start again at any previously committed point in history and apart from the merge errors it works generally very well.&lt;/p&gt;

&lt;p&gt;Version control lets you record snapshots of previous code, but also lets you comment on what you solved or changed. When you save a new version of the code to version control you will have to be a bit explicit. Otherwise you will find yourself in this situation:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/wrong_commit.PNG&#34; alt=&#34;an example of a less helpful commit message&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Version control, if you use meaningful descriptions, can help you find out where you did some actions and what you were trying to do. Describe intent in the commit messages. A quote I really like is:&lt;br /&gt;
&amp;gt; &amp;ldquo;You mostly collaborate with yourself, and me-from-two-months-ago never responds to email.&amp;rdquo;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;My commits have become somewhat better:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/example_better_commit.PNG&#34; alt=&#34;somewhat better commit messages&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You could even use a github-issue-based-workflow where you write down the problems you want to solve in seperate issues and after you solved a particular issue, you push the code to github referencing the issue number.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&#34;functional-programming&#34;&gt;Functional programming&lt;/h2&gt;

&lt;p&gt;Hadley is really big on functional programming. That is, making clear what you want to achieve, and abstract away what happens in the computer itself.&lt;/p&gt;

&lt;p&gt;One example of this is the pipe operator. The pipe operator is in use in many programming languages (big thing in UNIX) but is not part of base r. Untill it was introduced in the magritr package&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5&#34;&gt;5&lt;/a&gt;&lt;/sup&gt; by Stefan Milton Bache. The pipe does nothing special except that it takes the thing to the left of it and places that in the first place of the thing to the right.
So for instance &lt;code&gt;dataset %&amp;gt;% filter(name==&amp;quot;Roel&amp;quot;)&lt;/code&gt; means that we start with dataset and then filter the rows that have &lt;code&gt;&amp;quot;Roel&amp;quot;&lt;/code&gt; in the name column.
In the background it does &lt;code&gt;filter(dataset, name == &amp;quot;Roel&amp;quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Which makes code much much easier to read.
compare:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;filter_by(select( filter(dataset, year == 2012), month, children, accidents ),accidents)&lt;/code&gt; with&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dataset %&amp;gt;% 
filter(year==2012) %&amp;gt;% 
select(month, children, accidents) %&amp;gt;%
group_by(accidents)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then there the  map functions from the purr package, which essentially replace loops. Not because loops are inherently bad, but the functions focus on the operation being performed instead of the details of the loop itself. I will write about these functions once I get used to them in the future.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:6&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:6&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&#34;comments&#34;&gt;comments&lt;/h2&gt;

&lt;p&gt;A final thought about comments in the code.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Do it often.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Describe in comments mostly what your intent was, or your reasons for a function. Don&amp;rsquo;t describe the &lt;strong&gt;what&lt;/strong&gt;, but describe the &lt;strong&gt;why&lt;/strong&gt;.
Do comment as often as you find necessary. More is better then less. However don&amp;rsquo;t put future plans or errors in the comments, you will not read them. An issue tracker is a great place for those.&lt;/p&gt;

&lt;h1 id=&#34;final-thoughts&#34;&gt;Final thoughts&lt;/h1&gt;

&lt;p&gt;Think about this quote:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But looking back at this whole post, &lt;strong&gt;you&lt;/strong&gt; will probably be the violent psychopath maintaining the code.&lt;/p&gt;

&lt;p&gt;So these are some ways to help yourself in the future, try some and tell me how it went.&lt;/p&gt;

&lt;h1 id=&#34;references&#34;&gt;references&lt;/h1&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Or close to these words, I wrote it down later. - Wickham amsterdam 18-5-16
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;I don&amp;rsquo;t know exactly, but if I use the time when I created a Github Account (november third 2014) it is almost 19 months at the moment of writing.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;a tweet of mtholder: &lt;a href=&#34;https://twitter.com/kcranstn/status/370914072511791104&#34;&gt;https://twitter.com/kcranstn/status/370914072511791104&lt;/a&gt; text tweet: @mtholder motivating git: You mostly collaborate with yourself, and me-from-two-months-ago never responds to email. @swcarpentry
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;That might be too much, but it&amp;rsquo;s quite nice. if you type &amp;lsquo;closes #10&amp;rsquo; or &amp;lsquo;fix #10&amp;rsquo; github will close issue 10 and refer to that commit. I have also heard of people using seperate branches for problemfixing and using pull requests to the main branch to solve the issues (works the same with fix or closes). I have tried this approach in some cases and it helps structuring your work.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;It took me forever to find out why it was called magritr. Because most R packages are named after their function or are a weird pun on something* I couldn&amp;rsquo;t place the name. But it is a pun on a famous painting by Magrit (La trahison des images, according to wikipedia) of a pipe with the text below &amp;ldquo;ceci n`est pa une pipe&amp;rdquo; &amp;lsquo;this is not a pipe&amp;rsquo;.&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Treachery_of_Images&#34;&gt;https://en.wikipedia.org/wiki/The_Treachery_of_Images&lt;/a&gt; and for the package &lt;a href=&#34;https://cran.r-project.org/web/packages/magrittr/index.html&#34;&gt;https://cran.r-project.org/web/packages/magrittr/index.html&lt;/a&gt;&lt;br /&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;See for more information about loops &lt;a href=&#34;http://r4ds.had.co.nz/iteration.html&#34;&gt;chapter 16 (iteration)&lt;/a&gt; of the &amp;ldquo;r for datascience&amp;rdquo; book by hadley wickham. The book is still under development but is a treasuretrove of information.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:6&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to R projects</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/04/10/content/post/2016-04-10-rproject-start/</link>
      <pubDate>Sun, 10 Apr 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/04/10/content/post/2016-04-10-rproject-start/</guid>
      <description>

&lt;p&gt;It often makes sense to separate your projects. And since space is cheap you are probably creating separate folders on your computer. In RStudio you can create different projects that live in their own folder.&lt;/p&gt;

&lt;p&gt;When you start a different project the files of that project work independently from other projects. And the standard locations of your workspace and other things are also separated from the rest.&lt;/p&gt;

&lt;p&gt;In my case, for example, I have several projects and the last 10 or so are displayed in the dropdown menu:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-project-dropdown.PNG&#34; alt=&#34;Roel&#39;s last projects image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Opening a new project presents you with a screen .&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-create-new-project.PNG&#34; alt=&#34;rstudio new project image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can create a new project in a new location, in an old location or download from &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/blog/2016/03/01/version-control-start.html&#34; title=&#34;See a previous post about version control&#34;&gt;version control&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Did you try the new directory one already?&lt;/p&gt;

&lt;p&gt;In the following example, you can clone (or checkout) a file from the internet.&lt;/p&gt;

&lt;p&gt;I presume you have version control installed already, if not &lt;a href=&#34;https://stat545-ubc.github.io/git03_rstudio-meet-git.html&#34;&gt;this article&lt;/a&gt;  will help you along. Once you&amp;rsquo;ve installed git, you can use version control for all your projects. See the post version control&lt;/p&gt;

&lt;p&gt;If you click on &lt;code&gt;checkout from version control&lt;/code&gt; this will happen&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-versioncontrol.PNG&#34; alt=&#34;image of checkout from version control&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Click on git&lt;/p&gt;

&lt;p&gt;and fill in some details.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-clone-git.PNG&#34; alt=&#34;image of my repo clone&#34; /&gt;&lt;/p&gt;

&lt;p&gt;in my case I&amp;rsquo;ve dowloaded from my own repository but cloning a project from github is possible from every project.&lt;/p&gt;

&lt;p&gt;I went to the website &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples&#34;&gt;https://github.com/RMHogervorst/cleancodeexamples&lt;/a&gt; and selected the clone address. &lt;em&gt;which is usually the address ending in .git&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here the clone address at a different repository:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/clone-image.PNG&#34; alt=&#34;image of hadley&#39;s ggplot2 repo address&#34; /&gt;&lt;/p&gt;

&lt;p&gt;That is it, a short introduction to projects.&lt;/p&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further reading&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects&#34;&gt;Rstudio: Using Projects&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>From spss to R, part 4</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/04/04/content/post/2016-04-04--from-spss-to-r-part4/</link>
      <pubDate>Mon, 04 Apr 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/04/04/content/post/2016-04-04--from-spss-to-r-part4/</guid>
      <description>

&lt;p&gt;This is the second part of working with ggplot. We will combine the
packages dplyr and ggplot to improve our workflow.
When you make a visualisation you often experiment with different versions of your plot. Our workflow will be dynamic, in stead of saving every version of the plot you created, we will recreate the plot untill  it looks the way you want it.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/blog/2016/03/02/from-spss-to-r-part3.html&#34; title=&#34;a full link to the previous lesson&#34;&gt;the previous lesson&lt;/a&gt; we worked with some build in datasets. But there is often more fun in public real world datasets.&lt;/p&gt;

&lt;p&gt;We will work with the Dutch government data about higher education more info at &lt;https://www.duo.nl/open_onderwijsdata/databestanden/ho/ingeschreven/wo-ingeschr/ingeschrevenen-wo1.jsp &#34;UPDATE 2017, NEW LOCATION, THANKS GOVERNMENT...&#34;&gt;. To help you along I have already transformed the data into a more tidy format &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. The data can be found at my github repository at this link: &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/files&#34;&gt;https://github.com/RMHogervorst/cleancodeexamples/blob/master/files&lt;/a&gt;. UPDATE 2017-08-23, SPSS FORMAT HAS CHANGED IN HAVEN, SO NEW DATA (2016) WITH FILES BOTH IN SPSS AND CSV FORMAT.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Everything else is the same, but the data is newer (2016, you can still work with the 2015 data in csv format, that will never break)&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;getting-started&#34;&gt;Getting started&lt;/h1&gt;

&lt;p&gt;You will need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Internet access&lt;/li&gt;
&lt;li&gt;Rstudio&lt;/li&gt;
&lt;li&gt;a recent version of R&lt;/li&gt;
&lt;li&gt;the packages: dplyr, ggplot2, readr.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You need to understand / apply&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;chaining commands using the pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) operator&lt;/li&gt;
&lt;li&gt;opening and closing of Rstudio, the assign (&lt;code&gt;&amp;lt;-&lt;/code&gt;)  operator&lt;/li&gt;
&lt;li&gt;recently used the dplyr commands (did you do the &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/blog/2016/02/22/from-spss-to-r-part2.html&#34;&gt;second&lt;/a&gt; lesson? you&amp;rsquo;re good then)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;starting-loading-the-file-and-a-first-look&#34;&gt;Starting loading the file and a first look&lt;/h2&gt;

&lt;p&gt;Start a new project in Rstudio or open a project you created in a previous session &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.
Copy the steps in your script or the console or follow the &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/scripts/introduction-to-ggplot2-part2.R&#34;&gt;script&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#location of files: &amp;#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/files&amp;#34;&lt;/span&gt;

link&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://raw.githubusercontent.com/RMHogervorst/cleancodeexamples/master/files/duo2016_tidy.csv&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Libraries to use&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# yes I use it almost daily&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;readr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# for the use of read_csv &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# (there is also a read.csv function in base r, but it has some undesirable properties)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# load the data&lt;/span&gt;
duo2015_tidy&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; read_csv&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;link&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# This is the same file we used in: &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# https://rmhogervorst.github.io/cleancode/blog/2016/02/24/creating-tidy-data.html&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# look at the data with View(duo2015_tidy) or&lt;/span&gt;
glimpse&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# often more meaningful&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The file contains the number of students per year per gender per program in Dutch Universities between 2011 and 2015.
Look around the dataset and get a sense of what it contains. Unfortunately for non-Dutch speakers, the set is entirely in Dutch&amp;hellip;  But I will explain the variables for you so far as I know.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PROVINCIE     province, which of the twelve &lt;a href=&#34;https://en.wikipedia.org/wiki/Provinces_of_the_Netherlands&#34;&gt;provinces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GEMEENTENUMMER    municipal number    No idea what basis this has&lt;/li&gt;
&lt;li&gt;GEMEENTENAAM      municipal name  (some municipals have changed names)&lt;/li&gt;
&lt;li&gt;SOORT INSTELLING  type of university regular or small&lt;/li&gt;
&lt;li&gt;BRIN.NUMMER.ACTUEEL no idea some sort of govermental number per university&lt;/li&gt;
&lt;li&gt;INSTELLINGSNAAM.ACTUEEL   University name at this moment (some have changed over time)&lt;/li&gt;
&lt;li&gt;CROHO.ONDERDEEL       CROHO stands for Central Registry Programs Higher Education&lt;/li&gt;
&lt;li&gt;CROHO.SUBONDERDEEL    ONDERDEEL means part, and subonderdeel subpart (every program in the Netherlands has a unique number&lt;/li&gt;
&lt;li&gt;OPLEIDINGSCODE.ACTUEEL    code of the program&lt;/li&gt;
&lt;li&gt;OPLEIDINGSNAAM.ACTUEEL    Name of the program (can change of course&amp;hellip;)&lt;/li&gt;
&lt;li&gt;OPLEIDINGSVORM    type of education, voltijd means fulltime, deeltijd means part time and duaal means dual, or a mix of working and studying&lt;/li&gt;
&lt;li&gt;OPLEIDINGSFASE.ACTUEEL might be recognizable; bachelor, master or bachelor propedeuse (first year of bachelor)&lt;/li&gt;
&lt;li&gt;YEAR      Yeah, I translated that one already&lt;/li&gt;
&lt;li&gt;GENDER    is actually also a dutch word meaning the same thing&lt;/li&gt;
&lt;li&gt;FREQUENCY how many students in this particalar group&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we know the structure of the dataset we can look at parts of it.&lt;/p&gt;

&lt;h2 id=&#34;slicing-and-dicing-your-set-while-exploring&#34;&gt;Slicing and dicing your set while exploring&lt;/h2&gt;

&lt;p&gt;The most important lesson of today is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;don&amp;rsquo;t save intermediate results / datasets / images&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In SPSS if you want to look at a subset of your data you would either create a selection group or save some results to a different file. While we can do that in R, it&amp;rsquo;s better to create a pipeline of data and change some of the steps. IT saves memory (mostly not important) but even better it keeps your dataset intact and prevents a filelist of over 200 files with uninspiring and meaningless names such as: &lt;code&gt;dataset1, dataset2AFTERSAVING, dataset456&lt;/code&gt; etc. This will keep your work, your workspace and your code &lt;strong&gt;clean&lt;/strong&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;We will first look at some details in the dataset. Follow along if you like but even better would be if you try to vary some steps. Instead of  &lt;code&gt;YEAR ==2016&lt;/code&gt; take &lt;code&gt;2011&lt;/code&gt; or only take master students. Learn by making mistakes and by following up on interesting side stories.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# First filter on 2015, full time and bachelor.&lt;/span&gt;
duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; View&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will display a subsample of your data. But for every unique program there are two rows. One for males (MAN) and one for females (VROUW).
You might not care for the seperate groups and want to combine them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2015&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; 
                                OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;combinedMF &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        View&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This might seem like a lot of typing, but you can just modify the last part of the commands by adding the group_by and summarize commands.&lt;/p&gt;

&lt;p&gt;An other thing you might have noticed, is that the previous data frame result is now gone and replaced by this result. That is fine, it was temporary anyways.&lt;/p&gt;

&lt;p&gt;An other question could be if the numbers per program changed over time?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2014&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; 
                                OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;combinedMF &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        View&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However there is just to much information to compare. Let&amp;rsquo;s see if we can visualize these numbers.
Now this might look a bit odd because we will combine a chain of commands with the pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) operator and then we add layers of the plot with the plus sign (&lt;code&gt;+&lt;/code&gt;)&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; YEAR&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;combinedMF &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; combinedMF&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I agree that this endresult is less then useful. But look at the code it&amp;rsquo;s really interesting.
This is a great time to take a little excursion&lt;/p&gt;

&lt;h3 id=&#34;a-small-excursion-into-chaining&#34;&gt;a small excursion into chaining&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Think back to part 2 of this course about chaining and dplyr&lt;/em&gt;
We started with the same chain that created a the summarized data frame. That data frame can be imported by ggplot. Remember that the pipe operator puts the end result as first argument in the command after it. &lt;em&gt;dplyr = layered grammar of data manipulation&lt;/em&gt; and &lt;em&gt;ggplot2 = layered grammar of graphics&lt;/em&gt; . So we have two sets of grammar here.&lt;/p&gt;

&lt;p&gt;The code above is just a simplified, much easier to read, notation of the following code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;TEMP1 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;   summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; YEAR&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;combinedMF &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;FREQUENCY&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# do you still see where the arguments of every command are?&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; TEMP1&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; combinedMF&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see it&amp;rsquo;s hard to read what happened, or when things break, what arguments belong to which function. further more for every plot call you need to create a temporary dataset. One you will probably forget to remove afterwards.&lt;/p&gt;

&lt;p&gt;The pipe operator works with every command that starts with a data argument and there are ways to make it work with other commands. It really makes your life easier.&lt;/p&gt;

&lt;p&gt;End of excursion, why don&amp;rsquo;t we make some useful plots.&lt;/p&gt;

&lt;h2 id=&#34;making-plots-that-look-better&#34;&gt;Making plots that look better&lt;/h2&gt;

&lt;p&gt;There is a lot of information in this dataset. We will need to be more specific in our questions.
How many programs are there actually?&lt;/p&gt;

&lt;p&gt;There are 666 unique program names.&lt;/p&gt;

&lt;p&gt;What code would you use to find this out? &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Since every bachelor and masters program has a unique name and since bachelors generally give access to multiple masters, there are many many program names. But how many programs are there in the bachelor propedeuse phase?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
                                OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        distinct&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The end result is a data frame with 141 cases/ rows. Look at the data frame.&lt;/p&gt;

&lt;p&gt;Is this a combination of males and females? Or are these really all the programs?&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:6&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:6&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;So there are 141 programs and many universities. Let&amp;rsquo;s first focus on one program in different universities. Two very popular programs in the Netherlands are Psychology&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:7&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:7&#34;&gt;7&lt;/a&gt;&lt;/sup&gt; and Law.
What happens here:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Rechtsgeleerdheid&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; 
		facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Take dataset&lt;/li&gt;
&lt;li&gt;only rows with  fulltime AND first year bachelor&lt;/li&gt;
&lt;li&gt;only rows with B psychology OR B law&lt;/li&gt;
&lt;li&gt;set up ggplot with year at the x axis, frequency at y axis and group by GENDER *&lt;/li&gt;
&lt;li&gt;make a line plot, colour by GENDER, and&lt;/li&gt;
&lt;li&gt;facet (make subplots) by municipal and program&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;*&lt;/code&gt; The setting up part &lt;code&gt;ggplot()&lt;/code&gt; doesn&amp;rsquo;t draw anything yet.&lt;/p&gt;

&lt;p&gt;Look at the plot. (I have recreated it here using &lt;code&gt;ggsave(&amp;quot;plot-psylawcities.png&amp;quot;)&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;{{ site.github.url}} /images/plot-psylawcities.png&#34; alt=&#34;first plot of Psychology and Law in different cities by gender over time&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is just a first plot, it&amp;rsquo;s far from pretty. It has no title, the years at the borders of psychology and law overlap, the name of the municipal/ city is not readable, and the colors of the gender are counter intuitive. If I had used these colors, blue for males and red for females would be more in line with western culture&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:8&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:8&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Another problem is that the Amsterdam numbers for Law are much lower then for Psychology, they don&amp;rsquo;t display so well on this scale. A separate plot for Psychology and Law would be better.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_colour_manual&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;values&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;lightblue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;pink&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&amp;rsquo;s address both color (going stereotype blue and pink) and program.
After my first plot, I found the lines a bit thin, so I set the size. I also used a manual color scale.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/plot-psypinkblue.png&#34; alt=&#34;plot with different colors only psychology&#34; /&gt;&lt;/p&gt;

&lt;p&gt;One of the odd things about rstudio is that if you click on the zoom button the plot looks good, but if you use ggsave it takes the uglier version in the side viewer. I guess I could change the settings in  the ggsave command&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:9&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:9&#34;&gt;9&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&#34;advanced-ggplot&#34;&gt;Advanced ggplot&lt;/h2&gt;

&lt;p&gt;The colors in the plot are not so bright. Which is actually a good thing for printing. But in this plot it can make it hard to read.&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s use some other custom colors.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_colour_manual&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;values&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;#3399ff&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;#ff00ff&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The colors are a number, how does that work?
Colors in R, or in all sorts of programs really, can be specified with their name: &amp;ldquo;red, magenta&amp;rdquo;, &amp;ldquo;cyan&amp;rdquo;, &amp;ldquo;black&amp;rdquo; etc. Or with their html code &amp;ldquo;#000fff&amp;rdquo; pick it with this &lt;a href=&#34;http://www.w3schools.com/colors/colors_picker.asp&#34;&gt;site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Take for instance the very ugly color &amp;ldquo;Aqua&amp;rdquo;, it has the name aqua, the html code #00ffff, rgb(0,255,255) and hsl(180,100%, 50%). Using a site such as the one above can help you in picking colours. to use in your plots. Try to plot the plot above with aqua or #00ffff as one of the values.&lt;/p&gt;

&lt;p&gt;An other way to change the colors is by using a color package.
One great package is the &lt;a href=&#34;http://www.r-bloggers.com/r-using-rcolorbrewer-to-colour-your-figures-in-r/&#34;&gt;color brewer package&lt;/a&gt;. Install the package and try &lt;code&gt;RColorBrewer::display.brewer.all(n=8, exact.n=FALSE)&lt;/code&gt; to see the different colors.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This looks somewhat better.
More information about colors and creating your own colors can be found at:
&lt;a href=&#34;http://www.cookbook-r.com/Graphs/Colors_%28ggplot2%29/&#34;&gt;http://www.cookbook-r.com/Graphs/Colors_%28ggplot2%29/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the previous lesson we used different themes to customize the plots.
We can change features of the plot like the title, axis labels, axis details and many more aspects.&lt;/p&gt;

&lt;p&gt;To add a title to a plot use the ggtitle command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
		ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So this works, but with the title the axis labels for years and frequency are redundant.
To remove parts of a plot we need to modify the theme settings. A theme is used for all aspects of the plot. where the axis are, what the labels are and so forth. To modify these parts of the plot you need the &lt;code&gt;theme()&lt;/code&gt; command. Inside the theme command you give the arguments &lt;code&gt;axis.title.x= element_blank()&lt;/code&gt; to remove the x axis or &lt;code&gt;legend.position= &amp;quot;bottom&amp;quot;&lt;/code&gt; to put the legend at the bottom of the plot.&lt;/p&gt;

&lt;p&gt;You don&amp;rsquo;t need to remember them all. Use the cookbook for r or search for what you want to change online.&lt;/p&gt;

&lt;p&gt;for example the following code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;axis.title.x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# changing multiple theme settings&lt;/span&gt;
              axis.title.y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# on a temporary basis, only for this plot&lt;/span&gt;
              legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
              strip.text.y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;angle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; vjust &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# make readable&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Produces the following plot (with &lt;code&gt;ggsave(&amp;quot;psychologystudentscities.png&amp;quot;, scale = 1.5)&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/psychologystudentscities.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If you find yourself repeating the same theme changes in multiple plots, you are violating the DRY principle (Do not repeat yourself). ggplot changes are just lists in R, so you can save all the changes to a list and apply that list to your plots. for example:&lt;/p&gt;

&lt;p&gt;This is your plot&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first part is identical as before, but I&amp;rsquo;m a big fan of the minimal theme. It removes all sorts of chart junk.  However, you don&amp;rsquo;t like the way the cities are placed. You want it horizontal.
And you don&amp;rsquo;t like the labels on the axes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;axis.title.x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# changing multiple theme settings&lt;/span&gt;
              axis.title.y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# on a temporary basis, only for this plot&lt;/span&gt;
              legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
              strip.text.y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;angle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; vjust &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# make readable&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is nice, but you want to recreate the same style for many programs and like any person you hate to copy paste everything. It is time for your own theme.&lt;/p&gt;

&lt;p&gt;A ggtheme has every option that you could set defined. So it is possible to create that from scratch, I do not recommend it. The best option is to use a predefined theme and overlay your changes, like you already did above, you first called the theme_minimal() layer and than changed some theme elements.&lt;/p&gt;

&lt;p&gt;In practice:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# This is the theme, it is simply the minimal theme with the &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# modifications added. &lt;/span&gt;
studytheme &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; theme_minimal&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; 
        theme&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;axis.title.x &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# changing multiple theme settings&lt;/span&gt;
              axis.title.y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; element_blank&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# on a temporary basis, only for this plot&lt;/span&gt;
              legend.position &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
              strip.text.y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;element_text&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;angle &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; vjust &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# make readable&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Psychologie&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Psychology students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        studytheme&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now with the Law program.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;voltijd onderwijs&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSNAAM.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;B Rechtsgeleerdheid&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; group &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_line&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;colour &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; size &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; facet_grid&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; GEMEENTENAAM &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; OPLEIDINGSNAAM.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        scale_color_brewer&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; palette &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        ggtitle&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Law students in several cities over five years&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        studytheme&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure class=&#34;half&#34;&gt;
    &lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/lawstudents-clean.png&#34; alt=&#34;image&#34;&gt;
    &lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/psystudents-clean.png&#34; alt=&#34;image&#34;&gt;
    &lt;figcaption&gt;law and psychology students plots&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h1 id=&#34;summary-and-wrapping-it-up&#34;&gt;Summary and wrapping it up&lt;/h1&gt;

&lt;p&gt;In the previous lessons you learned how to make basic plots, how to select, filter and combine the dplyr verbs. This lesson you combined these skills. Furthermore you can now customize your plots, create a style/theme and apply that theme to your plots. Making it very consistent.&lt;/p&gt;

&lt;p&gt;This was the final introduction to R from SPSS. From now on, you are a R user. You know the basic commands, you can find what you are looking for online or in the help function,  and you are able to generate advanced plots.&lt;/p&gt;

&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;

&lt;p&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:http-www-r-bloggers-com-the-easiest-way-to-learn-ggplot2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:http-www-r-bloggers-com-the-easiest-way-to-learn-ggplot2&#34;&gt;0&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cookbook-r.com/Graphs/&#34;&gt;http://www.cookbook-r.com/Graphs/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;more information about themes &lt;a href=&#34;http://docs.ggplot2.org/dev/vignettes/themes.html&#34;&gt;http://docs.ggplot2.org/dev/vignettes/themes.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;use-examples-ggplot2&#34;&gt;Use examples ggplot2&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;examples of graphics. &lt;a href=&#34;http://r4stats.com/examples/graphics-ggplot2/&#34;&gt;http://r4stats.com/examples/graphics-ggplot2/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Color palettes in R. &lt;http://vis.supstat.com/2013/04/plotting-symbols-and-color-palettes/ &gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;notes&#34;&gt;NOTES&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Tidying was done in a different blog post: &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/blog/2016/02/24/creating-tidy-data.html&#34;&gt;https://rmhogervorst.github.io/cleancode/blog/2016/02/24/creating-tidy-data.html&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;R projects keep you code and workspace setting contained. So you can work with wildly different settings without resetting them between sessions.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;I mean, I had to refer to the name of this blog at least once. But I think it&amp;rsquo;s really important. I always lose track of all the subfiles, so this is much better. and faster.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;It is odd, and hadley wickham, the creator of ggplot and dplyr (which imported the pipe operator) , agrees. But this is the way it is and changing it will break the code of millions of users&amp;hellip;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;There are multiple ways to do this but I would use this &lt;code&gt;length(unique(duo2015_tidy$OPLEIDINGSNAAM.ACTUEEL))&lt;/code&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;No these are the programs in total, because of the &lt;code&gt;distinct()&lt;/code&gt; command. That is the dplyr way of selecting unique cases.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:6&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:7&#34;&gt;Psychology is arguably a study often chosen for lack of ideas: &amp;ldquo; I didn&amp;rsquo;t really know what to choose so I chose something social&amp;hellip;&amp;rdquo;. I&amp;rsquo;m not sure how many students have this attitude.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:7&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:8&#34;&gt;Or at least in the Netherlands babyblue is a common color for males. Red not so much specific for females, but pink would be.&lt;br /&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:8&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:9&#34;&gt;I actually found &lt;code&gt;ggsave(&amp;quot;nameofplot.png&amp;quot;,scale = 1.5)&lt;/code&gt; to work nicely.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:9&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Creating a package for your data set</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/03/07/content/post/2016-03-07-create-package-for-dataset/</link>
      <pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/03/07/content/post/2016-03-07-create-package-for-dataset/</guid>
      <description>

&lt;p&gt;Turning your dataset into a package is very useful for reproducable research. This tutorial is for you, even if you&amp;rsquo;ve never created a package in r.&lt;/p&gt;

&lt;p&gt;Why would you turn your dataset into a package?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;very easy to share&lt;/li&gt;
&lt;li&gt;easy to load (library(name) is easier then &lt;code&gt;load(&amp;quot;path/to/file&amp;quot;)&lt;/code&gt; or &lt;code&gt;data&amp;lt;-read.csv(&amp;quot;path/to/file&amp;quot;)&lt;/code&gt; etc.)&lt;/li&gt;
&lt;li&gt;documentation is part of the package and will never separate from data&lt;/li&gt;
&lt;li&gt;attributes of file remain&lt;/li&gt;
&lt;li&gt;nice and easy introduction to package building&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What do you need to do to create a dataset package:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step 0: locate your dataset, both raw and clean&lt;/li&gt;
&lt;li&gt;step 1: create a new project with Rstudio&lt;/li&gt;
&lt;li&gt;step 2: save the clean file&lt;/li&gt;
&lt;li&gt;step 3: create a description file&lt;/li&gt;
&lt;li&gt;step 4: describe the package with a vignette.*&lt;/li&gt;
&lt;li&gt;step 5: test and build*&lt;/li&gt;
&lt;li&gt;step 6: maintain your dataset if it changes. *&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*: Steps 4-6 are optional, but will help you in practicing for other packages.&lt;/p&gt;

&lt;p&gt;What you need:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Rstudio&lt;/li&gt;
&lt;li&gt;devtools installed&lt;/li&gt;
&lt;li&gt;a dataset that you want to turn into a package&lt;/li&gt;
&lt;li&gt;You need to know how to load a file&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this example I will make a package from my all the times I drank coffee.
I started keeping score because I realized I drank more coffee since working full time.
This is just a file which contains time stamps whenever I drank coffee. I have some missing values, because I sometimes forget, but mostly it&amp;rsquo;s correct.&lt;/p&gt;

&lt;p&gt;This file is not really useful to anybody except maybe me, but a package is quite useful for a variety of analyses. Let&amp;rsquo;s walk through the steps, follow along with your dataset.&lt;/p&gt;

&lt;h1 id=&#34;step-0-locating-your-datasets&#34;&gt;Step 0: locating your datasets&lt;/h1&gt;

&lt;p&gt;You need a dataset on your harddisk&lt;/p&gt;

&lt;h1 id=&#34;step-1-create-a-new-project&#34;&gt;Step 1: Create a new project&lt;/h1&gt;

&lt;p&gt;Create a new project in Rstudio, choose new directory, R package:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-project-package-new.PNG&#34; alt=&#34;image of starting a new project&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;naming-the-package&#34;&gt;Naming the package&lt;/h2&gt;

&lt;p&gt;Think about a simple descriptive name with the following tips:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;no spaces     Good: Coffeedata Bad: Coffee data&lt;/li&gt;
&lt;li&gt;no points     good: Coffeeproject Bad: Coffee.Project&lt;/li&gt;
&lt;li&gt;no dashes     Good: datasetCoffee. Bad:  dataset-Coffee&lt;/li&gt;
&lt;li&gt;use lowercase, CoffeeDataSet gets confusing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Naming packages is really hard, it needs to be descriptive and unique. But this is less important if you only share the package with yourself and friends.
think about the name, dataset21really is not descriptive nor helpful for you in the future.&lt;/p&gt;

&lt;h1 id=&#34;step-2-save-the-clean-file&#34;&gt;Step 2: save the clean file&lt;/h1&gt;

&lt;p&gt;Ideally you will want to save both the raw file and the cleaned dataset, with a script (or rmarkdown document) that describes the actions you took to clean the raw file.&lt;/p&gt;

&lt;p&gt;I assume that you are now in the rproject you have just started.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-coffeedata-project-empty.PNG&#34; alt=&#34;images of empty project&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Locate the file you want to put in the package. And load it so that it&amp;rsquo;s active in the environment:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-loaded-coffeedata.PNG&#34; alt=&#34;image of loaded coffeedata&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then do one of the following (replace coffeedata with your data set&amp;rsquo;s name).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;devtools&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
use_data&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;coffeedata&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use devtools directly&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;devtools&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;use_data&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;coffeedata&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command will create a data folder and put the file in there with the rda extension.&lt;/p&gt;

&lt;h1 id=&#34;step-3-create-a-description-file&#34;&gt;Step 3: create a description file&lt;/h1&gt;

&lt;p&gt;When you started the project a description file and an example function was created:
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-project-package-prepopulate.PNG&#34; alt=&#34;image of standard rstudio project&#34; /&gt;
Open the description file.&lt;/p&gt;

&lt;p&gt;I just copied this from the excellent package building book &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, please read his website:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every package must have a DESCRIPTION. In fact, it’s the defining feature of a package (RStudio and devtools consider any directory containing DESCRIPTION to be a package). To get you started, devtools::create(&amp;ldquo;mypackage&amp;rdquo;) automatically adds a bare-bones description file. This will allow you to start writing the package without having to worry about the metadata until you need to.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The minimal description will vary a bit depending on your settings, but should look something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/package-description.PNG&#34; alt=&#34;image of package description&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Fill in the meta-data of your package.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Package: name of package
Title: Use Title Case in One Line.
Version: 0.1.0 
Author: who you are
Maintainer: Who to bother when it breaks
Description: What the package does (one paragraph)
Licence: see below
LazyData: TRUE
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;a-license&#34;&gt;a license?&lt;/h3&gt;

&lt;p&gt;You might think that the license is a bit too much for a package you build. But it it&amp;rsquo;s really hard. If you don&amp;rsquo;t give a licence your data is under your copyright and no one can use it.
For datasets a &lt;a href=&#34;https://creativecommons.org/about/cc0/&#34;&gt;CC0 licence&lt;/a&gt; puts the data in the public domain and makes it free to  build upon, enhance and reuse the works for any purposes without restriction under copyright or database law.&lt;/p&gt;

&lt;p&gt;For packages that contain code (most of the packages) other licenses are better: &lt;a href=&#34;http://choosealicense.com/&#34;&gt;http://choosealicense.com/&lt;/a&gt; .&lt;/p&gt;

&lt;h2 id=&#34;a-description-of-the-file&#34;&gt;A description of the file&lt;/h2&gt;

&lt;p&gt;If you look at &lt;code&gt;?mtcars&lt;/code&gt; there is a description of the file. You want to avoid this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/failure-to-describe-package.PNG&#34; alt=&#34;image of r can&#39;t find help file&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The help file is created with&lt;/p&gt;

&lt;p&gt;&lt;code&gt;devtools::use_package_doc()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;this creates a file in the folder &lt;code&gt;R/&lt;/code&gt; . Click on the file and add stuff.
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/coffeedata-package-r.PNG&#34; alt=&#34;image of r can&#39;t find help file&#34; /&gt;&lt;/p&gt;

&lt;p&gt;See also this example in &lt;a href=&#34;https://github.com/hadley/babynames/blob/master/R/data.R&#34;&gt;hadley&amp;rsquo;s babyname package&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;step-4-describe-the-package-with-a-vignette&#34;&gt;Step 4: describe the package with a vignette.&lt;/h1&gt;

&lt;p&gt;Use the template from rstudio:
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-document-dataset.PNG&#34; alt=&#34;rstudio rdocument window&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Give it the name of your dataset&lt;/p&gt;

&lt;p&gt;This is the endresult&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-document-dataset2.PNG&#34; alt=&#34;example rstudio rdocument with coffee filled in&#34; /&gt;&lt;/p&gt;

&lt;p&gt;after you changed the files use &lt;code&gt;devtools::document()&lt;/code&gt; to create documents.&lt;/p&gt;

&lt;h1 id=&#34;step-5-test-and-build&#34;&gt;step 5: test and build&lt;/h1&gt;

&lt;p&gt;Then check your package with the check button or &lt;code&gt;devtools::check()&lt;/code&gt;. You will probably need to change some stuff based on the check. The check tries to build your package and checks for common problems. The endresult is in: /packagename.Rcheck/&lt;/p&gt;

&lt;p&gt;If your package is very simple, consisting of only documentation and a datafile, your build will be completed and works.&lt;/p&gt;

&lt;p&gt;Click on build &amp;amp; Reload and try out your new package.&lt;/p&gt;

&lt;h3 id=&#34;how-do-i-share-this-package&#34;&gt;How do I share this package?&lt;/h3&gt;

&lt;p&gt;Once installed you can use the package anytime you like with &lt;code&gt;library(package)&lt;/code&gt; But you might want to share your package with colleagues.&lt;/p&gt;

&lt;p&gt;Build a source or binary version:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.rstudio.com/images/docs/build_pane_build.png&#34; alt=&#34;rstudiowebsite image of sharing &#34; /&gt;&lt;/p&gt;

&lt;p&gt;After you build the source package, a file is created, in my case:
&amp;ldquo;coffeedata_0.1.0.tar&amp;rdquo;. That file is shareble and can be installed on someones computer. They will need to build from source.&lt;/p&gt;

&lt;p&gt;Online: upload your project using git to either Github &lt;a href=&#34;https://github.com/&#34;&gt;https://github.com/&lt;/a&gt; (many people use it, but can&amp;rsquo;t restrict access in free version) or Bitbucket &lt;a href=&#34;https://bitbucket.org/&#34;&gt;https://bitbucket.org/&lt;/a&gt; (close off your project). Or any other sharing service.&lt;/p&gt;

&lt;p&gt;If it&amp;rsquo;s on github everyone can install the file using devtools, in my case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;devtools&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;install_github&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;rmhogervorst/coffeedata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This also works on bitbucket :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;devtools&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;install_bitbucket&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;rmhogervorst/coffeedata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you download the &lt;a href=&#34;https://github.com/RMHogervorst/cleancode/raw/gh-pages/datasets/coffeedata_0.1.0.tar.gz&#34;&gt;source&lt;/a&gt; file from the website and install it manually&lt;/p&gt;

&lt;p&gt;Yes I have created the file for you. Now you all know how many coffee I drank. Even worse, you can do what you like with that information, because it&amp;rsquo;s in the public domain.&lt;/p&gt;

&lt;p&gt;See Further reading to find out more about other ways to share your package.&lt;/p&gt;

&lt;h1 id=&#34;step-6-maintain-your-dataset-if-it-changes&#34;&gt;step 6: maintain your dataset if it changes&lt;/h1&gt;

&lt;p&gt;If your dataset changes, you should update the package.&lt;/p&gt;

&lt;h3 id=&#34;problems&#34;&gt;Problems&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;I don&amp;rsquo;t have a description file or any of the other folders&amp;hellip; or devtools gives me errors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Check if your project has forbidden characters: dots, dashes or spaces.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Rcheck fails!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Check the log. The log is in the folder next to your package &lt;code&gt;/packagename.Rcheck/00check.txt&lt;/code&gt;
in my case my project is in: &lt;code&gt;Projecten\coffeedata&lt;/code&gt; and the logs are in:
 &lt;code&gt;Projecten\coffeedata.Rcheck\00check.txt&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;the folder disappears! I cant check the log.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a good thing, it means your settings are so that non failing builds are removed. Change this in Rstudio Global Options, go to packages, and uncheck the option: &lt;em&gt;clean up output after succesful R CMD check&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://r-pkgs.had.co.nz/package.html&#34;&gt;Hadley Wickham about naming and starting with a package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://r-pkgs.had.co.nz/description.html&#34;&gt;R packages book: What to put in your description file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/200486508-Building-Testing-and-Distributing-Packages&#34;&gt;Rstudio: Building checking and distributing packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Wickham, Hadley. R Packages. First edition. Sebastopol, CA: O’Reilly Media, 2015. &lt;a href=&#34;http://r-pkgs.had.co.nz/&#34;&gt;http://r-pkgs.had.co.nz/&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>From spss to R, part 3</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/03/02/content/post/2016-03-02-from-spss-to-r-part3/</link>
      <pubDate>Wed, 02 Mar 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/03/02/content/post/2016-03-02-from-spss-to-r-part3/</guid>
      <description>

&lt;p&gt;In this post we will start with a build-in dataset and some basic ggplot graphics. In the next post we will combine dplyr and ggplot to do awesome stuff with the Dutch University student counts from the previous lessons.&lt;/p&gt;

&lt;p&gt;We will work with the build-in dataset mtcars.&lt;/p&gt;

&lt;p&gt;There are many datasets in r &lt;code&gt;library(help = &amp;quot;datasets&amp;quot;)&lt;/code&gt; but in many examples online you will see the iris and mtcars examples. Find more information about the dataset with &lt;code&gt;?iris&lt;/code&gt;. As you can see it&amp;rsquo;s possible to include metadata about datasets in a package, so in the future you might want to share your data in the form of a package with all your code included.&lt;/p&gt;

&lt;p&gt;But first back to the mtcars dataset and then to graphing &lt;em&gt;(is that a word?)&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;the-mtcars-dataset&#34;&gt;The mtcars dataset&lt;/h2&gt;

&lt;p&gt;According to &lt;code&gt;?mtcars&lt;/code&gt;: &amp;ldquo;The data was extracted from the 1974
Motor Trend US magazine, and comprises fuel consumption and 10 aspects of
automobile design and performance for 32 automobiles (1973–74 models).&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The mtcars documentation gives us an example of displaying the mtcars information:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;pairs&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; main &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;mtcars data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# this is one plot next is an other&lt;/span&gt;
coplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mpg &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt; disp &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;cyl&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       panel &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; panel.smooth&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; rows &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;plotting-graphs-in-r&#34;&gt;Plotting graphs in R&lt;/h2&gt;

&lt;p&gt;R has three plotting systems, each based on different ideas. The base plot system is very fast and is very useful for quick views of your data. But you need to tinker a lot to make plots nicer.  Then there is the lattice system &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. Which is probably very useful, but I mostly use ggplot. For you ggplot might be THE reason to come to R.&lt;/p&gt;

&lt;p&gt;To make the most of ggplot, &lt;em&gt;and not go insane&lt;/em&gt;, you will need to understand the underlying principles. the gg in ggplot stand for the grammar of graphics. A concept based on the work of Wilkinson and Wills &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, and put into a graphics package by Hadley Wickham &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:this-is-quite-a-good-read&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:this-is-quite-a-good-read&#34;&gt;0&lt;/a&gt;&lt;/sup&gt;.
The most important thing to realize is this:
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/graphs-have-layers.png&#34; alt=&#34;ogres have layers image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Every graph consists of the basic data, some transformations to axes, title information and the representation of the data. In ggplot you have to specify the data, and the aesthetics (some mapping of the position of x, and y, colours and shapes). Furthermore you have to tell ggplot what type of chart you want. Bars, lines, and points are all examples of geometric objects or geoms for short.&lt;/p&gt;

&lt;h2 id=&#34;example-a-basic-scatter-plot-in-ggplot&#34;&gt;Example: a basic scatter plot in ggplot&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggplot2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
str&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mtcars&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# just to show you the variables in mtcars.&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wt&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_point&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which will look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;{{ site.github.url}} /images/ggplot2-simple-scatterplot.png&#34; alt=&#34;ggplot(data = mtcars, aes(x= mpg, y= wt) ) + geom_point()&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We called a ggplot element, specified the data, then the aesthetics so that miles per gallon (mpg) is on the x axis and weight (wt) on the Y axis.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;select the first part ggplot(data = mtcars, aes(x= mpg, y= wt) ) and execute ctrl/cmd-r&lt;/li&gt;
&lt;li&gt;what happens?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We need to tell ggplot what kind of layer to put on top. In this case we&amp;rsquo;ve added points. Also note the + sign. In dplyr we used a pipe (%&amp;gt;%) operator to link stuff together, within ggplot we literally add layers together with the + sign.&lt;/p&gt;

&lt;p&gt;Now we add some color&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wt &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We&amp;rsquo;ve specified a color in the point layer. But much more effective is to use color as an extra dimension in your plots.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  wt &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gear&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; 
&lt;span class=&#34;c1&#34;&gt;# note that we don&amp;#39;t have to tell arguments in functions what they are.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# according to ?ggplot    :&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ggplot(data = NULL, mapping = aes(), ..., environment = parent.frame())&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# the first argument is data, then follows the mapping with aes&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ?aes&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# aes(x, y, ...)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# and the first argument of aes is always x and the second is y.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# you CAN change the order of arguments, but then you WILL need to&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# explicitly call the arguments:&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;wt&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;mpg &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gear&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/ggplot2-simple-scatterplot-with-factor.png&#34; alt=&#34;ggplot(data = mtcars, aes(mpg,  wt )) + geom_point(aes(color = as.factor(gear))) &#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Did you check that lines 1 and 11 had the same output?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now I told ggplot that gear was a factor. If your dataset is clean and nicely formatted you don&amp;rsquo;t have to do this. However this dataset has only numeric values, while some columns  are actually factors.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;repeat the call from line 1 but change the geom_point with: geom_point(aes(color = gear))&lt;/li&gt;
&lt;li&gt;What did just happen?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For numeric variables, ggplot takes one color and changes the gradient from lowest to highest level of that variable. The colors for factor variables are maximaly distinct so you can identify groups easier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Try the following code
&lt;code&gt;ggplot(data = mtcars, aes(mpg,  wt )) + geom_point(color = gear)&lt;/code&gt;
and compare with:
&lt;code&gt;ggplot(data = mtcars, aes(mpg,  wt )) + geom_point(aes(color = gear))&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;What happened? Why didn&amp;rsquo;t the first work?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;but this one does:&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;ggplot(data = mtcars, aes(x= mpg, y= wt )) + geom_point( color = &amp;quot;red&amp;quot; )&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will have to think about the aes() command as something that depends on you data. A way to transform the variables from your data into graphic elements. But if you want to add a color or change the size of things that do not depend on your data, you must tell it seperately to the geom.&lt;/p&gt;

&lt;p&gt;So I said layers. let&amp;rsquo;s add layers.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wt&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; 
        geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gear&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_smooth&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;method &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lm&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# a linear model Y ~ x smoothing&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example there are three layers, a base layer, points and a smoothing
on top of the points.
As you add layers, each layer has their elements specified by you
or inherits them from the base element &lt;code&gt;ggplot()&lt;/code&gt;.
In the above example &lt;code&gt;geom_smooth()&lt;/code&gt; inherits the part [ aes(x, y) ] from
 &lt;code&gt;ggplot(data = mtcars, aes(x= mpg, y= wt))&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&#34;half&#34;&gt;
    &lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/ggplot2-simple-scatterplot-with-factor-andsmoothing.png&#34; alt=&#34;ggplot geom_point and geom smooth method=lm&#34;&gt;
    &lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/ggplot2-simple-scatterplot-with-factor-andsmoothing-geargroups.png&#34; alt=&#34;ggplot with group= as.factor gear geom_point geom smooth&#34;&gt;
    &lt;figcaption&gt;adding:  &#39;group = as.factor(gear)&#39; to aes() of ggplot leads to seperate smoothings per gear&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wt&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_smooth&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;method &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lm&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This doesn&amp;rsquo;t work, because the smoothing geom doesn&amp;rsquo;t know what data or aes to use. But if we specify them, it will work.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_point&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wt&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        geom_smooth&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;data &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; wt&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; method &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; lm&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will work through a few more examples, but see Further reading for more examples of graph types and resources with lists and lists of plots and how to make them.&lt;/p&gt;

&lt;h2 id=&#34;example-2-a-bargraph&#34;&gt;Example 2: a bargraph&lt;/h2&gt;

&lt;p&gt;A bargraph has only one aesthetic mapping:
&lt;code&gt;ggplot(data = mtcars, aes(as.factor(cyl))) + geom_bar(stat =&amp;quot;count&amp;quot;)&lt;/code&gt;
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/ggplot2-simplebargraph.png&#34; alt=&#34;bargraph mtcars&#34; /&gt;&lt;/p&gt;

&lt;p&gt;only the x aesthetic is specified, the geom is a bar (see &lt;code&gt;?geom_bar&lt;/code&gt;) and we specified that it should perform a statistic on the data. In this case it just counts the number of occurrences. But if your data is already in frequency you could use `geom_bar(stat = &amp;ldquo;identity&amp;rdquo;). For example&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dat&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        Name &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hork&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;dork&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bork&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
        Frequency &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# a very silly dataframe&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dat&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;Name&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; Frequency&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_bar&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;stat &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;identity&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/ggplot2-simplebargraph-fictionaldata.png&#34; alt=&#34;ggplot(dat, aes(Name, Frequency)) + geom_bar(stat =&amp;quot;identity&amp;quot;)&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;example-3-boxplots-violingplots-with-points-behind&#34;&gt;Example 3: boxplots, violingplots with points behind&lt;/h2&gt;

&lt;p&gt;Now a violinplot. The chickwts dataset is a small dataset of weights of chicks (baby chickens, not human ladies), with the diet they received.&lt;br /&gt;
By now you now the drill: the data is chickwts, the aes are feed and weight. Then we add a boxplot geom. See &lt;code&gt;?geom_boxplot&lt;/code&gt; for more info about changing parameters. I have displayed a violin plot, which displays more information about the underlying distribution.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;str&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chickwts&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chickwts&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;feed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_boxplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chickwts&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;feed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_violin&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/ggplot2-chickwts-violin.png&#34; alt=&#34;ggplot violinplot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Boxplots are nice, but you lose information about the middle of the distribution. So let&amp;rsquo;s plot the real distribution. &lt;code&gt;ggplot(chickwts, aes(feed, weight)) + geom_point()&lt;/code&gt; This doesn&amp;rsquo;t really help us, what about all the chicks with the same weight and same feed? The jitter geom helps you out.
&lt;code&gt;ggplot(chickwts, aes(feed, weight)) + geom_jitter()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The jitter function adds some noise to points to separate the individual points.
let&amp;rsquo;s combine and see what looks best&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chickwts&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;feed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_boxplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_jitter&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chickwts&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;feed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_boxplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_point&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;chickwts&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;feed&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; weight&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_violin&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; geom_jitter&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/ggplot2-chickwts-violin-points.png&#34; alt=&#34;chickwts violin and points on top&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I like the last one best, but for different data different visualizations are better.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;cyl&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_boxplot&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_point&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;cyl&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_violin&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_jitter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;am&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;customization&#34;&gt;Customization&lt;/h2&gt;

&lt;p&gt;Most simple plots in ggplot2 look quite good from the start, it&amp;rsquo;s a credit to Hadley Wickham that he chose ggplot2&amp;rsquo;s defaults so well. However, there are many ways to custimize your plots. Every element can change colour&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, shape, etc. But if you like to change things in multiple plots you should try to change the theme. Themes change multiple things at once. For instance:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;g &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; ggplot&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mtcars&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;cyl&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; mpg&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_violin&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;geom_jitter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; aes&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;color &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;as.factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;am&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; 
&lt;span class=&#34;c1&#34;&gt;# I saved the entire thing to a variable.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# if you select the g and press ctrl/cmd r it will display the plot again.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# even better the saved object behaves just as before. We can add things to it.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# try the following things&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_bw&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_dark&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# the addition doesn&amp;#39;t stick untill you save it to a variable&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_void&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is relatively easy to change parts of themes, or to create a whole new theme. But quite easy is also the ggtheme package, see their website [5].&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;install.packages&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ggthemes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ggthemes&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_wsj&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_tufte&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# very clean theme based on edward tufte &amp;#39;s ideas about graphs&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_base&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_excel&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# you will love this, especially the description&lt;/span&gt;
g &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; theme_fivethirtyeight&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/ggplot2-themetufte-mtcars-violin-points-color.png&#34; alt=&#34;ggthemes example with tufte&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So now you know a few graphics and the basics of ggplot use. In the next lesson we will combine dplyr and ggplot to filter, slice and dice through a dataset. Hopefully we will get some insights!&lt;/p&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.stat.ubc.ca/~jenny/STAT545A/block90_baseLatticeGgplot2.html&#34;&gt;Overview of r graphics on stat.ubc.ca, with tons of resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lmgtfy.com/?q=r+lattice+base+ggplot2&#34;&gt;a google search with &amp;ldquo;r lattice base ggplot2&amp;rdquo; gives me 26900 results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cookbook-r.com/Graphs/Bar_and_line_graphs_%28ggplot2%29/&#34;&gt; If you ever need to know any sort of plot, use the cookbook. bookmark it &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://zevross.com/blog/2014/08/04/beautiful-plotting-in-r-a-ggplot2-cheatsheet-3/&#34;&gt;beautiful graphs cheatcheat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shiny.stat.ubc.ca/r-graph-catalog/&#34;&gt;R graph catalog an interactive display of graphs including the code in ggplot2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;p&gt;[5]: ggthemes website &lt;a href=&#34;https://cran.r-project.org/web/packages/ggthemes/vignettes/ggthemes.html&#34;&gt;https://cran.r-project.org/web/packages/ggthemes/vignettes/ggthemes.html&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Explanation of lattice system and trellisplots on statmethods.net &lt;a href=&#34;http://www.statmethods.net/advgraphs/trellis.html&#34;&gt;http://www.statmethods.net/advgraphs/trellis.html&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;Wilkinson, Leland, and Graham Wills. The Grammar of Graphics. 2nd ed. Statistics and Computing. New York: Springer, 2005.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;Did you notice that both color and colour are allowed in ggplot? In  the dplyr package both summarize and summarise work.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Version control with Git</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/03/01/content/post/2016-03-01-version-control-start/</link>
      <pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/03/01/content/post/2016-03-01-version-control-start/</guid>
      <description>

&lt;h2 id=&#34;keeping-track-of-versions&#34;&gt;Keeping track of versions&lt;/h2&gt;

&lt;p&gt;You work on a project and would like to keep track of what you did.
That is why keep old versions of your files. That way you can go back if you messed up beyond recognition.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Usually that looks like this:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/versioncontrol2.png&#34; alt=&#34;filesystem without version control&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Or you use dropbox or something like it:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/dropboxversion.png&#34; alt=&#34;dropbox versions&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Other people use email. Emailing to themselves or to collaborators when they finished something.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that is fine. If it works, it works.
However in some cases you might want to go back to a previous version and work from there, or start with a variant your colleague made. That could become very difficult with these ways of versioning. Also you never know what changed in these versions untill you open the file and manually compare things. That gets tedious.&lt;/p&gt;

&lt;h2 id=&#34;version-control-software&#34;&gt;Version control software&lt;/h2&gt;

&lt;p&gt;With version control software you can create snapshots of the points where you fixed bugs, where you finished features and even better, you can  tell exactly  where versions of the file are different.&lt;/p&gt;

&lt;p&gt;The most widely used software are Mercurial, SVN and GIT. We will work with GIT, first of all because it can be used with &lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/200532077-Version-Control-with-Git-and-SVN&#34; title=&#34;Version control with git - Rstudio&#34;&gt;Rstudio&lt;/a&gt;, though svn works too, and second because it works nicely with Github.&lt;/p&gt;

&lt;p&gt;So how does Git work? Every time you reach a point in you project that you think is critical, you make a commit. You save a current state of all the files in the directory. And when you make this snapshot of your files, you can (and should) write down what you solved and what you changed since last time. In the future when you look back at your commit history you can read in what state your project was.&lt;/p&gt;

&lt;p&gt;In the next example you can see what changed in the files, without even looking at the files themselves.
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/commits_example.png&#34; alt=&#34;commits from test_dat, from github&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;branching&#34;&gt;Branching&lt;/h3&gt;

&lt;p&gt;Even better, you can start from any saved point in time and create a new version. And when you like that version better, merge it back into an other version.
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/branching.png&#34; alt=&#34;branches&#34; /&gt;
In the example above, at the second commit I branched (purple line). the third row from below is a commit in the purple branch. Then I changed something in the normal branch and finally I merged the blue and purple line in the second line from the top.&lt;/p&gt;

&lt;p&gt;You don&amp;rsquo;t have to use branching, just saving important points along the way is a great start (It would be the point where you email yourself a version, or save a new version of the file).&lt;/p&gt;

&lt;h2 id=&#34;starting-with-git&#34;&gt;Starting with Git&lt;/h2&gt;

&lt;p&gt;Git was developed by people at Linux because their other version control software was hard to work with [^1]. Git is designed to work with a distributed nonlinear workflow&amp;hellip; Which means that everyone can work at any time at their version of software and you can merge those versions together. What you need to know is that it works, it&amp;rsquo;s free, works on all systems, and that many people use it. You can use it for your projects, even if you work alone. It helps keeping your files under control and makes it easy to go back to previous versions of your files. It is not a backup solution (please make backups!) and it is not a unicorn [^2]. But how do you work with git?&lt;/p&gt;

&lt;h3 id=&#34;graphical-user-interfaces-gui-for-git&#34;&gt;graphical user interfaces (gui) for git&lt;/h3&gt;

&lt;p&gt;Git lives in the command line, you need to navigate to the right folder on your computer within the command line, and type the right commands. Unfortunately I always forget what the commands are. But for people like me there is a GUI for windows that takes care of many things. But I would actually recommend Sourcetree for windows (mac also). It&amp;rsquo;s a graphical user interface where you keep track of all your repositories. It&amp;rsquo;s a great tool, see &lt;a href=&#34;https://www.youtube.com/watch?v=1lBdlh3AGSc&#34;&gt;this&lt;/a&gt; youtube video for a short [14 mins] tutorial into sourcetree.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Do I need to install all this new sofware? I&amp;rsquo;m just coding for fun!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;No, you don&amp;rsquo;t have to. All I would recommend is to &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;download Git&lt;/a&gt; and install it. Rstudio has gitsupport build in, you only need to install git on your system and tell rstudio where to find it. After that you can click icons.&lt;/p&gt;

&lt;h3 id=&#34;rstudio-and-git&#34;&gt;Rstudio and Git&lt;/h3&gt;

&lt;p&gt;According to &lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/200532077-Version-Control-with-Git-and-SVN&#34;&gt;Rstudio&lt;/a&gt;, you will have to activate git support after you have downloaded and installed it to your computer.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to Global Options (from the Tools menu)&lt;/li&gt;
&lt;li&gt;Click Git/SVN&lt;/li&gt;
&lt;li&gt;Click &amp;lsquo;Enable version control interface for RStudio projects&amp;rsquo;&lt;/li&gt;
&lt;li&gt;If necessary, enter the path for your Git or SVN executable where provided.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/enabling-git-rstudio.PNG&#34; alt=&#34;enabling git in rstudio example&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So, how do you use version control within Rstudio?&lt;/p&gt;

&lt;h1 id=&#34;rstudio-project-and-git&#34;&gt;Rstudio project and git.&lt;/h1&gt;

&lt;p&gt;Start a new project
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-create-new-project.PNG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I chose an empty project in a new directory&lt;/p&gt;

&lt;p&gt;and then click &amp;lsquo;Create a git repository&amp;rsquo;
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-new-project-enablegit.PNG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The repo and real folder on windows 8.1 look like this.
&lt;figure class=&#34;half&#34;&gt;
    &lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-empty-git.PNG&#34; alt=&#34;image&#34;&gt;
    &lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/folderview-new-git-project.PNG&#34; alt=&#34;image&#34;&gt;
    &lt;figcaption&gt;rstudio and the real folder with hidden folders showing&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;When you start a new project a Rproject file is placed in the folder that contains all the project settings you have. But when you enable git, a .gitignore file is also placed in your folder. That file tells git which files not to track for changes. Rproject makes sure that the the temporary r files are not tracked, because temporary files will be recreated every time and tracking them is useless. In my case I have turned on the &amp;lsquo;show hidden files&amp;rsquo; option in windows. If you don&amp;rsquo;t have that on (and you don&amp;rsquo;t have to) you will only see the gitignore file (with no name) and the rstudioproject file.&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s look back at rstudio git tab.&lt;/p&gt;

&lt;h2 id=&#34;git-version-control-within-rstudio-your-first-commit&#34;&gt;Git version control within Rstudio: your first commit&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-git-first-commit.PNG&#34; alt=&#34;&#34; /&gt;
I have added the second file, the icon changes to a green A (short for: add to repository), the first one shows two yellow questionmarks (short for: not tracked, not changed, I think).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add the two files of your project and click &amp;lsquo;commit&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A new window will open:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-git-commit-window.PNG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The left part of the screen shows what files are in the commit, the bottom part displays the changes since last commit. Green means added, red means subtracted.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on the second file in your commit, the bottom part displays what has changed.&lt;/li&gt;
&lt;li&gt;Write a commit message, never commit without a message, if you don&amp;rsquo;t have a description, it probably wasn&amp;rsquo;t worth committing. The message does not have to be long, short is better. in this case I used: &amp;ldquo;init commit&amp;rdquo; That just tells me it was the first commit before I did anything.&lt;/li&gt;
&lt;li&gt;Click &amp;lsquo;commit&amp;rsquo; when you typed your description.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;a window will open with a description of what happened.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-git-commit-message.PNG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;When you return to the main view of rstudio you will see that the git tab has changed a bit, there are no files (because nothing has changed yet since your commit 2 seconds ago) and next to the gear wheel it says: &amp;lsquo;master&amp;rsquo; . This is the branch you are on right now. By default the first branch is master.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s create a new file&lt;/p&gt;

&lt;h2 id=&#34;git-version-control-within-rstudio-your-first-new-file&#34;&gt;Git version control within Rstudio: your first new file.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create a new file and fill it with some code or:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# This is a awesome function&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# It takes a number and gives you &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# the corresponding letter in the&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# alphabet.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 2016-02-27&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# YOUR name &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Then save it in scripts/  (yes, you must create that folder as well, or don&amp;rsquo;t I&amp;rsquo;m not the police&amp;hellip;)&lt;/li&gt;
&lt;li&gt;add it to the repo (clicking it will tell git to track that file from now on)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It will look like this
&lt;figure class=&#34;half&#34;&gt;
    &lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-commit1.PNG&#34; alt=&#34;before tracking&#34;&gt;
    &lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-commit2.PNG&#34; alt=&#34;after tracking&#34;&gt;
    &lt;figcaption&gt;rstudio adding files to commit before and after&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s look at the history of your commits, click on the clock in the git tab.
Mine looks like this:
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-commit-history.PNG&#34; alt=&#34;rstudio commit history&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Note the commit message, it says what the commit adds to the repo. Try to write your messages as if you fulfull a order and discribe the contents. For example: &amp;ldquo;adds count_messages function that counts messages send to the user&amp;rdquo;
or, &amp;ldquo;fix issue #2 can&amp;rsquo;t work with arrays&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;That way you can scan through your commits and see what changed where. When you click on a commit you can see what changed since the commit before.&lt;/p&gt;

&lt;h2 id=&#34;some-questions&#34;&gt;some questions&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Will version control eat up all my hard disk space?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No, first of all all r scripts are essentially plain text files and take up little space and second, git only saves what changed since the last time. So the total file size should not go up that much. And third, space is cheap, you will not easily run out of space on modern computers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nice! Can I add my data files to a git repo as well?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is not recommended to add datafiles to a repo. I think it can work with plain text files such as .txt, .csv, .tdv . But many other files can&amp;rsquo;t be read by git, so it treats them as binary files. Git can only see that the file has changed, but doesn&amp;rsquo;t know WHAT changed. So it saves the new version as a whole. If you have some large binary files that change often, they will eat up a lot of space. There is a git large file system but I don&amp;rsquo;t know how it works yet.
Do add example csv files or smaller files if you&amp;rsquo;d like to.&lt;/p&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/200532077-Version-Control-with-Git-and-SVN&#34;&gt;Git in Rstudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;git website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/?s=git&#34;&gt;r-blogger.com all articles about git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atlassian.com/git/tutorials/comparing-workflows/centralized-workflow&#34;&gt;Atlassian company of Sourcetree, has a long read about branching models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://r-bio.github.io/intro-git-rstudio/&#34;&gt;r-bio example of git and rstudio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;best resource&lt;/strong&gt; is &lt;a href=&#34;https://stat545-ubc.github.io/git00_index.html&#34; title=&#34;pages about git&#34;&gt;https://stat545-ubc.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;[^1]: Linus Torvald (the main man behind linux) actually said he wouldn&amp;rsquo;t touch subversion with a ten-foot pole. &lt;a href=&#34;https://git.wiki.kernel.org/index.php/LinusTalk200705Transcript&#34;&gt;https://git.wiki.kernel.org/index.php/LinusTalk200705Transcript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[^2]: &lt;em&gt;Chasing unicorns, the pursuit of something that’s, for all intents and purposes, unobtainable as unicorns don&amp;rsquo;t exist.&lt;/em&gt; Meaning it doesn&amp;rsquo;t magically solve all the problems other version control software has.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tidying your data</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/02/24/content/post/2016-02-24-creating-tidy-data/</link>
      <pubDate>Wed, 24 Feb 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/02/24/content/post/2016-02-24-creating-tidy-data/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;To make analyses work we often need to change the way files look.
Sometimes information is recorded in a way that was very efficient for input but not workable for your analyses. In other words, the data is messy and we need to
make it tidy.&lt;/p&gt;

&lt;p&gt;Tidy data means &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Each variable forms a column.&lt;/li&gt;
&lt;li&gt;Each observation forms a row.&lt;/li&gt;
&lt;li&gt;Each type of observational unit forms a table.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Today we will work with the DUO dataset about the number of students per program in the past 5 years &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; which was used in lesson 2 of &lt;a href=&#34;{{ site.github.url }}/blog/2016/02/22/from-spss-to-r-part2.html&#34;&gt;from-spps-to-r&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The raw datafile in r looks like this:
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/tidy-duo-before.PNG&#34; alt=&#34;messy data duo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Which is efficient in space, but not useful for analyses. For many analyses you will need to refer to multiple columns. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;is the total number of people (both males and females) in 2012 different from the total in 2015 in the regular bachelor propedeuses?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The format of the raw file is  also called the wide format.&lt;br /&gt;
What we want is a long format like this:
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/tidy-duo-endresult.PNG&#34; alt=&#34;tidy data duo&#34; /&gt;
Where every observation (the number of people in the group) has it&amp;rsquo;s own row.&lt;/p&gt;

&lt;p&gt;What you need to know before we start:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the dplyr package, the pipe (%&amp;gt;%) operator, see&lt;a href=&#34;{{ site.github.url }}/blog/2016/02/22/from-spss-to-r-part2.html&#34;&gt;from-spss-to-r-2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;subsetting, data frames, basic manipulation of data&lt;/li&gt;
&lt;li&gt;how to install packages, see &lt;a href=&#34;{{ site.github.url }}/blog/2016/02/20/from-spss-to-r-part1.html&#34;&gt;from-spss-to-r-1&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;preparation&#34;&gt;Preparation&lt;/h3&gt;

&lt;p&gt;Set up a project or clean your workspace in r. Follow the instructions by copying the code or see the script &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/scripts/tidyr-on-duo-data.R&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# we will use the tidy r package&lt;/span&gt;
install.packages&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;tidyr&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;readr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;tidyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
link&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://www.duo.nl/open_onderwijsdata/images/01.%20Ingeschrevenen%20wo-2015.csv&amp;#34;&lt;/span&gt;
ingeschreven_wo_2015&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;read_csv2&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;link&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; trim_ws &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#uses the ; notation therefore csv2&lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ingeschreven_wo_2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we look at the tail end of the data.frame we see some weird cases, some are empty and some are  summary variables.&lt;/p&gt;

&lt;h2 id=&#34;tasks&#34;&gt;Tasks&lt;/h2&gt;

&lt;p&gt;To get to tidy data we need to do a few things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;remove final two rows that contain whitespaces and totals&lt;/li&gt;
&lt;li&gt;shape the data into frequencies per year per gender&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;removing-the-final-two-rows&#34;&gt;Removing the final two rows&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;ingeschreven_wo_2015&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2415&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2417&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;  
&lt;span class=&#34;c1&#34;&gt;#show the bottom part of the data.frame &lt;/span&gt;
duo2015&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;ingeschreven_wo_2015&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2416&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2417&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# compare:&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;tail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;ingeschreven_wo_2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# with&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;tail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;shape-the-data-into-frequencies-per-year-per-gender&#34;&gt;Shape the data into frequencies per year per gender&lt;/h3&gt;

&lt;p&gt;Check the description in the vignette to see some examples and use cases of tidyr.  &lt;code&gt;vignette(&amp;quot;tidy-data&amp;quot;)&lt;/code&gt;
First we shape the file from  wide to long format, the columns 13 - 22
contain both year and gender. Which I would like to have seperated.
In this first step we gather all the data from the columns 13 to 22
and put turn them into cases.
I think this is equivalent to Restructure in SPSS?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; gather&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; frequency&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; View&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you look at this temporary file you see that it contains 24150 cases  and only 14 columns. Compared to the 2415 cases and 22 columns in the original set.&lt;br /&gt;
Unfortunately the 13th column contains both year and gender. Let&amp;rsquo;s fix this.&lt;/p&gt;

&lt;h3 id=&#34;separating-the-year-gender-column&#34;&gt;Separating the year-gender column&lt;/h3&gt;

&lt;p&gt;Again this is temporary file. Only when we are happy with the endresult wil we save the file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; gather&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; frequency&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        separate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;year&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;gender&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        arrange&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`OPLEIDINGSNAAM ACTUEEL`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; gender&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;  
		&lt;span class=&#34;c1&#34;&gt;# sort on name, year gender&lt;/span&gt;
        View &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That works, let&amp;rsquo;s create a new datafile. The commands remain the same but we assign the entire thing to a new name:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;duo2015_tidy&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;duo2015  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        gather&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; FREQUENCY&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        separate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;YEAR&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;GENDER&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        arrange&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`OPLEIDINGSNAAM ACTUEEL`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; YEAR&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; GENDER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We left out the View command, because that would show it to the Viewer, but we need a new data.frame. The last command in the chain, &lt;code&gt;arrange&lt;/code&gt; , does not really change the file, but orders the rows in a different way.
The next step could be saving it to a new csv file. But something is bothering me.&lt;/p&gt;

&lt;h2 id=&#34;cleaning-up-some-variablenames&#34;&gt;Cleaning up some variablenames&lt;/h2&gt;

&lt;p&gt;Some of the variable names (columnnames) contain spaces, for example: OPLEIDINGSNAAM ACTUEEL. we can access those variables with the backtick: &lt;code&gt;duo2015_tidy$`OPLEIDINGSNAAM ACTUEEL`&lt;/code&gt;  but it&amp;rsquo;s not pretty, often confusing and prone to mistakes. Let&amp;rsquo;s replace the columnnames with a bar in place of the space.First the command then the explanation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;gsub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;duo2015_tidy&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The command &lt;code&gt;names()&lt;/code&gt;  returns the variablenames, the command gsub uses pattern recognition and  replacement (for more info see &lt;code&gt;?gsub&lt;/code&gt;).
The first argument of gsub is what to recognize, (&amp;rdquo; &amp;ldquo;) meaning spaces
the second argument is the replacement. I chose a bar (&amp;ldquo;-&amp;rdquo;), but nothing (&amp;ldquo;&amp;rdquo;) or a dot (&amp;ldquo;.&amp;rdquo;) would work equaly well.
The third argument is the vector to apply this principle on, the names of the variables in this case. Finally we assign the endresult of that command to names(duo2015).&lt;/p&gt;

&lt;p&gt;So in one line we replaced the spaces in the names of the variables and assigned the new columnnames.&lt;/p&gt;

&lt;p&gt;Then save it to a file:
&lt;code&gt;write_csv(duo2015_tidy, &amp;quot;files/duo2015_tidy.csv&amp;quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That&amp;rsquo;s it, we&amp;rsquo;re done. Your data is tidy. and ready for analyses or plots.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;Wickham, Hadley. “Tidy Data.” Journal of Statistical Software 59, no. 10 (2014). doi:10.18637/jss.v059.i10.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;&lt;a href=&#34;https://www.duo.nl/open_onderwijsdata/databestanden/ho/Ingeschreven/wo_ingeschr/Ingeschrevenen_wo1.jsp&#34;&gt;https://www.duo.nl/open_onderwijsdata/databestanden/ho/Ingeschreven/wo_ingeschr/Ingeschrevenen_wo1.jsp&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>From spss to R, part 2</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/02/22/content/post/2016-02-22-from-spss-to-r-part2/</link>
      <pubDate>Mon, 22 Feb 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/02/22/content/post/2016-02-22-from-spss-to-r-part2/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;In this lesson we will open a .sav file in Rstudio and manipulate the data.frame. We will select parts of the file and create some simple overviews. First time with R? No problem, see lesson &lt;a href=&#34;{{ site.github.url }}/blog/2016/02/20/from-spss-to-r-part1.html#introduction&#34; title=&#34;From spss to R, part 1&#34;&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;toc
{:toc}&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;download-a-sav-spss-file&#34;&gt;Download a .sav (SPSS) file&lt;/h2&gt;

&lt;p&gt;I downloaded the following dataset from DUO (Dienst uitvoering onderwijs): [&lt;strong&gt;Aantal wo ingeschrevenen (binnen domein ho)&lt;/strong&gt;][3].
This dataset has a &lt;span title=&#34;creative commons version 0&#34;&gt; cc0 &lt;/span&gt; declaration, which means it is in the public domain and we can do anything we want with this &lt;span title=&#34;thank you Dutch Goverment!&#34; &gt; file. &lt;/span&gt;
More information about the file can be found in the &lt;a href=&#34;https://www.duo.nl/open_onderwijsdata/images/Toelichting%2001.%20Ingeschrevenen%20wo.pdf&#34; title=&#34;all in Dutch I&#39;m afraid&#34;&gt;Toelichting.pdf&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;UPDATE 2017-08-23: DUO HAS UPDATED THEIR SITE, BREAKING EVERYTHING. THIS IS CURRENLTY THE DOWNLOAD PAGE: &lt;a href=&#34;https://www.duo.nl/open_onderwijsdata/databestanden/ho/ingeschreven/wo-ingeschr/ingeschrevenen-wo1.jsp&#34;&gt;https://www.duo.nl/open_onderwijsdata/databestanden/ho/ingeschreven/wo-ingeschr/ingeschrevenen-wo1.jsp&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We can already work with this file, because it is in an open format, but for this exercise I will transform it to a .sav file. &lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/scripts/dplyr-example-duo.R&#34; title=&#34;Github example of csv -&amp;gt; .sav with haven&#34;&gt;See the transformation here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Download the .sav &lt;a href=&#34;{{ site.github.url }}/datasets/ingeschrevenwo2015.sav&#34;&gt;file&lt;/a&gt; to start. Do remember where you put the file, you will need it later.
Or let R download the file, even better for reasons of &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/tags/#reproducibility&#34; title=&#34;all posts about repro-research&#34;&gt;reproducability&lt;/a&gt;.
Consider starting a new &lt;a href=&#34;https://rmhogervorst.github.io/cleancode/tags/#rproject&#34; title=&#34;with a rProject you files will be more organized&#34;&gt;project&lt;/a&gt; for this example.&lt;/p&gt;

&lt;h1 id=&#34;opening-the-file-in-rstudio&#34;&gt;Opening the file in Rstudio&lt;/h1&gt;

&lt;p&gt;Fire up your trusty rstudio.&lt;/p&gt;

&lt;p&gt;You will need the following packages:
haven, dplyr. Click on install:
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/installing-packages-rstudio.PNG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;and fill in the names, or type `install.packages(&amp;ldquo;haven&amp;rdquo;, &amp;ldquo;dplyr&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;Follow the description below or look at the complete script at:&lt;a href=&#34;https://github.com/RMHogervorst/cleancodeexamples/blob/master/scripts/dplyr-example-duo.R&#34;&gt;github.com/RMHogervorst/cleancodeexamples&lt;/a&gt;. The script and this page are more or less the same (spelling might be better here ;p ).&lt;/p&gt;

&lt;h3 id=&#34;opening-the-spss-file-and-getting-it-in-r&#34;&gt;Opening the SPSS file and getting it in R&lt;/h3&gt;

&lt;p&gt;{% highlight r linenos %}&lt;/p&gt;

&lt;h1 id=&#34;necessary-packages&#34;&gt;necessary packages: ####&lt;/h1&gt;

&lt;p&gt;library(haven)
library(dplyr)&lt;/p&gt;

&lt;h1 id=&#34;location-of-the-datafile-online&#34;&gt;location of the datafile online&lt;/h1&gt;

&lt;p&gt;link &amp;lt;- &amp;ldquo;&lt;a href=&#34;https://cdn.rawgit.com/RMHogervorst/cleancode/gh-pages/datasets/duo2016.sav&amp;quot;&#34;&gt;https://cdn.rawgit.com/RMHogervorst/cleancode/gh-pages/datasets/duo2016.sav&amp;quot;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;update-2017-08-23-this-is-a-new-spss-file-from-2016-data&#34;&gt;UPDATE 2017-08-23 THIS IS A NEW SPSS FILE FROM 2016 DATA.&lt;/h1&gt;

&lt;h1 id=&#34;load-the-sav-file-into-r-using-the-link&#34;&gt;load the .sav file into R using the link&lt;/h1&gt;

&lt;p&gt;wo2015 &amp;lt;- read_sav(link)
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;So we activated the necessary packages, saved a link to the datafile, told the &lt;code&gt;read_sav()&lt;/code&gt; command where to find the file, and finally assigned the output of the command to a name &lt;code&gt;wo2015&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;exploration-of-the-data-frame-in-base-r&#34;&gt;Exploration of the data frame in base-R&lt;/h3&gt;

&lt;p&gt;The following commands are very often the first things you will use when you get your hands on a new dataset.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;str&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# str is short for structure&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# what are the columnsnames?&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# create a table&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;sapply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;#shows the top part of the data, &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# there is also a tail() function you could try.&lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;SOORT.INSTELLING&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Rstudio interface already gives you all sorts of information. Just click on all the things in the environment window.
the structure command &lt;code&gt;str()&lt;/code&gt; displays in your console, and is identical to what Rstudio tells you if you click the blue button in front of the data.frame.
The table command is very useful, but when there are many values, you can get a cleaner look by &lt;code&gt;View(table())&lt;/code&gt;. The &lt;code&gt;sapply()&lt;/code&gt; command is one you might use a lot in the future, but know now that it repeats a function over the columns of your data.frame and gives you a simple result back.
Most of the columns are of class character, some are numeric, and two are of the class &amp;ldquo;labelled&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;When we used the command &lt;code&gt;View(table(wo2015$SOORT.INSTELLING))&lt;/code&gt; there were actually three commands in sequence.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;take column SOORT.INSTELLING from dataframe wo2015: &lt;code&gt;wo2015$SOORT.INSTELLING&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;create a table of that: &lt;code&gt;table()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;put the result into the Viewer: &lt;code&gt;View()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When looking at the endresult from the last command, you can see the frequencies of the types of SOORT INSTELLING (type of university).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do the same thing (display a table of frequencies) with INSTELLINGSNAAM.ACTUEEL (name of university)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How many universities are there?&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;some-haven-and-spss-specific-things&#34;&gt;Some Haven and SPSS specific things&lt;/h3&gt;

&lt;p&gt;As you know SPSS cannot work with factor (nominal) values.
You have to tell SPSS that the variable is a nominal variable
and you have to create numbered values, with a label assigned to the values &lt;em&gt;(3 = male, 4 = female)&lt;/em&gt;.
When you import a .sav file into R that information can get lost. But on the other hand you might want to use the numbered information. As an compromise the haven package imports the numbers and the labels. So can we find the labels?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kp&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# no, that just tells us that it&amp;#39;s labelled. &lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;attributes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# the command attributes gives you back all the metadata&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see the labels and numbers. 1 = deeltijd (part time education),
2 = duaal (), 3 is voltijd (full time)
The attributes command works on everything try: &lt;code&gt;attributes(wo2015[1,2])&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So we can display the labels with number. but we would rather use that information
in R. R has no problem with nominal variables. And furthermore you won&amp;rsquo;t make
mistakes about which form of eduction your talking about.&lt;/p&gt;

&lt;p&gt;the haven package has a function as_labeled. So let&amp;rsquo;s make the OPLEIDINGSVORM column a bit more informative:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;as_factor&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now look back at wo2015
Nothing has changed!
That&amp;rsquo;s right, you need to assign the result of the operation back to a column&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM2 &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; as_factor&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;OPLEIDINGSVORM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Do the same thing to OPLEIDINGSFASE.ACTUEEL&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;data-manipulation-with-dplyr&#34;&gt;data manipulation with dplyr&lt;/h2&gt;

&lt;p&gt;Data manipulation was sometimes hard with r. However the &lt;a href=&#34;https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html&#34; title=&#34;Dplyr is a package for manipulating dataframes. this link is an introduction by the creator&#34;&gt;dplyr&lt;/a&gt; package changed everything.&lt;/p&gt;

&lt;h2 id=&#34;dplyr-functions&#34;&gt;dplyr Functions&lt;/h2&gt;

&lt;p&gt;There are 7 &amp;lsquo;verbs&amp;rsquo; that do all the work.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;filter() (and slice())
arrange()
select() (and rename())
distinct()
mutate() (and transmute())
summarise()
sample_n() and sample_frac()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Filter filters rows, select selects columns, distinct is a variant of unique and mutate creates new variables. These verbs are tools, the plyrs of a dataframe. Very generic tools that help you select and filter your data.
All the verbs have the same arguments: first argument = dataframe, the next arguments are for the function.&lt;/p&gt;

&lt;p&gt;But don&amp;rsquo;t believe me on my word, let&amp;rsquo;s get to work.&lt;/p&gt;

&lt;h3 id=&#34;select&#34;&gt;SELECT&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;SELECT (dataframe, variablename1, variablename2, etc)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Select is used to select variables (columns) in your data frame.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;kn&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;dplyr&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSVORM2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;j2012.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; j2013.MAN &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have selected 4 variables. as you can see in the output. It also says: Source: local data frame [2,417 x 4]  meaning 2417 cases and 4 variables.&lt;/p&gt;

&lt;h3 id=&#34;filter&#34;&gt;FILTER&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;FILTER (dataframe, ways to filter)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Filter selects cases (rows of the dataframe).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Limburg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The endresult is a data.frame [91 x 24] with all columns but
 with only the cases in the Limburg province&lt;/p&gt;

&lt;h3 id=&#34;combining-filter-and-select&#34;&gt;combining FILTER and SELECT&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Limburg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;PROVINCIE&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSVORM2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;j2012.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; j2013.MAN &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I will show you a more readable form later on, but this works.
The data frame has the 91 cases from the filter action and the 4 columns from the select action. This even works the other way around:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSVORM2&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;j2012.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; j2013.MAN &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Limburg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But not always:
&lt;code&gt;filter(select(wo2015, OPLEIDINGSVORM2,j2012.MAN, j2013.MAN ), PROVINCIE == &amp;quot;Limburg&amp;quot;)
&lt;/code&gt; will not work (try it).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Why not?&lt;/em&gt;
The different functions accept data.frames as input and give a data.frame as output. The data.frame from the &lt;strong&gt;select&lt;/strong&gt; action does not contain the column PROVINCIE. Therefore the &lt;strong&gt;filter&lt;/strong&gt; function can&amp;rsquo;t select on that variable.&lt;/p&gt;

&lt;h3 id=&#34;arrange-distinct&#34;&gt;ARRANGE &amp;amp; DISTINCT&lt;/h3&gt;

&lt;p&gt;The functions &lt;code&gt;arrange()&lt;/code&gt; and &lt;code&gt;distinct()&lt;/code&gt; sort the data and select the unique values from a data frame:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;arrange&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; GEMEENTENUMMER&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# data frame [2,417 x 24] all cases, all variables.&lt;/span&gt;
distinct&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; GEMEENTENAAM&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# data frame [16 x 24]  (all the variables, only unique gemeentenamen)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;mutate&#34;&gt;MUTATE&lt;/h3&gt;

&lt;p&gt;MUTATE(dataframe, name_of new variable = action).
Mutate creates new variables from other variables.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s find the difference between 2015 and 2014 in males.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mutate(wo2015, from14to15M = j2015.MAN - j2014.MAN)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ok, but what happened?
We can&amp;rsquo;t see the new variable from14to15M, it is there because the output says:
&lt;code&gt;Variables not shown: CROHO.ONDERDEEL (chr), [......] from14to15M (dbl)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s see.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;test&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;test&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Scroll to the end of the viewer or use &lt;code&gt;test$from14to15M&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An other way would be to select the variables first.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But these nested commands become complicated very fast. You lose the overview of your actions. But since 2014 we can use a new way to type commands in R.&lt;/p&gt;

&lt;h1 id=&#34;piping-chaining-and-dplyr&#34;&gt;Piping / chaining and dplyr&lt;/h1&gt;

&lt;p&gt;With the pipe operator (%&amp;gt;%) you can chain the commands together.
The functions work the same but it is much easier to read.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#from:&lt;/span&gt;
select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# to:&lt;/span&gt;
wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# or even better&lt;/span&gt;
wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# much easier to read! &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The pipe operator puts the data.frame from the left side as first argument in the right side.&lt;/p&gt;

&lt;p&gt;Read the pipe operator as THEN:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	mutate&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; j2015.MAN &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; j2014.MAN&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	select&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;from14to15M&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# take the dataframe, THEN mutate                       THEN select these variables.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Take the data.frame, THEN mutate                       THEN select these variables.
The commands follow in the way that you use them instead of nested in each other.&lt;/p&gt;

&lt;h3 id=&#34;summarize-summarise-both-work&#34;&gt;SUMMARIZE / SUMMARISE (both work)&lt;/h3&gt;

&lt;p&gt;Use summarize to apply functions over groups of cases. For instance the mean of an entire column.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;summarize&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# if one value is missing (NA)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# there is no mean value. &lt;/span&gt;
summarize&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;wo2015&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# this way we remove the missings&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But perhaps you would like to know the mean number of students per opleidingsfase?
Summarize works with &lt;code&gt;group_by&lt;/code&gt;, let&amp;rsquo;s use that pipe operator again:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSFASE.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Chaining can make things very easy.
Let&amp;rsquo;s take numbers in zuid-holland only&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
	filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zuid-Holland&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# R will continue on the following line&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSFASE.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;# It also helps in readability&lt;/span&gt;
        summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Grouping can be done on multiple levels and with multiple arguments:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;
        summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zuid-Holland&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Limburg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# | means or&lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSFASE.ACTUEEL&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# That was an OR operator, there is also an AND.&lt;/span&gt;
wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zuid-Holland&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt;  
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSVORM2&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; 
        summarise&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;mean2015_males &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.MAN&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; na.rm &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; number &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# n() gives a count&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;summarize&lt;/code&gt; command can make multiple columns (remember that every output is also a dataframe).&lt;/p&gt;

&lt;p&gt;Finally a filter action with numbers. Just to show you that that works as well.
We start with all the cases, &lt;strong&gt;THEN&lt;/strong&gt; only take the cases (rows) where variable j2011.VROUW has less or equal to 10, &lt;strong&gt;THEN&lt;/strong&gt; take only the propedeuse cases &lt;strong&gt;THEN&lt;/strong&gt; filter the cases with more then 10 cases and &lt;strong&gt;THEN&lt;/strong&gt; group the cases by provincie, and &lt;strong&gt;THEN&lt;/strong&gt; count the number of cases per province.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;wo2015 &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2011.VROUW &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# so less or equal to 10 women in 2011&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;OPLEIDINGSFASE.ACTUEEL &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;propedeuse bachelor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# multipe filters? no problem.&lt;/span&gt;
        filter&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;j2015.VROUW &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# more then 10 in 2015. &lt;/span&gt;
        group_by&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;PROVINCIE&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&amp;gt;%&lt;/span&gt; summarize&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;number_of_programs &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; n&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In other words:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In every province, how many programs had less then 10 women in 2011 and more then 10 in 2015?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;review&#34;&gt;Review&lt;/h1&gt;

&lt;p&gt;In this lesson you have learned to open .sav files with haven,
how to change labelled values from the Haven package, and worked with most of the dplyr commands.&lt;/p&gt;

&lt;h2 id=&#34;next-time&#34;&gt;Next time:&lt;/h2&gt;

&lt;p&gt;dplyr is also called the grammar of data manipulation.
In the next lesson we will take on the grammar of graphics with ggplot2,
see you then.&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;p&gt;[3]: &lt;https://www.duo.nl/open_onderwijsdata/databestanden/ho/Ingeschreven/wo_ingeschr/Ingeschrevenen_wo1.jsp &gt; &amp;ldquo;Because this was the first dataset I found, but this dataset is actually useful for me in my work as well&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h3&gt;

&lt;p&gt;The following introduction is better than I could have made:&lt;/p&gt;

&lt;p&gt;and here is some background information&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html&#34;&gt;https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>From spss to R, part 1</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/02/20/content/post/2016-02-22-from-spss-to-r-part1/</link>
      <pubDate>Sat, 20 Feb 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/02/20/content/post/2016-02-22-from-spss-to-r-part1/</guid>
      <description>

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;This whole blog is devoted to R and clean coding in R. But what if you want to start with R? There are millions of websites devoted to learning R. just look at the number of hits on a certain search machine.
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/google_search_spss_r.PNG&#34; alt=&#34;google search results&#34; /&gt;
Most of these hits start with the basics and slowly work your way up to more advanced examples.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is often one reason to start with R: you want to achieve something that doesn&amp;rsquo;t work in other programs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is not a dedicated R programming course, there are a gazillion really great courses( see below &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;).
So I will only show you a few basics, which I think you need. Any specifics can be found in a google search. really, it&amp;rsquo;s very easy.&lt;/p&gt;

&lt;p&gt;The goal of these three lessons is to show you how things work, to load a dataset from spss into R and to create a plot. Because plotting is one of the reasons people switch sides and join the R-community.&lt;/p&gt;

&lt;h1 id=&#34;this-lesson&#34;&gt;This lesson&lt;/h1&gt;

&lt;p&gt;This lesson is about Rstudio, basics, and we will import data from spss.
Datamanipulation takes place in &lt;a href=&#34;{{site.github.url}}/blog/2016/02/22/from-spss-to-r-part2.html#introduction&#34; title=&#34;lesson 2: haven and dplyr&#34;&gt;lesson 2&lt;/a&gt; and in lesson 3 we will make beautiful plots.  The approach is hands on, I want you to do all the things, go through all the motions and start working. Start making mistakes and learn from them.&lt;/p&gt;

&lt;p&gt;We will first install R and Rstudio. R is the program, and Rstudio is a very useful shell around R. Rstudio helps you organize your scripts and data and helps in codecompletion and a million other things. Furthermore, it looks a bit like spss.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Content
{:toc}&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;installing-the-software&#34;&gt;installing the software&lt;/h2&gt;

&lt;p&gt;You will need the latest version of R itself &lt;a href=&#34;https://cran.rstudio.com/&#34;&gt;R&lt;/a&gt;, and also download the latest version of Rstudio from &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34;&gt;Rstudio.com/download&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;start-rstudio&#34;&gt;Start Rstudio&lt;/h2&gt;

&lt;p&gt;You have installed Rstudio, congratulations!&lt;/p&gt;

&lt;p&gt;The main screen looks like this:
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-bare.PNG&#34; alt=&#34;Rstudio main&#34; /&gt;&lt;/p&gt;

&lt;p&gt;With&lt;/p&gt;

&lt;figure class=&#34;half&#34;&gt;
    &lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-packages-files-plots-history-environment.PNG&#34; alt=&#34;image&#34;&gt;
    &lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-new-open.PNG&#34; alt=&#34;image&#34;&gt;
    &lt;figcaption&gt;many hidden options right and left&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;working-with-r&#34;&gt;Working with R&lt;/h2&gt;

&lt;p&gt;You can work interactively in the console (the bottom part in the next picture) and you can work with scripts (in the top part).&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/rstudio-script-console.PNG&#34; &gt;
    &lt;figcaption&gt; script and console &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;To simplify your work, you can create functions or scripts that automate stuff. In R this can be taken further. Everyone can make packages that contain useful functions and their documentation. Installed packages can be activated by the code &lt;code&gt;library(name_of_package)&lt;/code&gt; . When activated, the functions from that package can be used in your scripts and in the console.&lt;/p&gt;

&lt;p&gt;Tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;open your version of Rstudio. open a new R script.&lt;/li&gt;
&lt;li&gt;copy the following code to that new script (you will see changes in color):&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;{% highlight r linenos %}&lt;/p&gt;

&lt;h1 id=&#34;oh-my-god-a-script&#34;&gt;Oh my god a script!&lt;/h1&gt;

&lt;h1 id=&#34;comments-start-with-a-pound-symbol-aka-hashtag&#34;&gt;comments start with a pound symbol (aka hashtag).&lt;/h1&gt;

&lt;h1 id=&#34;the-following-line-installs-the-packages&#34;&gt;The following line installs the packages&lt;/h1&gt;

&lt;h1 id=&#34;install-packages-c-ggplot2-dplyr-haven&#34;&gt;install.packages(c(&amp;ldquo;ggplot2&amp;rdquo;, &amp;ldquo;dplyr&amp;rdquo;, &amp;ldquo;haven&amp;rdquo;))&lt;/h1&gt;

&lt;p&gt;this line is not code and should thus be commented out&lt;/p&gt;

&lt;p&gt;ggplot()&lt;/p&gt;

&lt;h1 id=&#34;activate-the-package-ggplot2-in-the&#34;&gt;activate the package ggplot2 in the&lt;/h1&gt;

&lt;p&gt;#next line with the library command&lt;/p&gt;

&lt;h1 id=&#34;then-try-line-9-again&#34;&gt;then try line 9 again.&lt;/h1&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;uncomment line 5&lt;/li&gt;
&lt;li&gt;execute part of the script by selecting the line with your mouse and pressing ctrl-R or just put the cursor on the line and press ctrl-R.&lt;/li&gt;
&lt;li&gt;comment out line 7&lt;/li&gt;
&lt;li&gt;execute line 9, you will see an error. Why?&lt;/li&gt;
&lt;li&gt;activate the ggplot2 package with the library command&lt;/li&gt;
&lt;li&gt;try to execute line 9 again&lt;/li&gt;
&lt;li&gt;what has changed?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You found that the function ggplot() was activated after activating the ggplot2 package. You might have spotted that every line you execute is displayed in the console. That is where the R program really lives. Copy the next part to a new script:&lt;/p&gt;

&lt;h3 id=&#34;getting-help&#34;&gt;Getting help&lt;/h3&gt;

&lt;p&gt;{% highlight r %}&lt;/p&gt;

&lt;h1 id=&#34;quite-helpful-to-describe-what-you-want-to&#34;&gt;quite helpful to describe what you want to&lt;/h1&gt;

&lt;h1 id=&#34;do-with-this-script-here&#34;&gt;do with this script here.&lt;/h1&gt;

&lt;p&gt;library(ggplot2) # you already activated this package anyway&lt;/p&gt;

&lt;h1 id=&#34;the-or-help-commands-inform-you-about-commands&#34;&gt;the ? or help() commands inform you about commands&lt;/h1&gt;

&lt;p&gt;help(&amp;ldquo;ggplot&amp;rdquo;)&lt;/p&gt;

&lt;h1 id=&#34;or&#34;&gt;or&lt;/h1&gt;

&lt;p&gt;?ggplot
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;The help files give you a description of the function, usage and how the arguments work. And at the bottom are some examples. The help files are often somewhat technical but if you look at the examples (and try them) you will find out how things work. Another great place is the vignettes.&lt;/p&gt;

&lt;p&gt;Vignettes are long form documentation, often describing every function in the package, practical use, examples and more.&lt;/p&gt;

&lt;p&gt;Or type the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;RSiteSearch&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;vignette&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But the best advice is this: try google.&lt;/p&gt;

&lt;p&gt;Really, the R community is huuuuuge! Type your question and somewhere on stackoverflow, r-mailinglists or other websites, someone else has had the same question you have. If I need to find out how a function works, I type &lt;code&gt;?function&lt;/code&gt; if I want something else, I search for it online.&lt;/p&gt;

&lt;p&gt;To be more specific, use the following format in your search: [r] [package you want to use] [function if any] [&amp;hellip; your problem]
for example
&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/example_search.PNG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;from-spss-to-r&#34;&gt;From SPSS to R&lt;/h1&gt;

&lt;h2 id=&#34;r-specifics&#34;&gt;R specifics&lt;/h2&gt;

&lt;p&gt;SPSS works with datafiles (.sav), R works internally with several data representations. We will almost exclusively work with data.frames and vectors.
Dataframes look and feel just like spss file. for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;copy and execute the first 2 lines below.&lt;/li&gt;
&lt;li&gt;use the View command or click on the blue-grey table icon in the right of the screen. next to df.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;df &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;data.frame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;gp &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;factor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;rep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;letters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; each &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
                 y &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; rnorm&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#this creates a dataframe with letters&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# and standard normal distributed values.  &lt;/span&gt;
View&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;df&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# or click  next to table on the icon on the right.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# or display it in the console:&lt;/span&gt;
df&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This opens a view you are familiar with in spss, however you cannot change values here.
So data.frames are just like datafiles in spss. Internaly data frames are just lists with vectors of the same length. So what is a vector? Copy the following script and try to find out.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;df&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;gp &lt;span class=&#34;c1&#34;&gt;# also try to type this. &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# after the dollarsign rstudio will suggest the columns of the dataframe&lt;/span&gt;
df&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;y &lt;span class=&#34;c1&#34;&gt;# will display all the values of the y column. &lt;/span&gt;
df&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;i_made_this &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; rnorm&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#see the documentation of rnorm with ?rnorm&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# now look at df again, it has an extra column. &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# the &amp;lt;- (arrow) assigns values. &lt;/span&gt;
&lt;span class=&#34;kp&#34;&gt;subset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;df&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# there are multiple ways to select parts of your data&lt;/span&gt;
df&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# try to find out &lt;/span&gt;
df&lt;span class=&#34;p&#34;&gt;[,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# what all these things&lt;/span&gt;
df&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# do. &lt;/span&gt;
g&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# going to the next&lt;/span&gt;
      &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;26&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# line is no problem&lt;/span&gt;
g
&lt;span class=&#34;c1&#34;&gt;#  ----------&amp;gt; in the environment is now a g value with in it numbers 1 to 30&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#  g is a vector. can we add this vector to the dataframe?&lt;/span&gt;
df&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;oh_yes_you_can&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;g   &lt;span class=&#34;c1&#34;&gt;# we assign g to this variable&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;importing-data-from-spss&#34;&gt;Importing data from SPSS.&lt;/h2&gt;

&lt;p&gt;There are multiple packages that import spss files. Many people use the foreign package, but a new one is the haven package.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install the haven package.&lt;/li&gt;
&lt;li&gt;Once installed, activate the package.&lt;/li&gt;
&lt;li&gt;read the documentation on read_sav with ?read_sav&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will cheat a bit and let you create a .sav file and read it in afterwards, but please try it with other spss files.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;write_sav&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;df&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;~/df.sav&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# this saves the file in your working dir (see console)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# or find the whole path to f.i. your working directory in MY case&lt;/span&gt;
write_sav&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;df&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;C://Users/roel/Downloads/df.sav&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# that should save the file to &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#your downloads (once you changed it to your settings). &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# the following line reads the file (pick your .sav file) and assigns it to df2 &lt;/span&gt;
df2&lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;read_sav&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;file.choose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# you could also specify your &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# file with &amp;#34;path/to/your/file.sav&amp;#34; instead of file.choose().&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The end result is a data.frame with the name df2 which would be identical to df.&lt;/p&gt;

&lt;p&gt;In the next lesson we will manipulate dataframes, in lesson 3 we will make awesome graphics.&lt;/p&gt;

&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/migrating-from-spss-to-r-rstats/&#34;&gt;introduction on r-bloggers.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/?s=spss&#34;&gt;all the r-bloggers post with spss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/translate2r-easy-switch-from-spss-to-r-by-using-common-concepts-like-temporary-and-column-wise-missing-values/&#34;&gt;spss code in R, rbloggers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.r-bloggers.com/translate2r-and-translatespss2r-implanting-spss-functionality-into-r/&#34;&gt;spss to R, rbloggers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;r-courses&#34;&gt;R courses&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;&lt;a href=&#34;https://www.coursera.org/learn/r-programming&#34;&gt;https://www.coursera.org/learn/r-programming&lt;/a&gt; &amp;ldquo;Coursera R programming: This is a great course, not sure if it&amp;rsquo;s still free&amp;rdquo;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;&lt;a href=&#34;https://www.codeschool.com/courses/try-r&#34;&gt;https://www.codeschool.com/courses/try-r&lt;/a&gt; &amp;ldquo;Codeschool, I have not tried this one, don&amp;rsquo;t know&amp;rdquo;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;&lt;a href=&#34;https://www.datacamp.com/courses/free-introduction-to-r&#34;&gt;https://www.datacamp.com/courses/free-introduction-to-r&lt;/a&gt; &amp;ldquo;Datacamp: I&amp;rsquo;ve heard great things from this course&amp;rdquo;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;&lt;a href=&#34;https://www.rstudio.com/resources/training/online-learning/&#34;&gt;https://www.rstudio.com/resources/training/online-learning/&lt;/a&gt; &amp;ldquo;By the Rstudio people&amp;rdquo;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Portioning projects</title>
      <link>http://rmhogervorst.nl/cleancode/blog/2016/02/14/content/post/2016-02-14-portioning-projects/</link>
      <pubDate>Sun, 14 Feb 2016 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/blog/2016/02/14/content/post/2016-02-14-portioning-projects/</guid>
      <description>

&lt;p&gt;Often we write programs to automate things. The programs range from simple to complex. But in essence, you always do the same thing:&lt;/p&gt;

&lt;p&gt;You are trying to solve a problem.&lt;/p&gt;

&lt;p&gt;A common pitfall, &lt;em&gt;at least for me&lt;/em&gt;, is that you start out to big. What you need to do is start simple and small, and only if your simple thing works, increase the complexity. Separate parts of the program need to be separate functions.&lt;/p&gt;

&lt;h2 id=&#34;code-to-solve-a-problem&#34;&gt;Code to solve a Problem&lt;/h2&gt;

&lt;p&gt;Your higher aim is for your code to  solve a large and important Problem. For instance, taking many values and compute other values on the way.&lt;/p&gt;

&lt;p&gt;But to get to the solving of the big Problem (with a capital P), you need to overcome small problems (small p). One way to solve your Problem is to put everything into one script,  or one function. But I would like to argue for the use of modules. Make one project for your big and important Problem in Rstudio. Make small functions or modules for the little problems. Make one or two functions that combine the small parts. Create small scripts for every function or combine multiple functions in one script. But keep it small.&lt;/p&gt;

&lt;p&gt;In other words: create simple functions that are really good at one thing. Then combine them into a larger whole.
This is called modular programming.&lt;/p&gt;

&lt;h3 id=&#34;why-is-this-better&#34;&gt;Why is this better?&lt;/h3&gt;

&lt;p&gt;Small modules can be optimized to perform one thing really well.&lt;/p&gt;

&lt;p&gt;Small modules are more readable for you in the future and for others if they want to contribute.&lt;/p&gt;

&lt;p&gt;Small modules are much easier to test. Make a test that inputs the right sort of input and see if it creates the output you want. Make a test imputing the wrong sort of input, and see that it throws an error.&lt;/p&gt;

&lt;p&gt;Modular programming also makes it easier to add new functions. You can reuse modules (refactoring) or simply add a new module that extends your program.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rmhogervorst.nl/cleancode/img/project_philosophy.png&#34; alt=&#34;distinction one script approach and modular approach&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;planning-your-project&#34;&gt;Planning your project&lt;/h1&gt;

&lt;p&gt;How do you start?&lt;/p&gt;

&lt;h3 id=&#34;imagine-the-way-your-code-should-work-when-finished&#34;&gt;Imagine the way your code should work when finished&lt;/h3&gt;

&lt;p&gt;This is a perfect moment to start your documentation. How will someone use this code? What are the options? What type of data are allowed? &lt;em&gt;Don&amp;rsquo;t think that no one will read it, you will be one of the people who need to understand your past you.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;All these questions lead to logical submodules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;check the options that a user imputed.&lt;/li&gt;
&lt;li&gt;What are sensible default options.&lt;/li&gt;
&lt;li&gt;Check for datatype (do you allow numeric, factors, etc ), create errors.&lt;/li&gt;
&lt;li&gt;Describe what the user does in the documentation.&lt;/li&gt;
&lt;li&gt;Then write out how your code performs those actions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The endresult will be a list of submodules and their description.&lt;/p&gt;

&lt;h2 id=&#34;start-as-small-as-possible&#34;&gt;Start as small as possible&lt;/h2&gt;

&lt;p&gt;You have thought of all the ways your code should work. But you need to start simple. Think of the minimal viable product, a function that is so basic that it should work. It should be a small step into solving your big Problem. For instance, transform the variable. Or check that the input is a data.frame or whatever.&lt;/p&gt;

&lt;p&gt;Test your small problem. Fix your code.&lt;/p&gt;

&lt;h3 id=&#34;start-on-one-of-the-other-submodules&#34;&gt;Start on one of the other submodules&lt;/h3&gt;

&lt;p&gt;Make small modules that do one thing and one thing only. Make automated tests that will inform you if the module doesn&amp;rsquo;t work anymore.  When your submodule works, start a new one, repeat until your Problem is solved.
Start small and make incremental changes.&lt;/p&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Modular_programming&#34;&gt;Modular Programming, wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://rmhogervorst.nl/cleancode/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>hogervorst.rm@gmail.com (Roel M. Hogervorst)</author>
      <guid>http://rmhogervorst.nl/cleancode/about/</guid>
      <description>&lt;p&gt;Hi I&amp;rsquo;m Roel
and this is a my blog.&lt;/p&gt;

&lt;p&gt;I have an abundance of social links at the bottom of the page to reach me.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://rmhogervorst.nl/cleancode/well-known/security.txt&#34;&gt;security issues ? See link&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>